////
/// @group drawers
////

/// The z-index to use for fixed navigation drawers.
/// @type Number
/// @see md-btn-fixed-z-index
/// @see md-menu-z-index
/// @see md-picker-inline-z-index
/// @see md-snackbar-z-index
/// @see md-toolbar-z-index
$md-drawer-z-index: 16 !default;

/// The transiiton time for the drawer to enter or leave the view.
/// @type Number
$md-drawer-transition-time: $md-transition-time * 2 !default;

/// The drawer's max width on mobile devices when positioned to the left of the screen.
/// @type Number
$md-drawer-mobile-max-width: 320px;

/// The margin for the drawer on mobile devices when positioned to the left of the screen.
/// @type Number
$md-drawer-mobile-margin: 56px;

/// The width for a mini drawer on mobile devices.
/// @type Number
$md-drawer-mobile-mini-width: $md-font-icon-size + 24px !default;

/// The drawer's default width on tablet devices when positioned to the left of the screen.
/// @type Number
$md-drawer-tablet-width: 256px !default;

/// The drawer's default width on desktop screens when positioned to the left o fthe screen.
/// @type Number
$md-drawer-desktop-width: $md-drawer-tablet-width !default;

/// The drawer's max width on desktop screens when positioned to the left of the screen.
$md-drawer-desktop-left-max-width: 400px;

/// The mini drawer width on desktops and tablets.
/// @type Number
$md-drawer-desktop-mini-width: $md-font-icon-size + (24px * 2) !default;


/// Includes the styles for drawers.
///
/// @example scss - Example Usage SCSS
///   @include react-md-drawers;
///
/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should
///   be included.
@mixin react-md-drawers($include-media: $md-media-included) {
  @if $include-media {
    @include react-md-drawers-media;
  }

  .md-drawer {
    transition-duration: $md-drawer-transition-time;
    transition-property: transform;

    &--fixed {
      height: 100vh;
      position: fixed;
      top: 0;
      z-index: $md-drawer-z-index;
    }

    &--inline {
      display: inline-block;
      height: 100%;
    }

    &--left {
      left: 0;
    }

    &--right {
      right: 0;
    }

    &--active {
      transform: translate3d(0, 0, 0);
    }
  }

  .md-list--drawer {
    height: 100vh;
    overflow-y: auto;
  }

  .md-overlay--drawer.md-overlay--drawer {
    transition-duration: $md-drawer-transition-time;
  }
}

/// Includes the styles for drawers on mobile devices.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-mobile-media} {
///     @include react-md-drawers-mobile;
///   }
@mixin react-md-drawers-mobile {
  .md-drawer {

    &--left {
      max-width: $md-drawer-mobile-max-width;
      transform: translate3d(-100vw, 0, 0);
      width: calc(100vw - #{$md-drawer-mobile-margin});
    }

    &--right {
      transform: translate3d(100vw, 0, 0);
      width: 100vw;
    }

    &--mini.md-drawer--mini {
      width: $md-drawer-mobile-mini-width;
    }
  }

  .md-list-tile--mini.md-list-tile--mini {
    padding-left: 12px;
    padding-right: 12px;
  }

  .md-drawer-relative--mini.md-drawer-relative--mini {
    margin-left: $md-drawer-mobile-mini-width;
  }
}


/// Includes the styles for drawers on mobile portrait devices.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-mobile-portrait-media} {
///     @include react-md-drawers-mobile-portrait;
///   }
@mixin react-md-drawers-mobile-portrait {
  .md-toolbar ~ .md-list--drawer {
    height: calc(100vh - #{$md-toolbar-mobile-portrait-height});
  }
}


/// Includes the styles for drawers on mobile landscape devices.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-mobile-landscape-media} {
///     @include react-md-drawers-mobile-landscape;
///   }
@mixin react-md-drawers-mobile-landscape {
  .md-toolbar ~ .md-list--drawer {
    height: calc(100vh - #{$md-toolbar-mobile-landscape-height});
  }
}


/// Includes the styles for drawers on tablets.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-tablet-media} {
///     @include react-md-drawers-tablet;
///   }
@mixin react-md-drawers-tablet {
  .md-drawer {

    &--left {
      max-width: $md-drawer-desktop-left-max-width;
      transform: translate3d(-$md-drawer-desktop-width, 0, 0);
      width: $md-drawer-tablet-width;
    }

    &--right {
      transform: translate3d(100%, 0, 0);
    }

    &--mini.md-drawer--mini {
      width: $md-drawer-desktop-mini-width;
    }
  }

  .md-list-tile--mini.md-list-tile--mini {
    padding-left: 24px;
    padding-right: 24px;
  }

  .md-drawer-relative {
    margin-left: $md-drawer-tablet-width;
  }

  .md-toolbar ~ .md-list--drawer {
    height: calc(100vh - #{$md-toolbar-tablet-height});
  }
}


/// Includes the styles for drawers on desktop screens.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-desktop-media} {
///     @include react-md-drawers-desktop;
///   }
@mixin react-md-drawers-desktop {
  $diff-width: $md-drawer-tablet-width != $md-drawer-desktop-width;

  .md-drawer {
    @if $diff-width {
      width: $md-drawer-desktop-width;
    }
  }

  @if $diff-width {
    .md-drawer-relative {
      margin-left: $md-drawer-desktop-width;
    }
  }

  .md-drawer-relative--mini.md-drawer-relative--mini {
    margin-left: $md-drawer-mobile-mini-width;
  }
}

/// Includes the media queries and styles for drawers.
///
/// @example scss - Example Usage SCSS
///   @include react-md-drawers-media;
@mixin react-md-drawers-media {
  @media #{$md-mobile-media} and (max-width: #{$md-desktop-min-width - 1}) {
    @include react-md-drawers-mobile;
  }

  @media #{$md-mobile-portrait-media} {
    @include react-md-drawers-mobile-portrait;
  }

  @media #{$md-mobile-landscape-media} {
    @include react-md-drawers-mobile-landscape;
  }

  @media #{$md-tablet-media} {
    @include react-md-drawers-tablet;
  }

  @media #{$md-desktop-media} {
    @include react-md-drawers-desktop;
  }
}
