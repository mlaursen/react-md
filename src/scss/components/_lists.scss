////
/// @group lists
////

/// Boolean if the styles for lists with icons should be included.
/// @type Boolean
$md-list-include-icon: true !default;

/// Boolean if the styles for lists with avatars should be included.
/// @type Boolean
$md-list-include-avatar: true !default;

/// Boolean if the styles for lists with two lines of text should be included.
/// @type Boolean
$md-list-include-two-lines: true !default;

/// Boolean if the styles for lists with three lines of text should be included.
/// @type Boolean
$md-list-include-three-lines: true !default;

/// Boolean if the styles for lists with controls should be included.
/// @type Boolean
$md-list-include-controls: true !default;

/// Boolean if inline lists should be included. This will display a list horizontally
/// instead of vertically.
/// @type Boolean
$md-list-include-inline: true !default;

/// Boolean if the `.md-list-unstyled` should be included by default.
/// @type Boolean
$md-list-include-unstyled-class-name: true !default;

/// The amount of padding to apply to the `List` component when displayed inline.
/// @type Number
$md-list-inline-padding: 0 !default;

/// This is really the keyline to use for lists. When a list item is inset, this will
/// be applied to the tile.
/// @type Number
$md-list-left-padding: 72px !default;

/// The additional margin top and bottom to apply to a divider in a list.
/// @type Number
$md-list-divider-margin: 8px !default;

/// The max depth for nested items in lists. This is used to generate
/// some additional padding on nested lists.
/// @type Number
$md-list-nested-items-depth: 2 !default;

/// A number for how much to increment the nested depth multiplier
/// @type Number
$md-list-nested-items-increment: .5 !default;

/// The initial padding to start the nested items at.
/// @type Number
$md-list-nested-items-initial-padding: $md-list-left-padding !default;

/// The top and bottom padding to apply to a list on mobile devices.
///
/// @see md-list-padding
/// @type Number
$md-list-mobile-padding: 8px !default;

/// The font size to apply to the primary text in a list item on mobile devices.
///
/// @see md-list-primary-font-size
/// @type Number
$md-list-mobile-primary-font-size: 16px !default;

/// The font size to apply to the secondary text in a list item on mobile devices.
///
/// @see md-list-secondary-font-size
/// @type Number
$md-list-mobile-secondary-font-size: 14px !default;

/// The height for a single line list item on mobile devices.
///
/// @see md-list-height
/// @type Number
$md-list-mobile-height: 48px !default;

/// The height for a list item that has an avatar on mobile devices.
///
/// @see md-list-avatar-height
/// @type Number
$md-list-mobile-avatar-height: 56px !default;

/// The height for a list item that has two lines of text on mobile devices.
///
/// @see md-list-two-lines-height
/// @type Number
$md-list-mobile-two-lines-height: 72px !default;

/// The height for a list item that has three lines of text on mobile devices.
///
/// @see md-list-three-lines-height
/// @type Number
$md-list-mobile-three-lines-height: 88px !default;

/// The margin top for icons or avatars in a three line list item on mobile devices.
///
/// @see md-list-three-lines-addon-margin-top
/// @type Number
$md-list-mobile-three-lines-addon-margin-top: 14px !default;

/// The top and bottom padding for a list on desktop screens.
///
/// @see md-list-padding
/// @type Number
$md-list-desktop-padding: 4px !default;

/// The font size to apply to a list item's primary and secondary text on desktop screens.
///
/// @see md-list-primary-font-size
/// @see md-list-secondary-font-size
/// @type Number
$md-list-desktop-font-size: 13px !default;

/// The height for a single line list item on desktop screens.
///
/// @see md-list-height
/// @type Number
$md-list-desktop-height: 40px !default;

/// The height for a list item that has an avatar on desktop screens.
///
/// @see md-list-avatar-height
/// @type Number
$md-list-desktop-avatar-height: 48px !default;

/// The height for a list item that has two lines of text on desktop screens.
///
/// @see md-list-two-lines-height
/// @type Number
$md-list-desktop-two-lines-height: 60px !default;

/// The height for a list item that has three lines of text on desktop screens.
///
/// @see md-list-three-lines-height
/// @type Number
$md-list-desktop-three-lines-height: 76px !default;

/// The margin top to use for an icon or an avatar in a three list list item on desktop
/// screens.
///
/// @see md-list-three-lines-addon-margin-top
/// @type Number
$md-list-desktop-three-lines-addon-margin-top: 12px !default;

/// The amount of padding to apply to a list. This value will take precedence over the mobile
/// and desktop variables so that this padding will be applied on all devices instead of switching
/// based on media queries.
///
/// @see md-list-mobile-padding
/// @see md-list-desktop-padding
/// @type Number
$md-list-padding: null !default;

/// The font size to use for the primary text in a list item. This value will take precedence over
/// the mobile and desktop variables so the font size is applied on all devices instead of switching
/// based on media queries.
///
/// @see md-list-mobile-primary-font-size
/// @see md-list-desktop-font-size
/// @type Number
$md-list-primary-font-size: null !default;

/// The font size to use for the secondary text in a list item. This value will take precedence over
/// the mobile and desktop variables so the font size is applied on all devices instead of switching
/// based on media queries.
///
/// @see md-list-mobile-secondary-font-size
/// @see md-list-desktop-font-size
/// @type Number
$md-list-secondary-font-size: null !default;

/// The height to use for a list item. This value will take precedence over the mobile and desktop values
/// so that the height is applied on all devices instead of based on media queries.
///
/// @see md-list-mobile-height
/// @see md-list-desktop-height
/// @type Number
$md-list-height: null !default;

/// The height to use for a list item that has an avatar. This value will take precedence over the mobile
/// and desktop values so the height is applied on all devices instead of based on media queries.
///
/// @see md-list-mobile-avatar-height
/// @see md-list-desktop-avatar-height
/// @type Number
$md-list-avatar-height: null !default;

/// The height to use for a list item that has two lines of text. This value will take precedence over the
/// mobile and desktop values so the height is applied on all devices instead of based on media queries.
///
/// @see md-list-mobile-two-lines-height
/// @see md-list-desktop-two-lines-height
/// @type Number
$md-list-two-lines-height: null !default;

/// The height to use for a list item that has three lines of text. This value will take precedence over the
/// mobile and desktop values so the height is applied on all devices instead of based on media queries.
///
/// @see md-list-mobile-three-lines-height
/// @see md-list-desktop-three-lines-height
/// @type Number
$md-list-three-lines-height: null !default;

/// The margin top apply to icons or avatars that appear in a list with three lines of text. This value will
/// take precedence over the mobile and desktop values so the margin is applied on all devices instead of based
/// on media queries.
///
/// @see md-list-mobile-three-lines-addon-margin-top
/// @see md-list-desktop-three-lines-addon-margin-top
/// @type Number
$md-list-three-lines-addon-margin-top: null !default;

/// The line-height to apply any icons or avatars that are placed to the left or right of the text in a list item.
/// This is really only applied if the line-height is altered in a parent element.
///
/// @type Number
$md-list-addon-line-height: $md-line-height !default;

/// A placeholder for removing the default margin, padding and list styles
%md-list-unstyled {
  list-style: none;
  margin: 0;
  padding-left: 0;
}

/// Includes the styles for lists.
///
/// @example scss - Example Usage SCSS
///   @include react-md-lists;
///
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the lists should be styled
///     for the light theme.
/// @param {Number} nested-items-depth [$md-list-nested-items-depth] - The maximum depth for
///     nested items.
/// @param {Number} nested-items-increment [$md-list-nested-items-increment] - The amount the
///     nested item's padding should be incremented by.
/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should
///     be included.
/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with
///     icons should be included.
/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists
///     with avatars should be included.
/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for
///     lists with two lines of text should be included.
/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for
///     lists with three lines of text should be included.
/// @param {Boolean} include-controls [$md-list-include-controls] - Boolean if the styles for lists
///     with controls to be included.
/// @param {Boolean} include-unstyled [$md-list-include-unstyled-class-name] - Boolean if the `.md-list-unstyled`
///     class name should also be generated.
/// @param {Boolean} include-inline [$md-list-include-inline] - Boolean if inline lists should also be created.
/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense styles
///     for icons should be included.
@mixin react-md-lists(
  $light-theme: $md-light-theme,
  $nested-items-depth: $md-list-nested-items-depth,
  $nested-items-increment: $md-list-nested-items-increment,
  $include-media: $md-media-included,
  $include-icon: $md-list-include-icon,
  $include-avatar: $md-list-include-avatar,
  $include-two-lines: $md-list-include-two-lines,
  $include-three-lines: $md-list-include-three-lines,
  $include-controls: $md-list-include-controls,
  $include-unstyled: $md-list-include-unstyled-class-name,
  $include-inline: $md-list-include-inline,
  $include-dense-icons: $md-font-icon-include-dense
) {
  @if $include-unstyled {
    .md-list-unstyled {
      @extend %md-list-unstyled;
    }
  }

  .md-list {
    @extend %md-list-unstyled;

    background: get-color('card', $light-theme);
    user-select: none;

    @if $md-list-padding != null {
      padding-bottom: $md-list-padding;
      padding-top: $md-list-padding;
    }

    .md-avatar,
    .md-icon {
      flex-shrink: 0;
    }

    .md-divider:not(.md-list-item--divider-vertical) {
      margin-bottom: $md-list-divider-margin;
      margin-top: $md-list-divider-margin;
    }

    .md-list:not(.md-list--menu) {
      background: inherit;
    }
  }

  .md-list-tile {
    align-items: center;
    display: flex;
    padding-left: $md-default-padding;
    padding-right: $md-default-padding;
    text-decoration: none;
    transition-duration: $md-transition-time;
    transition-property: background;

    @if $md-list-height != null {
      height: $md-list-height;
    }

    &--active {
      background: get-color('hover', $light-theme);
    }
  }

  .md-list-item {
    &--inset {
      padding-left: $md-list-left-padding;
    }

    &--flex {
      display: flex;
    }

    &--button-grow {
      flex-grow: 1;
    }

    &--divider-vertical {
      flex-shrink: 0;
      height: calc(100% - 4px);
      margin-left: 2px;
      margin-right: 2px;
      margin-top: 2px;
      width: 2px;
    }

    &--children-inline {
      align-self: center;
      padding-right: 2px;
    }
  }

  .md-tile-content {
    flex-grow: 1;
    overflow: hidden;

    @if $include-icon {
      &--left-icon {
        padding-left: $md-list-left-padding - $md-font-icon-size - $md-default-padding;
      }
    }

    @if $include-avatar {
      &--left-avatar {
        padding-left: $md-list-left-padding - $md-avatar-size - $md-default-padding;
      }
    }

    @if $include-icon or $include-avatar {
      &--right-padding {
        padding-right: $md-default-padding;
      }
    }
  }



  @if $include-icon or $include-avatar {
    .md-tile-addon {
      line-height: $md-list-addon-line-height;

      &--icon {
        height: $md-font-icon-size;
      }

      &--avatar {
        height: $md-avatar-size;
      }
    }

    .md-text--theme-primary .md-icon {
      color: inherit;
    }
  }

  %tile-text {
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

    @if $md-list-primary-font-size != null and $md-list-primary-font-size == $md-list-secondary-font-size {
      font-size: $md-list-primary-font-size;
    }
  }

  .md-tile-text--primary {
    @extend %tile-text;

    @if $md-list-primary-font-size != null and $md-list-primary-font-size != $md-list-secondary-font-size {
      font-size: $md-list-primary-font-size;
    }
  }

  @if $include-avatar and $md-list-avatar-height != null {
    .md-list-tile--avatar {
      height: $md-list-avatar-height;
    }
  }

  @if $include-two-lines or $include-three-lines {
    .md-tile-text--secondary {
      @extend %tile-text;

      @if $md-list-secondary-font-size != null and $md-list-primary-font-size != $md-list-secondary-font-size {
        font-size: $md-list-secondary-font-size;
      }
    }
  }

  @if $include-two-lines and $md-list-two-lines-height != null {
    .md-list-tile--two-lines {
      height: $md-list-two-lines-height;
    }
  }

  @if $include-three-lines {
    .md-tile-text--three-lines {
      // scss-lint:disable PropertySortOrder
      white-space: pre-line;

      // Magic with webkit-line clamp
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 2;
    }


    @if $md-list-three-lines-height != null {
      .md-list-tile--three-lines {
        height: $md-list-three-lines-height;

        .md-tile-text--secondary {
          height: $md-line-height * $md-list-secondary-font-size * 2;
        }

        @if $include-icon or $include-avatar {
          .md-tile-addon {
            margin-top: $md-list-addon-margin-top;
          }
        }
      }
    }

    @if $include-icon or $include-avatar {
      .md-list-tile--three-lines .md-tile-addon {
        align-self: flex-start;
      }
    }
  }

  @if $nested-items-depth != null and $nested-items-depth > 0 {
    @include react-md-lists-nested($nested-items-depth, $nested-items-increment);
  }

  @if $include-controls {
    .md-list-control {
      flex-grow: 1;

      .md-selection-control-label {
        width: 100%;

        > span {
          width: 100%;
        }
      }
    }

    .md-tile-content--left-button {
      padding-left: $md-list-left-padding - $md-font-icon-size * 2;
    }

    .md-list-control--right {
      justify-content: flex-end;
    }

    .md-list-tile--control-left {
      padding-left: 0;
    }

    .md-list-tile--control-right {
      padding-right: 0;
    }
  }

  @if $include-media {
    @include react-md-lists-media($include-icon, $include-avatar, $include-two-lines, $include-three-lines, $include-dense-icons);
  }

  @if $include-inline {
    // I'm really cheating here.. Since it is after media query, doesn't require more precedence to override
    .md-list--inline {
      display: flex;
      padding: $md-list-inline-padding;
    }
  }
}

/// Updates the theme for lists ONLY if the `$light-theme` does not equal the `$md-light-theme`.
///
/// @example scss - Example Usage SCSS
///   @include react-md-theme-lists(!$md-light-theme);
///
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the lists should be themed by
///     the light theme.
/// @group lists, themes
@mixin react-md-theme-lists($light-theme: $md-light-theme) {
  @if $light-theme != $md-light-theme {
    .md-list {
      background: get-color('card', $light-theme);
    }


    .md-list-tile--active {
      background: get-color('hover', $light-theme);
    }
  }
}

/// Includes the styles for lists on mobile devices. This should normally be used within a media
/// query.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-mobile-media} {
///     @include react-md-lists-mobile;
///   }
///
/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with
///     icons should be included.
/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists
///     with avatars should be included.
/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for
///     lists with two lines of text should be included.
/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for
///     lists with three lines of text should be included.
/// @group lists, media-queries
@mixin react-md-lists-mobile(
  $include-icon: $md-list-include-icon,
  $include-avatar: $md-list-include-avatar,
  $include-two-lines: $md-list-include-two-lines,
  $include-three-lines: $md-list-include-three-lines
) {
  @if $md-list-padding == null {
    .md-list {
      padding-bottom: $md-list-mobile-padding;
      padding-top: $md-list-mobile-padding;
    }
  }

  @if $md-list-height == null {
    .md-list-tile {
      height: $md-list-mobile-height;
    }
  }

  @if $md-list-primary-font-size == null {
    .md-tile-text--primary {
      font-size: $md-list-mobile-primary-font-size;
    }
  }

  @if $include-two-lines or $include-three-lines and $md-list-secondary-font-size == null {
    .md-tile-text--secondary {
      font-size: $md-list-mobile-secondary-font-size;
    }
  }

  @if $include-avatar and $md-list-avatar-height == null {
    .md-list-tile--avatar {
      height: $md-list-mobile-avatar-height;
    }
  }

  @if $include-two-lines and $md-list-two-lines-height == null {
    .md-list-tile--two-lines {
      height: $md-list-mobile-two-lines-height;
    }
  }

  @if $include-three-lines and $md-list-three-lines-height == null {
    .md-list-tile--three-lines {
      height: $md-list-mobile-three-lines-height;

      .md-tile-text--secondary {
        height: $md-line-height * $md-list-mobile-secondary-font-size * 2;
      }

      @if $include-icon or $include-avatar {
        .md-tile-addon {
          margin-top: $md-list-mobile-three-lines-addon-margin-top;
        }
      }
    }
  }
}

/// Includes the styles for lists on desktop screens. This should normally be used within a media
/// query.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-desktop-media} {
///     @include react-md-lists-mobile;
///   }
///
/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with
///     icons should be included.
/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists
///     with avatars should be included.
/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for
///     lists with two lines of text should be included.
/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for
///     lists with three lines of text should be included.
/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense styles
///     for icons should be included.
/// @group lists, media-queries
@mixin react-md-lists-desktop(
  $include-icon: $md-list-include-icon,
  $include-avatar: $md-list-include-avatar,
  $include-two-lines: $md-list-include-two-lines,
  $include-three-lines: $md-list-include-three-lines,
  $include-dense-icons: $md-font-icon-include-dense
) {
  @if $md-list-padding == null {
    .md-list {
      padding-bottom: $md-list-desktop-padding;
      padding-top: $md-list-desktop-padding;
    }
  }

  @if $md-list-height == null {
    .md-list-tile {
      height: $md-list-desktop-height;
    }
  }

  %text-size {
    font-size: $md-list-desktop-font-size;
  }

  @if $md-list-primary-font-size == null {
    .md-tile-text--primary {
      @extend %text-size;
    }
  }

  @if $include-two-lines or $include-three-lines and $md-list-secondary-font-size == null {
    .md-tile-text--secondary {
      @extend %text-size;
    }
  }

  @if $include-avatar and $md-list-avatar-height == null {
    .md-list-tile--avatar {
      height: $md-list-desktop-avatar-height;
    }
  }

  @if $include-two-lines and $md-list-two-lines-height == null {
    .md-list-tile--two-lines {
      height: $md-list-desktop-two-lines-height;
    }
  }

  @if $include-three-lines and $md-list-three-lines-height == null {
    .md-list-tile--three-lines {
      height: $md-list-desktop-three-lines-height;

      .md-tile-text--secondary {
        height: $md-line-height * $md-list-desktop-font-size * 2;
      }

      @if $include-icon or $include-avatar {
        .md-tile-addon {
          margin-top: $md-list-desktop-three-lines-addon-margin-top;
        }
      }
    }
  }

  @if $include-dense-icons and $include-icon {
    .md-tile-addon--icon {
      height: $md-font-icon-dense-size;
    }

    .md-tile-content--left-icon {
      padding-left: $md-list-left-padding - $md-font-icon-dense-size - $md-default-padding;
    }
  }
}

/// Includes the media queries and styles for lists on mobile devices and desktop screens.
///
/// @example scss - Example Usage SCSS
///   @include react-md-lists-media;
///
/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with
///     icons should be included.
/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists
///     with avatars should be included.
/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for
///     lists with two lines of text should be included.
/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for
///     lists with three lines of text should be included.
/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense styles
///     for icons should be included.
/// @group lists, media-queries
@mixin react-md-lists-media(
  $include-icon: $md-list-include-icon,
  $include-avatar: $md-list-include-avatar,
  $include-two-lines: $md-list-include-two-lines,
  $include-three-lines: $md-list-include-three-lines,
  $include-dense-icons: $md-font-icon-include-dense
) {
  $media-diff: $md-list-padding == null or $md-list-primary-font-size == null
    or $md-list-secondary-font-size == null or $md-list-height == null
    or $md-list-avatar-height == null or $md-list-two-lines-height == null
    or $md-list-three-lines-height == null;

  @if $media-diff {
    @media #{$md-mobile-media} {
      @include react-md-lists-mobile($include-icon, $include-avatar, $include-two-lines, $include-three-lines);
    }
  }

  @if $media-diff or ($include-icon and $md-font-icon-size != $md-font-icon-dense-size) {
    @media #{$md-desktop-media} {
      @include react-md-lists-desktop($include-icon, $include-avatar, $include-two-lines, $include-three-lines, $include-dense-icons);
    }
  }
}

/// Creates the styles for nested lists. It basically loops over the `$nested-items-depth` param
/// and adds `padding-left` to each nested list equal to the
/// `$md-list-left-padding * (1 + $depth * $nested-items-increment)`.
///
/// @example scss - Example Usage SCSS
///   @include react-md-lists-nested;
///
/// @param {Number} nested-items-depth [$md-list-nested-items-depth] - The maximum depth for nested lists.
/// @param {Number} nested-items-increment [$md-list-nested-items-increment] - The amount that the
///     nested list's padding should be incremented at each step.
@mixin react-md-lists-nested(
  $nested-items-depth: $md-list-nested-items-depth,
  $nested-items-increment: $md-list-nested-items-increment,
  $nested-items-initial-padding: $md-list-nested-items-initial-padding
) {
  @if $nested-items-depth != null and $nested-items-depth > 0 {
    $multiplier: 0;

    @for $i from 1 through $nested-items-depth {
      .md-list--nested-#{$i} .md-list-tile {
        padding-left: $nested-items-initial-padding + $md-list-left-padding * $multiplier;
      }

      $multiplier: $multiplier + $nested-items-increment;
    }
  }
}
