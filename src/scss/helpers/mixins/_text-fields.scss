/// Creates a text feld with a given css name for the font sizes.
/// This is mostly used if you want to have a title text field and it
/// is automatically used in the `make-text-field` mixin.
///
/// @param {String} $name - The css class name to use.
/// @param {String} $font-size - The font size to use.
/// @param {String} $media-font-size - The font size for the current media size.
/// @param {String} $fl-height - The floating label height for the current media size.
/// @param {String} $sl-height - The single line label height for the current media size.
/// @group text-fields
@mixin make-text-field-with-font-size($name, $font-size, $media-font-size, $fl-height, $sl-height) {
  .#{$name} {
    .md-floating-label:not(.active),
    .md-text-field {
      font-size: $font-size;
    }

    .md-text-field:not(.multi-line) {
      height: $fl-height + ($font-size - $media-font-size);

      &.single-line {
        height: $sl-height + ($font-size - $media-font-size);
      }
    }
  }
}

/// Creates a text field
///
/// @param {Number} $fl-height - The height of the text field with a floating label.
/// @param {Number} $sl-height - The height of the text field without a floating label (single line).
/// @param {String} $font-size - The font size for the text field.
/// @param {String} $padding - The padding to be used on the text field and the label.
/// @param {String} $divider-padding - The padding to use for the text-field-divider at the bottom of the text field.
/// @group text-fields
@mixin make-text-field($fl-height, $sl-height, $font-size, $padding, $divider-padding) {
  @include make-text-field-with-font-size(md-title-text-field, $md-text-field-title-font-size, $font-size, $fl-height, $sl-height);

  .md-text-field,
  .md-floating-label {
    font-size: $font-size;
  }

  .md-text-field-container {
    padding-left: $padding + 4;
    padding-right: $padding + 4;

    &.multi-line.block .md-text-field-message {
      padding-bottom: $padding;
    }
  }

  .md-text-field {
    &:not(.multi-line) {
      height: $fl-height;
      padding-bottom: $padding;
    }

    &.single-line {
      height: $sl-height;
      padding-top: $padding;
    }

    &.multi-line {
      margin-bottom: $padding;
    }

    &.block {

      &:not(.multi-line) {
        height: $fl-height - $padding;
      }

      &.multi-line {
        margin-bottom: $padding + 4;
        margin-top: $padding + 4;
      }
    }
  }

  .md-floating-label.active {
    top: $padding;
  }

  $offset: $sl-height + $md-text-field-icon-margin;

  .md-text-divider {
    bottom: $divider-padding;

    &.icon-offset {

      left: $offset;
      width: calc(100% - #{$offset});
    }
  }

  .md-text-field-message.icon-offset {
    margin-left: $offset;
  }

  .md-text-field-icon {
    padding: ($sl-height - $md-font-icon-size) / 2;

    &.with-floating-label {
      vertical-align: bottom;
    }
  }
}

/// Generates css for a text field on mobile devices
///
/// @example scss - Example Basic Usage SASS
///   @media only screen and (min-width: 0px) and (max-width: 599px) {
///     @include md-text-field-mobile();
///   }
///
/// @group text-fields
@mixin md-text-field-mobile() {
  @include make-text-field(
    $md-text-field-mobile-height,
    $md-text-field-mobile-sl-height,
    $md-text-field-mobile-font-size,
    $md-text-field-mobile-padding,
    $md-text-field-mobile-divider-padding
  );

  .md-text-field-ind {
    padding-bottom: $md-text-field-mobile-padding;
    padding-top: $md-text-field-mobile-height - $md-font-icon-size - $md-text-field-mobile-padding;

    &.single-line {
      $ind-padding: ($md-text-field-mobile-sl-height - $md-font-icon-size) / 2;

      padding-bottom: $ind-padding;
      padding-top: $ind-padding;
    }
  }

  .md-password-btn {
    margin-bottom: $md-text-field-mobile-divider-padding * 2;
  }

  .md-autocomplete-suggestion {
    font-size: $md-text-field-mobile-font-size;

    &.single-line {
      bottom: 12px;
    }

    &.floating {
      bottom: 15px;
    }

    &.block {
      bottom: 16px;
    }
  }
}

/// Generates css for a text field on desktop
///
/// @example scss - Example Basic Usage SASS
///   @media only screen and (min-width: 600px) {
///     @include md-text-field-desktop();
///   }
///
/// @group text-fields
@mixin md-text-field-desktop() {
  @include make-text-field(
    $md-text-field-desktop-height,
    $md-text-field-desktop-sl-height,
    $md-text-field-desktop-font-size,
    $md-text-field-desktop-padding,
    $md-text-field-desktop-divider-padding
  );

  .md-text-field-ind {
    padding-bottom: $md-text-field-desktop-padding / 2;
    padding-top: $md-text-field-desktop-height - $md-font-icon-size - $md-text-field-desktop-padding / 2;

    &.single-line {
      $ind-padding: ($md-text-field-desktop-sl-height - $md-font-icon-size) / 2;

      padding-bottom: $ind-padding;
      padding-top: $ind-padding;
    }
  }

  .md-password-btn {
    margin-bottom: $md-text-field-desktop-divider-padding * 2;
  }

  .md-autocomplete-suggestion {
    font-size: $md-text-field-desktop-font-size;

    &.single-line {
      bottom: 10px;
    }

    &.floating {
      bottom: 9px;
    }

    &.block {
      bottom: 15px;
    }
  }
}

/// Themes the text fields for the given color. This theme mixin does not use the "&." syntax.
///
/// @example scss - Example Usage SASS
///   @include md-theme-text-fields($md-primary-color);
///
/// @example scss - Example Usage CSS Output
///  .md-text-field-label,
///  .md-text-field-icon,
///  .md-text-field-message {
///    color: rgba(0, 0, 0, 0.54);
///  }
///
///  .md-floating-label.error,
///  .md-text-field-message.error,
///  .md-text-field-icon.error {
///    color: #f44336;
///  }
///
///  .md-text-field-icon.active,
///  .md-text-field-label.focus:not(.error) {
///    color: #3f51b5;
///  }
///
///  .md-text-field-divider:after {
///    background: #3f51b5;
///  }
///
///  .md-text-field-divider.error:after {
///    background: #f44336;
///  }
///
/// @param {Color} $color [$md-primary-color] - The color to use for the active colors
///        on the underline and icons.
/// @param {Color} $hint-color [$md-secondary-text-color] - The color for inactive text field labels and icons
///        and the hint text underneath the text fields.
/// @param {Color} $error-color [$md-red-500] - The error color to use for the text field
///        underlines, icons, floating labels and error message text when there is an error.
/// @group text-fields
@mixin md-theme-text-fields($color: $md-primary-color, $error-color: $md-red-500) {
  .md-floating-label,
  .md-text-field-message,
  .md-text-field-icon {
    &.error {
      color: $error-color;
    }
  }

  .md-text-field-icon.active,
  .md-floating-label.focus:not(.error) {
    color: $color;
  }

  .md-text-divider {
    &::after {
      background: $color;
    }

    &.error::after {
      background: $error-color;
    }
  }
}

/// Applies a color to all the browser placeholder psuedo elements.
///
/// @example scss - Basic Usage SASS
///   .md-primary.md-toolbar {
///     @include md-theme-placeholders($md-dark-theme-help-text-color);
///   }
///
/// @example scss - Basic Usage CSS Output
///   .md-primary.md-toolbar {
///     :-moz-placeholder {
///       color: $color;
///     }
//
///     ::-moz-placeholder {
///       color: $color;
///     }
///
///     :-ms-input-placeholder {
///       color: $color;
///     }
///
///     ::-webkit-input-placeholder {
///       color: $color;
///     }
///   }
///
/// @param {Color} $color - The placeholder color to use
/// @group text-fields
@mixin md-theme-placeholders($color) {
  // scss-lint:disable VendorPrefix, PseudoElement

  :-moz-placeholder {
    color: $color;
  }

  ::-moz-placeholder {
    color: $color;
  }

  :-ms-input-placeholder {
    color: $color;
  }

  ::-webkit-input-placeholder {
    color: $color;
  }
}
