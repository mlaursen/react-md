////
/// @group lists
////

/// Boolean if the styles for lists with icons should be included.
/// @type Boolean
$md-list-include-icon: true !default;

/// Boolean if the styles for lists with avatars should be included.
/// @type Boolean
$md-list-include-avatar: true !default;

/// Boolean if the styles for lists with two lines of text should be included.
/// @type Boolean
$md-list-include-two-lines: true !default;

/// Boolean if the styles for lists with three lines of text should be included.
/// @type Boolean
$md-list-include-three-lines: true !default;

/// Boolean if the styles for lists with controls should be included.
/// @type Boolean
$md-list-include-controls: true !default;

/// A number for how much to increment the nested depth multiplier
/// @type Number
$md-list-nested-items-increment: .5 !default;

/// The max depth for nested items in lists. This is used to generate
/// some additional padding on nested lists.
/// @type Number
$md-list-nested-items-depth: 2 !default;

$md-list-left-padding: 72px;

$md-list-mobile-padding: 8px;
$md-list-mobile-primary-font-size: 16px;
$md-list-mobile-secondary-font-size: 14px;
$md-list-mobile-height: 48px;
$md-list-mobile-avatar-height: 56px;
$md-list-mobile-two-lines-height: 72px;
$md-list-mobile-three-lines-height: 88px;

$md-list-desktop-padding: 4px;
$md-list-desktop-font-size: 13px;
$md-list-desktop-height: 40px;
$md-list-desktop-avatar-height: 48px;
$md-list-desktop-two-lines-height: 60px;
$md-list-desktop-three-lines-height: 76px;

/// Includes the styles for lists.
///
/// @example scss - Example Usage SCSS
///   @include react-md-lists;
///
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the lists should be styled
///     for the light theme.
/// @param {Number} nested-items-depth [$md-list-nested-items-depth] - The maximum depth for
///     nested items.
/// @param {Number} nested-items-increment [$md-list-nested-items-increment] - The amount the
///     nested item's padding should be incremented by.
/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should
///     be included.
/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with
///     icons should be included.
/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists
///     with avatars should be included.
/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for
///     lists with two lines of text should be included.
/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for
///     lists with three lines of text should be included.
/// @param {Boolean} include-controls [$md-list-include-controls] - Boolean if the styles for lists
///     with controls to be included.
@mixin react-md-lists(
  $light-theme: $md-light-theme,
  $nested-items-depth: $md-list-nested-items-depth,
  $nested-items-increment: $md-list-nested-items-increment,
  $include-media: $md-media-included,
  $include-icon: $md-list-include-icon,
  $include-avatar: $md-list-include-avatar,
  $include-two-lines: $md-list-include-two-lines,
  $include-three-lines: $md-list-include-three-lines,
  $include-controls: $md-list-include-controls
) {
  @if $include-media {
    @include react-md-lists-media($include-icon, $include-avatar, $include-two-lines, $include-three-lines);
  }

  .md-list {
    background: get-color('card', $light-theme);
    list-style: none;
    margin: 0;
    padding-left: 0;
    user-select: none;

    .md-avatar,
    .md-icon {
      flex-shrink: 0;
    }
  }

  .md-list-tile {
    align-items: center;
    display: flex;
    padding-left: $md-default-padding;
    padding-right: $md-default-padding;
    text-decoration: none;
    transition-duration: $md-transition-time;
    transition-property: background;
  }

  .md-list-tile--active {
    background: get-color('hover', $light-theme);
  }

  .md-tile-content {
    flex-grow: 1;
  }

  .md-list-item--inset {
    padding-left: $md-list-left-padding;
  }

  @if $include-icon {
    .md-tile-content--left-icon {
      padding-left: $md-list-left-padding - $md-font-icon-size - $md-default-padding;
    }
  }

  @if $include-avatar {
    .md-tile-content--left-avatar {
      padding-left: $md-list-left-padding - $md-avatar-size - $md-default-padding;
    }
  }

  @if $include-icon or $include-avatar {
    .md-tile-addon--icon {
      height: $md-font-icon-size;
    }

    .md-tile-addon--avatar {
      height: $md-avatar-size;
    }

    .md-tile-content--right-padding {
      padding-right: $md-default-padding;
    }
  }

  %tile-text {
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .md-tile-text--primary {
    @extend %tile-text;
  }

  @if $include-two-lines or $include-three-lines {
    .md-tile-text--secondary {
      @extend %tile-text;
    }
  }

  @if $include-three-lines {
    .md-tile-text--three-lines {
      // scss-lint:disable PropertySortOrder
      white-space: pre-line;

      // Magic with webkit-line clamp
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 2;
    }

    @if $include-icon or $include-avatar {
      .md-list-tile--three-lines .md-tile-addon {
        align-self: flex-start;
      }
    }
  }

  @if $nested-items-depth != null and $nested-items-depth > 0 {
    @include react-md-lists-nested($nested-items-depth, $nested-items-increment);
  }

  @if $include-controls {
    .md-list-control {
      flex-grow: 1;

      .md-selection-control-label {
        width: 100%;
      }
    }

    .md-tile-content--left-button {
      padding-left: $md-list-left-padding - $md-font-icon-size * 2;
    }

    .md-list-control--right {
      justify-content: flex-end;
    }

    .md-list-tile--control-left {
      padding-left: 0;
    }

    .md-list-tile--control-right {
      padding-right: 0;
    }
  }
}

/// Updates the theme for lists ONLY if the `$light-theme` does not equal the `$md-light-theme`.
///
/// @example scss - Example Usage SCSS
///   @include react-md-theme-lists(!$md-light-theme);
///
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the lists should be themed by
///     the light theme.
@mixin react-md-theme-lists($light-theme: $md-light-theme) {
  @if $light-theme != $md-light-theme {
    .md-list {
      background: get-color('card', $light-theme);
    }


    .md-list-tile--active {
      background: get-color('hover', $light-theme);
    }
  }
}

/// Includes the styles for lists on mobile devices. This should normally be used within a media
/// query.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-mobile-media} {
///     @include react-md-lists-moble;
///   }
///
/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with
///     icons should be included.
/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists
///     with avatars should be included.
/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for
///     lists with two lines of text should be included.
/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for
///     lists with three lines of text should be included.
@mixin react-md-lists-mobile(
  $include-icon: $md-list-include-icon,
  $include-avatar: $md-list-include-avatar,
  $include-two-lines: $md-list-include-two-lines,
  $include-three-lines: $md-list-include-three-lines
) {
  .md-list {
    padding-bottom: $md-list-mobile-padding;
    padding-top: $md-list-mobile-padding;
  }

  .md-list-tile {
    height: $md-list-mobile-height;
  }

  .md-tile-text--primary {
    font-size: $md-list-mobile-primary-font-size;
  }

  @if $include-two-lines or $include-three-lines {
    .md-tile-text--secondary {
      font-size: $md-list-mobile-secondary-font-size;
    }
  }

  @if $include-avatar {
    .md-list-tile--avatar {
      height: $md-list-mobile-avatar-height;
    }
  }

  @if $include-two-lines {
    .md-list-tile--two-lines {
      height: $md-list-mobile-two-lines-height;
    }
  }

  @if $include-three-lines {
    .md-list-tile--three-lines {
      height: $md-list-mobile-three-lines-height;

      .md-tile-text--secondary {
        height: $md-line-height * $md-list-mobile-secondary-font-size * 2;
      }

      @if $include-icon or $include-avatar {
        .md-tile-addon {
          margin-top: 14px;
        }
      }
    }
  }
}

/// Includes the styles for lists on desktop screens. This should normally be used within a media
/// query.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-desktop-media} {
///     @include react-md-lists-moble;
///   }
///
/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with
///     icons should be included.
/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists
///     with avatars should be included.
/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for
///     lists with two lines of text should be included.
/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for
///     lists with three lines of text should be included.
@mixin react-md-lists-desktop(
  $include-icon: $md-list-include-icon,
  $include-avatar: $md-list-include-avatar,
  $include-two-lines: $md-list-include-two-lines,
  $include-three-lines: $md-list-include-three-lines
) {
  .md-list {
    padding-bottom: $md-list-desktop-padding;
    padding-top: $md-list-desktop-padding;
  }

  .md-list-tile {
    height: $md-list-desktop-height;
  }

  %text-size {
    font-size: $md-list-desktop-font-size;
  }

  .md-tile-text--primary {
    @extend %text-size;
  }

  @if $include-two-lines or $include-three-lines {
    .md-tile-text--secondary {
      @extend %text-size;
    }
  }

  @if $include-avatar {
    .md-list-tile--avatar {
      height: $md-list-desktop-avatar-height;
    }
  }

  @if $include-two-lines {
    .md-list-tile--two-lines {
      height: $md-list-desktop-two-lines-height;
    }
  }

  @if $include-three-lines {
    .md-list-tile--three-lines {
      height: $md-list-desktop-three-lines-height;

      .md-tile-text--secondary {
        height: $md-line-height * $md-list-desktop-font-size * 2;
      }

      @if $include-icon or $include-avatar {
        .md-tile-addon {
          margin-top: 12px;
        }
      }
    }
  }
}

/// Includes the media queries and styles for lists on mobile devices and desktop screens.
///
/// @example scss - Example Usage SCSS
///   @include react-md-lists-media;
///
/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with
///     icons should be included.
/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists
///     with avatars should be included.
/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for
///     lists with two lines of text should be included.
/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for
///     lists with three lines of text should be included.
@mixin react-md-lists-media(
  $include-icon: $md-list-include-icon,
  $include-avatar: $md-list-include-avatar,
  $include-two-lines: $md-list-include-two-lines,
  $include-three-lines: $md-list-include-three-lines
) {
  @media #{$md-mobile-media} {
    @include react-md-lists-mobile($include-icon, $include-avatar, $include-two-lines, $include-three-lines);
  }

  @media #{$md-desktop-media} {
    @include react-md-lists-desktop($include-icon, $include-avatar, $include-two-lines, $include-three-lines);
  }
}

/// Creates the styles for nested lists. It basically loops over the `$nested-items-depth` param
/// and adds `padding-left` to each nested list equal to the
/// `$md-list-left-padding * (1 + $depth * $nested-items-increment)`.
///
/// @example scss - Example Usage SCSS
///   @include react-md-lists-nested;
///
/// @param {Number} nested-items-depth [$md-list-nested-items-depth] - The maximum depth for nested lists.
/// @param {Number} nested-items-increment [$md-list-nested-items-increment] - The amount that the
///     nested list's padding should be incremented at each step.
@mixin react-md-lists-nested($nested-items-depth: $md-list-nested-items-depth, $nested-items-increment: $md-list-nested-items-increment) {
  @if $nested-items-depth != null and $nested-items-depth > 0 {
    .md-list-expander {
      transition-duration: $md-transition-time;
      transition-property: transform;
    }

    .md-list-expander--flipped {
      transform: rotate3d(0, 0, 1, 180deg);
    }

    $multiplier: 1;

    @for $i from 1 through $nested-items-depth {
      .md-list--nested-#{$i} .md-list-tile {
        padding-left: $md-list-left-padding * $multiplier;
      }

      $multiplier: $multiplier + $nested-items-increment;
    }
  }
}
