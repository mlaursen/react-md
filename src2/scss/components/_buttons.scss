////
/// @group buttons
////

/// Boolean if the flat button styles should be included.
/// @type Boolean
$md-btn-include-flat: true !default;

/// Boolean if the raised button styles should be included.
/// @type Boolean
$md-btn-include-raised: true !default;

/// Boolean if the icon button styles should be included.
/// @type Boolean
$md-btn-include-icon: true !default;

/// Boolean if the floating button styles should be included.
/// @type Boolean
$md-btn-include-floating: true !default;

/// The default z index for fixed floating buttons
/// @type Number
$md-btn-fixed-z-index: 22 !default;


/// The height for buttons to make them accessible for touch devices.
/// @type Number
/// @access private;
$md-btn-accessible-height: 48px;

/// The font size for buttons on mobile devices.
/// @type Number
$md-btn-mobile-font-size: 14px;

/// The height for button on mobile devices.
/// @type Number
$md-btn-mobile-height: 36px;

/// The minimum margin to use for fixed floating buttons on mobile-devices.
/// @type Number
$md-btn-mobile-floating-margin: 16px;

/// The font size for buttons on desktop screens.
/// @type Number
$md-btn-desktop-font-size: 13px;

/// The height for buttons on desktop screens.
/// @type Number
$md-btn-desktop-height: 32px;

/// The minimum margin to use for fixed floating buttons on desktop screens.
/// @type Number
$md-btn-desktop-floating-margin: 24px;


/// The left and right padding for a button.
/// @type Number
$md-btn-lr-padding: 16px;

/// The min width for a flat or raised button.
/// @type Number
$md-btn-min-width: 88px;

/// The the default size for a floating button (FAB).
/// @type Number
$md-btn-floating-size: 56px;

/// The the mini size for a floating button.
/// @type Number
$md-btn-floating-mini-size: 40px;

/// The size for an icon button.
/// @type Number
$md-btn-icon-size: $md-font-icon-size * 2;

/// The padding for an icon button.
/// @type Number
$md-btn-icon-padding: $md-btn-icon-size / 4;

$md-btn-light-theme-base-color: #999;
$md-btn-light-theme-hover-color: rgba($md-btn-light-theme-base-color, .12);
$md-btn-light-theme-disabled-color: rgba($md-btn-light-theme-base-color, .2);
$md-btn-light-theme-pressed-color: rgba($md-btn-light-theme-base-color, .4);
$md-btn-dark-theme-base-color: #ccc;
$md-btn-dark-theme-hover-color: rgba($md-btn-dark-theme-base-color, .12);
$md-btn-dark-theme-disabled-color: rgba($md-btn-dark-theme-base-color, .2);
$md-btn-dark-theme-pressed-color: rgba($md-btn-dark-theme-base-color, .25);



/// Includes the styles for material design buttons. Each button type can optionally
/// be excluded. However, if the `floating` styles are included, the `icon` styles
/// will also be included.
///
/// @example scss - Example Usage SCSS
///   @include react-md-buttons
///
/// @param {Color} primary-color [$md-primary-color] - The primary color to theme the
///     buttons with.
/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme
///     the buttons with.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the buttons should be styled
///     for the light theme.
/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should
///     also be included in this mixin.
/// @param {Boolean} include-flat [$md-btn-include-flat] - Boolean if the flat styles for
///     buttons should be included.
/// @param {Boolean} include-raised [$md-btn-include-raised] - Boolean if the raised styles for
///     buttons should be included.
/// @param {Boolean} include-icon [$md-btn-include-icon] - Boolean if the icon styles for
///     buttons should be included.
/// @param {Boolean} include-floating [$md-btn-include-floating] - Boolean if the floating styles for
///     buttons should be included.
@mixin react-md-buttons(
  $primary-color: $md-primary-color,
  $secondary-color: $md-secondary-color,
  $light-theme: $md-light-theme,
  $include-media: $md-media-included,
  $include-flat: $md-btn-include-flat,
  $include-raised: $md-btn-include-raised,
  $include-icon: $md-btn-include-icon,
  $include-floating: $md-btn-include-floating
) {
  @if $include-media {
    @include react-md-buttons-media($include-flat, $include-raised);
  }

  // scss-lint:disable QualifyingElement
  a.md-btn {
    text-decoration: none;
  }

  .md-btn {
    background: transparent;
    border: 0;
    border-radius: 2px;
    position: relative;
    transition-duration: $md-transition-time;
    transition-property: background, color;

    &:focus {
      outline: none;
    }

    .md-icon {
      color: inherit;
    }

    .md-icon-separator {
      height: 100%;
    }
  }

  .md-btn--hover {
    background: if($light-theme, $md-btn-light-theme-hover-color, $md-btn-dark-theme-hover-color);
  }

  .md-btn--color-primary-active {
    background: rgba($primary-color, .12);
  }

  .md-btn--color-secondary-active {
    background: rgba($secondary-color, .12);
  }

  @if $include-flat or $include-raised {
    .md-btn--text {
      font-weight: $md-font-medium;
      min-width: $md-btn-min-width;
      padding: 8px $md-btn-lr-padding;
      text-transform: uppercase;
      transition-duration: $md-transition-time;
    }
  }

  @if $include-raised or $include-floating {
    .md-btn--raised {
      @include md-box-shadow(1);

      transition: background $md-transition-time, box-shadow $md-transition-time * 2, color $md-transition-time;
    }

    .md-btn--raised-disabled {
      background: get-color('divider', $light-theme);
    }

    .md-btn--raised-pressed {
      @include md-box-shadow(2);
    }
  }

  @if $include-icon or $include-floating {
    .md-btn--icon {
      border-radius: 50%;
      color: get-color('icon', $light-theme);
      height: $md-btn-icon-size;
      padding: $md-btn-icon-padding;
      width: $md-btn-icon-size;
    }
  }

  @if $include-floating {
    .md-btn--floating {
      @include md-box-shadow(2);

      height: $md-btn-floating-size;
      padding: ($md-btn-floating-size - $md-font-icon-size) / 2;
      transition-property: background, box-shadow, color;
      width: $md-btn-floating-size;
    }

    .md-btn--floating-pressed {
      @include md-box-shadow(4);
    }

    .md-btn--floating-mini {
      height: $md-btn-floating-mini-size;
      padding: ($md-btn-floating-mini-size - $md-font-icon-size) / 2;
      width: $md-btn-floating-mini-size;
    }

    .md-btn--fixed {
      position: fixed;
      z-index: $md-btn-fixed-z-index;
    }
  }
}

/// Themes the buttons ONLY when the `$primary-color` does not equal the `$md-primary-color`,
/// the `$secondary-color` does not equal the `$md-secondary-color`, or the `$md-light-theme`
/// does not equal the `$md-light-theme`.
///
/// @example scss - Example Usage SCSS
///   @include react-md-theme-buttons($md-orange-500, $md-purple-a-200, !$md-light-theme);
///
/// @param {Color} primary-color [$md-primary-color] - The primary color to theme the
///     buttons with.
/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme
///     the buttons with.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the buttons should be styled
///     for the light theme.
/// @param {Boolean} include-flat [$md-btn-include-flat] - Boolean if the flat styles for
///     buttons should be included.
/// @param {Boolean} include-raised [$md-btn-include-raised] - Boolean if the raised styles for
///     buttons should be included.
/// @param {Boolean} include-icon [$md-btn-include-icon] - Boolean if the icon styles for
///     buttons should be included.
/// @param {Boolean} include-floating [$md-btn-include-floating] - Boolean if the floating styles for
///     buttons should be included.
@mixin react-md-theme-buttons(
  $primary-color: $md-primary-color,
  $secondary-color: $md-secondary-color,
  $light-theme: $md-light-theme,
  $include-flat: $md-btn-include-flat,
  $include-raised: $md-btn-include-raised,
  $include-icon: $md-btn-include-icon,
  $include-floating: $md-btn-include-floating
) {
  @if $light-theme != $md-light-theme {
    @if $include-flat or $include-raised {
      .md-btn--raised-disabled {
        background: get-color('divider', $light-theme);
      }
    }

    @if $include-icon or $include-floating {
      .md-btn--icon {
        color: get-color('icon', $light-theme);
      }
    }
  }

  @if $primary-color != $md-primary-color {
    .md-btn--color-primary-active {
      background: rgba($primary-color, .12);
    }
  }

  @if $secondary-color != $md-secondary-color {
    .md-btn--color-secondary-active {
      background: rgba($secondary-color, .12);
    }
  }
}

/// Creates the styes for buttons on mobile devices. This realy just sets the
/// font size and adds some styles to make the button be accessible for touch.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-mobile-media} {
///     @include react-md-buttons-mobile;
///   }
///
/// @param {Boolean} include-flat [$md-btn-include-flat] - Boolean if the flat styles for
///     buttons should be included.
/// @param {Boolean} include-raised [$md-btn-include-raised] - Boolean if the raised styles for
///     buttons should be included.
/// @param {Boolean} include-floating [$md-btn-include-floating] - Boolean if the floating styles for
///     buttons should be included.
@mixin react-md-buttons-mobile($include-flat: $md-btn-include-flat, $include-raised: $md-btn-include-raised, $include-floating: $md-btn-include-floating) {
  @if $include-flat or $include-raised {
    $accessible-padding: ($md-btn-accessible-height - $md-btn-mobile-height) / 2;

    .md-btn--text {
      font-size: $md-btn-mobile-font-size;
      height: $md-btn-mobile-height;
      margin-bottom: $accessible-padding;
      margin-top: $accessible-padding;

      // The accessible height is supposed to be 48px while the button height is supposed
      // to be 36px.. So hack for touch by adding some margin for the difference and adding
      // ::before/::after absolutely positioned so they can be touched as well? Iunno
      &::before,
      &::after {
        content: '';
        height: $accessible-padding;
        left: 0;
        position: absolute;
        right: 0;
      }

      &::before {
        top: -$accessible-padding;
      }

      &::after {
        bottom: -$accessible-padding;
      }
    }
  }

  @if $include-floating {
    .md-btn--fixed-tr {
      right: $md-btn-mobile-floating-margin;
      top: $md-btn-mobile-floating-margin;
    }

    .md-btn--fixed-tl {
      left: $md-btn-mobile-floating-margin;
      top: $md-btn-mobile-floating-margin;
    }

    .md-btn--fixed-br {
      bottom: $md-btn-mobile-floating-margin;
      right: $md-btn-mobile-floating-margin;
    }

    .md-btn--fixed-bl {
      bottom: $md-btn-mobile-floating-margin;
      left: $md-btn-mobile-floating-margin;
    }
  }
}

/// Creates the styes for buttons on desktop screens.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-desktop-media} {
///     @include react-md-buttons-desktop;
///   }
///
/// @param {Boolean} include-flat [$md-btn-include-flat] - Boolean if the flat styles for
///     buttons should be included.
/// @param {Boolean} include-raised [$md-btn-include-raised] - Boolean if the raised styles for
///     buttons should be included.
/// @param {Boolean} include-floating [$md-btn-include-floating] - Boolean if the floating styles for
///     buttons should be included.
@mixin react-md-buttons-desktop($include-flat: $md-btn-include-flat, $include-raised: $md-btn-include-raised, $include-floating: $md-btn-include-floating) {
  @if $include-flat or $include-raised {
    .md-btn--text {
      font-size: $md-btn-desktop-font-size;
      height: $md-btn-desktop-height;
      margin-bottom: initial;
      margin-top: initial;

      &::before,
      &::after {
        display: none;
        visibility: hidden;
      }

      &::before {
        top: 0;
      }

      &::after {
        bottom: 0;
      }
    }
  }

  @if $include-floating {
    .md-btn--fixed-tr {
      right: $md-btn-desktop-floating-margin;
      top: $md-btn-desktop-floating-margin;
    }

    .md-btn--fixed-tl {
      left: $md-btn-desktop-floating-margin;
      top: $md-btn-desktop-floating-margin;
    }

    .md-btn--fixed-br {
      bottom: $md-btn-desktop-floating-margin;
      right: $md-btn-desktop-floating-margin;
    }

    .md-btn--fixed-bl {
      bottom: $md-btn-desktop-floating-margin;
      left: $md-btn-desktop-floating-margin;
    }
  }
}

/// Creates the media queries and styles for buttons for mobile and desktop.
///
/// @example scss - Example Usage SCSS
///   @include react-md-buttons-media;
///
/// @param {Boolean} include-flat [$md-btn-include-flat] - Boolean if the flat styles for
///     buttons should be included.
/// @param {Boolean} include-raised [$md-btn-include-raised] - Boolean if the raised styles for
///     buttons should be included.
/// @param {Boolean} include-floating [$md-btn-include-floating] - Boolean if the floating styles for
///     buttons should be included.
@mixin react-md-buttons-media($include-flat: $md-btn-include-flat, $include-raised: $md-btn-include-raised, $include-floating: $md-btn-include-floating) {
  @media #{$md-mobile-media} {
    @include react-md-buttons-mobile($include-flat, $include-raised, $include-floating);
  }

  @media #{$md-desktop-media} {
    @include react-md-buttons-desktop($include-flat, $include-raised, $include-floating);
  }
}
