////
/// @group pickers
////

/// Boolean if the date picker styles should be included.
/// @type Boolean
$md-picker-include-date: true !default;

/// Boolean if the time picker styles should be included.
/// @type Boolean
$md-picker-include-time: true !default;

/// Boolean if the classes to force a certain orientation should be included.
/// This is not set by default because it is recommended to just allow device
/// orientation to determine the orientation of the picker.
/// @type Boolean
$md-picker-include-forceful-classes: false !default;

/// The z-index for inline pickers.
/// @type Number
/// @see md-btn-fixed-z-index
/// @see md-drawer-z-index
/// @see md-menu-z-index
/// @see md-snackbar-z-index
/// @see md-toolbar-z-index
$md-picker-inline-z-index: 12 !default;


/// The width for the the picker while portrait.
/// @type Number
$md-picker-portrait-width: 320px !default;

/// The height for the picker's content while portrait.
/// @type Number
$md-picker-portrait-content-height: 340px !default;

/// The height for the picker's header while portrait.
/// @type Number
$md-picker-portrait-header-height: 110px !default;


/// The width for the the picker while landscape.
/// @type Number
$md-picker-landscape-width: 560px !default;

/// The height for the picker's content while landscape.
/// @type Number
$md-picker-landscape-content-height: 280px !default;

/// The height for the picker's header while landscape.
/// @type Number
$md-picker-landscape-header-width: 180px !default;

/// The minimal about of margin for pickers on mobile devices. This is used when placing
/// the picker in a dialog. The width and height can be larger than the default allowed
/// margin for dialogs, so this will update those margins.
/// @type Number
$md-picker-mobile-margin: 16px !default;

/// This is an optional fix for devices that have a really small width (iphone 5). This
/// will add an additional media query to hack the size of the dialogs to fit the pickers.
/// If this is null, it will not be included.
/// @type Number
$md-picker-mobile-max-size: 320px !default;


/// The font size for a date picker's calendar date.
/// @type Number
$md-calendar-date-font-size: 13px !default;

/// The font size for a year in the date picker's year picker that has
/// not been focused or selected.
/// @type Number
$md-year-font-size: 16px !default;

/// The font size for a year in the date picker's year picker that has
/// been focused.
/// @type Number
$md-year-focus-font-size: 20px !default;

/// The font size for a year in the date picker's year picker that has
/// been selected.
/// @type Number
$md-year-active-font-size: 24px !default;

/// The transition time to use for the date picker's active date background circle
/// to appear.
/// @type Number
$md-date-picker-transition-time: $md-transition-time * 2 !default;

/// The size for a date in the date picker's calendar while portrait.
/// @type Number
$md-date-picker-portrait-date-size: 44px !default;

/// The size for a date's background that has been focused or selected in the date
/// picker's calendar while portrait.
/// @type Number
$md-date-picker-portrait-ball-size: 36px !default;

/// The size for a date in the date picker's calendar while landscape
/// @type Number
$md-date-picker-landscape-date-size: 35px !default;

/// The size for a date's background that has been focused or selected in the date
/// picker's calendar while landscape.
/// @type Number
$md-date-picker-landscape-ball-size: 32px !default;

/// The size for the time picker's clock on while portrait.
/// @type Number
$md-clock-portrait-size: $md-picker-portrait-width - $md-dialog-padding * 2 !default;

/// The size for the time picker's clock while landscape.
/// @type Number
$md-clock-landscape-size: $md-picker-landscape-content-height - $md-dialog-padding - ($md-dialog-padding / 2) !default;


/// The size of an hour or minute on the time picker's clock.
/// @type Number
$md-clock-time-size: 36px !default;

/// The size for the clock hand's ball. This is the circle the surrounds the current
/// time.
/// @type Number
$md-clock-hand-ball-size: 6px !default;

/// The scale to use for the clock hand's ball when it is currently over a minute that
/// is not divisible by 5.
/// @type Number
$md-clock-hand-ball-scale: .4 !default;

/// The padding from the outside edge of the clock to the edge of one of the
/// time circles.
/// @type Number
$md-clock-padding: 4px;


/// Includes the styles for date and time pickers. If the `$include-date` and `$include-time`
/// parameters are both false, no styles will be created.
///
/// @example scss - Example Usage SCSS
///   @include react-md-pickers;
///
/// @param {Color} primary-color [$md-primary-color] - The primary color to style with.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.
/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should be included.
/// @param {Boolean} include-date [$md-picker-include-date] - Boolean if the date picker styles should be included.
/// @param {Boolean} include-time [$md-picker-include-time] - Boolean if the time picker styles should be included.
/// @param {Boolean} include-forceful-classes [$md-picker-include-forceful-classes] - Boolean if the
///     `.md-picker--portrait` and `.md-picker--landscape` classes should be included.
@mixin react-md-pickers(
  $primary-color: $md-primary-color,
  $light-theme: $md-light-theme,
  $include-media: $md-media-included,
  $include-date: $md-picker-include-date,
  $include-time: $md-picker-include-time,
  $include-forceful-classes: $md-picker-include-forceful-classes
) {
  @if $include-date or $include-time {
    @include react-md-pickers-base($primary-color, $light-theme, $include-forceful-classes);

    @if $include-media {
      @include react-md-pickers-media($include-date, $include-time);
    }
  }

  @if $include-date {
    @include react-md-pickers-date($primary-color, $light-theme);
  }

  @if $include-time {
    @include react-md-pickers-time($primary-color, $light-theme);
  }
}

/// Themes the pickers with the new colors only if the `primary-color` does not equal the `md-primary-color`,
/// or the `light-theme` does not equal the `md-light-theme` and at least one of `include-date` or `include-time`
/// are true.
///
/// @example scss - Example Usage SCSS
///   @include react-md-theme-pickers($md-orange-500, true);
///
/// @param {Color} primary-color [$md-primary-color] - The primary color to style with.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.
/// @param {Boolean} include-date [$md-picker-include-date] - Boolean if the date picker styles should be included.
/// @param {Boolean} include-time [$md-picker-include-time] - Boolean if the time picker styles should be included.
@mixin react-md-theme-pickers($primary-color: $md-primary-color, $light-theme: $md-light-theme, $include-date: $md-picker-include-date, $include-time: $md-picker-include-time) {
  @if $include-date or $include-time {
    $themed: $light-theme != $md-light-theme;

    @if $primary-color != $md-primary-color {
      @if not $light-theme and $themed {
        .md-picker-header {
          background: get-color('card', false);
        }
      } @else if $light-theme {
        .md-picker-header {
          background: $primary-color;
        }
      }

      @if $include-date {
        .md-calendar-date--btn::after {
          background: $primary-color;
        }
      }

      @if $include-time {
        .md-clock-hand {
          &::before,
          &::after {
            background: $primary-color;
          }
        }
      }
    }

    @if $themed {
      .md-picker-content-container {
        background: if($light-theme, get-color('card', true), get-color('background', false));
      }

      @if $include-date {
        .md-calendar-date {
          color: get-color('secondary', false);

          .md-picker-text--active {
            color: get-color('background', false);
          }
        }
      }

      @if $include-time {
        .md-clock-face {
          background: if($light-theme, $md-grey-100, get-color('card', false));
        }
      }
    }
  }
}

/// Includes the base styles for pickers. This is styles that is used for both date and time pickers.
/// This is normally used within the `react-md-pickers` mixin.
///
/// @example scss - Example Usage SCSS
///   @include react-md-pickers-base;
///
/// @param {Color} primary-color [$md-primary-color] - The primary color to style with.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.
/// @param {Boolean} include-forceful-classes [$md-picker-include-forceful-classes] - Boolean if the
///     `.md-picker--portrait` and `.md-picker--landscape` classes should be included.
@mixin react-md-pickers-base($primary-color: $md-primary-color, $light-theme: $md-light-theme, $include-forceful-classes: $md-picker-include-forceful-classes) {
  .md-picker-container {
    position: relative;
  }

  .md-picker-content-container {
    background: if($light-theme, get-color('card', true), get-color('background', false));
  }

  .md-picker--inline {
    @include md-box-shadow(3);

    position: absolute;
    z-index: $md-picker-inline-z-index;
  }

  .md-picker--inline-icon {
    left: $md-font-icon-size + $md-default-padding;
  }

  .md-picker-control {
    @extend %md-text-left;

    padding: 0;
  }

  .md-picker-text {
    color: get-color('secondary', false);

    &.md-picker-text > * {
      color: inherit;
    }

    > * {
      font-weight: inherit;
      margin: 0;
      transition-duration: $md-transition-time;
      transition-property: color, font;
    }
  }

  .md-picker-text--active {
    color: get-color('text', false);
    font-weight: $md-font-medium;
  }

  .md-dialog--picker {
    max-height: calc(100vh - #{$md-picker-mobile-margin});
    max-width: calc(100vw - #{$md-picker-mobile-margin});
    width: auto;
  }

  .md-dialog-content--picker {
    max-height: inherit;
    max-width: inherit;
    padding: 0;
  }

  .md-picker-header {
    background: if($light-theme, $primary-color, get-color('card', false));
    padding: $md-dialog-padding;
  }

  @if $include-forceful-classes {
    @include react-md-pickers-force-orientation;
  }
}

/// This includes the styles that force a certain orientation. These styles are usually not
/// included by default because it is best to allow the device's orientation to determine
/// the orientation of the picker.
///
/// You can either update the `$md-pickers-include-forceful-classes` variable before using
/// the `react-md-everything` / `react-md-pickers` mixins, or manually use this mixin.
///
/// @example scss - Example Usage SCSS - Everything
///   $md-pickers-include-forceful-classes: true;
///   @include react-md-everything;
///
/// @example scss - Example Usage SCSS - Pickers
///   $md-pickers-include-forceful-classes: true;
///   @include react-md-pickers;
///
/// @example scss - Example Usage SCSS - Pickers Param
///   @include react-md-pickers($md-primary-color, $md-light-theme, $md-media-included, $md-pickers-include-date, $md-pickers-include-time, true);
///
/// @example scss - Example Usage SCSS - Standalone
///   @include react-md-pickers-force-orientation;
///
/// @see $md-picker-include-forceful-classes
/// @see react-md-pickers
/// @see react-md-everything
@mixin react-md-pickers-force-orientation {
  .md-picker.md-picker--portrait {
    @include react-md-pickers-make-portrait;

    display: block;

    .md-picker-content {
      width: $md-picker-portrait-width;
    }

    &.md-picker--time .md-picker-header {
      padding-top: $md-dialog-padding;
    }

    .md-picker-header {
      width: 100%;
    }
  }

  .md-picker.md-picker--landscape {
    @include react-md-pickers-make-landscape;

    .md-picker-header {
      height: initial;
    }
  }
}

/// Creates the styles for the the date picker only.
///
/// @example scss - Example Usage SCSS
///   @include react-md-pickers-date;
///
/// @param {Color} primary-color [$md-primary-color] - The primary color to style with.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.
@mixin react-md-pickers-date($primary-color: $md-primary-color, $light-theme: $md-light-theme) {
  .md-picker--date {
    .md-picker-control {
      display: block;
    }
  }

  .md-picker-content--calendar {
    padding-left: 12px;
    padding-right: 12px;
  }

  .md-calendar-controls {
    align-items: center;
    display: flex;

    .md-title {
      flex-grow: 1;
      font-size: 16px;
      margin-bottom: 0;
      text-align: center;
    }
  }

  .md-calendar-date {
    @extend %md-inline-block;
    @extend %md-text-center;

    @if not $light-theme {
      color: get-color('secondary', false);

      .md-picker-text--active {
        color: get-color('background', false);
      }
    }

    margin: 0;
    width: calc(100% / 7);
  }

  .md-picker-content--year {
    overflow-y: auto;
  }

  .md-years {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .md-year {
    font-size: $md-year-font-size;
    padding: 12px;
    transition-duration: $md-transition-time;
    transition-property: color, font-size;

    &:focus:not(.md-year--active) {
      font-size: $md-year-focus-font-size;
    }

    &--active {
      font-size: $md-year-active-font-size;
      font-weight: $md-font-medium;
    }
  }

  .md-calendar-date--btn {

    &::after {
      background: $primary-color;
      border-radius: 50%;
      content: '';
      display: block;
      left: 50%;
      position: absolute;
      top: 50%;
      transform: translateX(-50%) translateY(-50%) scale(0);
      transition-duration: $md-transition-time;
      transition-property: transform;
      z-index: 0;
    }
  }

  .md-calendar-date--today {
    color: $primary-color;
    font-weight: $md-font-bold;
  }

  .md-calendar-date--btn-active {
    font-weight: $md-font-bold;

    &::after {
      transform: translateX(-50%) translateY(-50%) scale(1);
    }
  }

  .md-calendar-date--date {
    position: relative;
    z-index: 1;
  }

  .md-calendar-dow {
    font-size: $md-calendar-date-font-size;
    font-weight: $md-font-bold;
    line-height: $md-line-height;
  }
}


/// Creates the styles for the the date picker only.
///
/// @example scss - Example Usage SCSS
///   @include react-md-pickers-date;
///
/// @param {Color} primary-color [$md-primary-color] - The primary color to style with.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.
@mixin react-md-pickers-time($primary-color: $md-primary-color, $light-theme: $md-light-theme) {
  .md-picker-content--clock {
    padding: $md-dialog-padding;
    padding-bottom: $md-dialog-padding / 2;
  }

  .md-time-periods .md-picker-control {
    display: block;
  }

  .md-time-period {
    font-size: 16em / $md-font-size-base;
    font-weight: $md-font-medium;
    margin: 0;
    padding: 0;
  }

  .md-clock-face {
    background: if($light-theme, $md-grey-100, get-color('card', false));
    border-radius: 50%;
    position: relative;
  }

  .md-clock-hand {
    height: 2px;
    position: absolute;
    transform-origin: 0 0;
    transition-duration: $md-transition-time;
    transition-property: width;
    z-index: 1;

    &--active {
      transition-property: transform, width;
    }

    &::before,
    &::after {
      background: $primary-color;
      border-radius: 50%;
      content: '';
      position: absolute;
    }

    &::before {
      height: $md-clock-hand-ball-size;
      left: -$md-clock-hand-ball-size / 2;
      // no idea why
      top: -2px;
      width: $md-clock-hand-ball-size;
    }

    &::after {
      height: $md-clock-time-size;
      right: -$md-clock-time-size / 2 + $md-clock-padding / 2;
      top: -$md-clock-time-size / 2;
      transition-duration: $md-transition-time;
      transition-property: background, border, transform;
      width: $md-clock-time-size;
    }

    &--minute-hover::after {
      transform: scale($md-clock-hand-ball-scale);
    }
  }

  .md-clock-time {
    align-items: center;
    display: flex;
    height: $md-clock-time-size;
    justify-content: center;
    position: absolute;
    width: $md-clock-time-size;
    z-index: 8;
  }
}

/// Includes the media queries for pickers only if `$include-date` or `$include-time` are true.
/// This is normally used just within the `react-md-pickers` mixin.
///
/// @example scss - Example Usage SCSS
///   @include react-md-pickers-media;
///
/// @see react-md-pickers
@mixin react-md-pickers-media($include-date: $md-picker-include-date, $include-time: $md-picker-include-time, $mobile-max-size: $md-picker-mobile-max-size) {
  @if $include-date or $include-time {
    @media (orientation: portrait) {
      .md-picker {
        @include react-md-pickers-make-portrait($include-date, $include-time);
      }
    }

    @media (orientation: landscape) {
      .md-picker {
        @include react-md-pickers-make-landscape($include-date, $include-time);
      }
    }

    @if $mobile-max-size {
      @media (max-width: $mobile-max-size) and (orientation: portrait) {
        .md-picker {
          width: $mobile-max-size - $md-picker-mobile-margin;
        }
      }

      @media (max-height: $mobile-max-size) and (orientation: landscape) {
        $md-dialog-footer-height-mobile: 64px;

        .md-picker {
          .md-picker-content {
            height: $mobile-max-size - $md-dialog-footer-height-mobile;
            width: calc(100vw - #{$md-picker-landscape-header-width + $md-picker-mobile-margin});
          }
        }
      }
    }
  }
}

/// Includes the styles for a picker to be displayed in a portrait display.
///
/// @example scss - Example Usage SCSS
///   @media (orientation: portrait) {
///     .md-picker {
///       @include react-md-pickers-make-portrait;
///     }
///   }
/// @param {Boolean} include-date [$md-picker-include-date] - Boolean if the date picker styles should be included.
/// @param {Boolean} include-time [$md-picker-include-time] - Boolean if the time picker styles should be included.
@mixin react-md-pickers-make-portrait($include-date: $md-picker-include-date, $include-time: $md-picker-include-time) {
  width: $md-picker-portrait-width;

  .md-picker-header {
    height: $md-picker-portrait-header-height;
  }

  .md-time-periods {
    display: inline-block;
    padding-left: 1em;
    padding-right: $md-dialog-padding;
  }

  .md-picker-content {
    height: $md-picker-portrait-content-height;
  }

  .md-display-3 {
    font-size: 4.8em;
    line-height: 1;
  }

  .md-calendar-dows {
    padding-bottom: $md-dialog-padding / 2;
  }

  @if $include-date {
    &.md-picker--date {
      .md-display-1 {
        display: inline-block;
      }
    }

    .md-calendar-date--btn {
      height: $md-date-picker-portrait-date-size;

      &::after {
        height: $md-date-picker-portrait-ball-size;
        width: $md-date-picker-portrait-ball-size;
      }
    }
  }

  @if $include-time {
    .md-clock-face {
      height: $md-clock-portrait-size;
      width: $md-clock-portrait-size;
    }

    .md-clock-hand {
      width: ($md-clock-portrait-size - $md-clock-padding - $md-clock-time-size) / 2;

      &--inner {
        width: ($md-clock-portrait-size - $md-clock-padding - $md-clock-time-size * 3) / 2;
      }
    }
  }
}


/// Includes the styles for a picker to be displayed in a landscape display.
///
/// @example scss - Example Usage SCSS
///   @media (orientation: landscape) {
///     .md-picker {
///       @include react-md-pickers-make-portrait;
///     }
///   }
/// @param {Boolean} include-date [$md-picker-include-date] - Boolean if the date picker styles should be included.
/// @param {Boolean} include-time [$md-picker-include-time] - Boolean if the time picker styles should be included.
@mixin react-md-pickers-make-landscape($include-date: $md-picker-include-date, $include-time: $md-picker-include-time) {
  display: flex;
  width: $md-picker-landscape-width;

  .md-picker-header {
    width: $md-picker-landscape-header-width;
  }

  .md-picker-content {
    height: $md-picker-landscape-content-height;
    width: $md-picker-landscape-width - $md-picker-landscape-header-width;
  }

  @if $include-date {
    .md-calendar-date--btn {
      height: $md-date-picker-landscape-date-size;

      &::after {
        height: $md-date-picker-landscape-ball-size;
        width: $md-date-picker-landscape-ball-size;
      }
    }
  }

  @if $include-time {
    &.md-picker--time .md-picker-header {
      padding-top: $md-picker-landscape-content-height / 3;
    }

    .md-clock-face {
      height: $md-clock-landscape-size;
      width: $md-clock-landscape-size;
    }

    .md-clock-hand {
      width: ($md-clock-landscape-size - $md-clock-padding - $md-clock-time-size) / 2;

      &--inner {
        width: ($md-clock-landscape-size - $md-clock-padding - $md-clock-time-size * 3) / 2;
      }
    }

    .md-time-periods {
      margin-left: auto;
      margin-right: 2.5em;
      width: 35px;
    }

    .md-display-3 {
      font-size: 3.25em;
    }
  }
}
