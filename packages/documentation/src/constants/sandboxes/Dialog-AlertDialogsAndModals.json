{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Dialog Example - Alert Dialogs And Modals</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/button/dist/mixins\";\n@import \"~@react-md/dialog/dist/mixins\";\n@import \"~@react-md/form/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Dialog Example - Alert Dialogs And Modals",
      "description": "Example from https://react-md.dev/packages/dialog/demos#alert-dialogs-and-modals",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "latest",
        "@react-md/dialog": "latest",
        "@react-md/form": "latest",
        "@react-md/layout": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.tsx": {
    "content": "import React, { FC, useState } from \"react\";\nimport { Button } from \"@react-md/button\";\nimport { Dialog, DialogContent, DialogFooter } from \"@react-md/dialog\";\nimport { TextArea } from \"@react-md/form\";\nimport { Text } from \"@react-md/typography\";\n\nimport styles from \"./AlertDialogsAndModals.module.scss\";\n\nconst DRAFT = `This is some initial text to show in the draft area.\nWhen you click on \"Reset\", a dialog will ask you if you want to discard the\ndraft. When you click on \"Submit\", a modal confirmation dialog will ask you\nif you really want to submit this.\n`.replace(/\\r?\\n/g, \" \");\n\nconst Demo: FC = () => {\n  const [state, setState] = useState({ visible: false, modal: false });\n  const hide = (): void => {\n    setState((prevState) => ({ ...prevState, visible: false }));\n  };\n  const show = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    setState({\n      visible: true,\n      modal: event.currentTarget.id === \"draft-submit\",\n    });\n  };\n\n  const { visible, modal } = state;\n\n  return (\n    <>\n      <form\n        id=\"draft-form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        <TextArea\n          id=\"draft-area\"\n          defaultValue={DRAFT}\n          className={styles.textarea}\n          resize=\"none\"\n        />\n        <DialogFooter>\n          <Button\n            id=\"draft-discard\"\n            onClick={show}\n            type=\"reset\"\n            theme=\"warning\"\n          >\n            Reset\n          </Button>\n          <Button id=\"draft-submit\" onClick={show} type=\"submit\">\n            Submit\n          </Button>\n        </DialogFooter>\n      </form>\n      <Dialog\n        id=\"draft-dialog\"\n        role=\"alertdialog\"\n        modal={modal}\n        visible={visible}\n        onRequestClose={hide}\n        aria-labelledby=\"dialog-title\"\n      >\n        <DialogContent>\n          <Text\n            id=\"dialog-title\"\n            type=\"subtitle-1\"\n            margin=\"none\"\n            color=\"secondary\"\n          >\n            {!modal ? \"Discard draft?\" : \"Are you sure?\"}\n          </Text>\n        </DialogContent>\n        <DialogFooter>\n          <Button id=\"dialog-cancel\" onClick={hide}>\n            Cancel\n          </Button>\n          <Button\n            id=\"dialog-discard\"\n            onClick={hide}\n            theme={modal ? \"primary\" : \"error\"}\n          >\n            {!modal ? \"Discard\" : \"Submit\"}\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Demo;\n"
  },
  "src/AlertDialogsAndModals.module.scss": {
    "content": "@import \"~@react-md/typography/dist/mixins\";\n\n.textarea {\n  height: 15rem;\n}\n"
  }
}
