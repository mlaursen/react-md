{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://unpkg.com/react-md@next/dist/css/react-md.teal-pink-200-light.min.css\"\n    />\n    <title>List Example - Non Interactable</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import 'variables';\n@import '~@react-md/elevation/dist/mixins';\n@import '~@react-md/layout/dist/mixins';\n@import '~@react-md/list/dist/mixins';\n@import '~@react-md/states/dist/mixins';\n@import '~@react-md/theme/dist/mixins';\n@import '~@react-md/typography/dist/mixins';\n@import '~@react-md/utils/dist/mixins';\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "src/_variables.scss": {
    "content": "@import '~@react-md/theme/dist/color-palette';\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "List Example - Non Interactable",
      "description": "Example from https://react-md.dev/packages/list/demos#non-interactable",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/elevation": "next",
        "@react-md/layout": "next",
        "@react-md/list": "next",
        "@react-md/states": "next",
        "@react-md/theme": "next",
        "@react-md/typography": "next",
        "@react-md/utils": "next",
        "cnbuilder": "^2.3.0",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FC } from \"react\";\nimport { List, SimpleListItem } from \"@react-md/list\";\n\nimport people from \"./people\";\n\nimport Container from \"./Container\";\nimport \"./NonInteractable.scss\";\n\nconst Demo: FC = () => (\n  <div className=\"simple-list-examples\">\n    <Container>\n      <List>\n        {people.slice(0, 10).map(name => (\n          <SimpleListItem key={name} className=\"li li--dotted li--margin\">\n            {name}\n          </SimpleListItem>\n        ))}\n      </List>\n      <List className=\"ordered-list\">\n        {people.slice(11, 20).map(name => (\n          <SimpleListItem key={name} className=\"li li--margin\">\n            {name}\n          </SimpleListItem>\n        ))}\n      </List>\n    </Container>\n  </div>\n);\n\nexport default Demo;\n",
    "isBinary": false
  },
  "src/Container.scss": {
    "content": "@import '~@react-md/elevation/dist/mixins';\n\n.list-container {\n  align-items: flex-start;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n\n  .rmd-list {\n    @include rmd-elevation(4);\n\n    margin: 1rem;\n    max-width: 20rem;\n    width: 100%;\n  }\n}\n",
    "isBinary": false
  },
  "src/Container.tsx": {
    "content": "import React, { FC, HTMLAttributes } from \"react\";\nimport { cnb } from \"cnbuilder\";;\n\nimport \"./Container.scss\";\n\nconst Container: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  children,\n  ...props\n}) => (\n  <div {...props} className={cnb(\"list-container\", className)}>\n    {children}\n  </div>\n);\n\nexport default Container;\n",
    "isBinary": false
  },
  "src/NonInteractable.scss": {
    "content": "@import '~@react-md/utils/dist/mixins';\n\n// since the `SimpleListItem` component has `display: flex`, the\n// default list item numbering and styles are no longer applied.\n// If you want to add it back, you can use one of the following\n// methods\n// - using a counter for ordered lists\n// - inserting the custom style in the ::before tag\n\n.ordered-list {\n  counter-reset: non-interactable-list;\n\n  .li::before {\n    content: counter(non-interactable-list);\n    counter-increment: non-interactable-list;\n  }\n}\n\n.li--margin::before {\n  @include rmd-utils-rtl-auto(margin-right, 1rem);\n}\n\n.li--dotted::before {\n  // dot character\n  content: '\\2022';\n  font-size: 2em;\n}\n",
    "isBinary": false
  },
  "src/people.ts": {
    "content": "export default [\n  \"Jasmine Robinson\",\n  \"Devonte Craig\",\n  \"Dean Reid\",\n  \"Shaquille Bauer\",\n  \"Vivian Bishop\",\n  \"Braden Mullins\",\n  \"Katlyn Mcdonald\",\n  \"Isabella Marshall\",\n  \"Lee Christensen\",\n  \"Tommy Hogan\",\n  \"Timothy Harvey\",\n  \"Preston Phillips\",\n  \"Marco Sherman\",\n  \"Haley Coleman\",\n  \"Mario Swanson\",\n  \"Xavier Solis\",\n  \"Keaton Cannon\",\n  \"Cassandra Austin\",\n  \"Irene Holland\",\n  \"Gustavo Love\",\n  \"Meghan Stewart\",\n  \"Renee Townsend\",\n  \"Bobby Newman\",\n  \"Keaton Ortiz\",\n  \"Dustin Wells\",\n  \"Jerry Mcgee\",\n  \"Carl Howard\",\n  \"Sabrina Lang\",\n  \"Reed Baker\",\n  \"Kristen Fields\",\n  \"Gavin Carrillo\",\n  \"Claudia Neal\",\n  \"Leonard Schneider\",\n  \"Dominick Boyd\",\n  \"Mary Hampton\",\n  \"Mark Ayala\",\n  \"Kristina Warner\",\n  \"Antonio Walton\",\n  \"Tyson Scott\",\n  \"Harley Moss\",\n] as const;\n",
    "isBinary": false
  }
}
