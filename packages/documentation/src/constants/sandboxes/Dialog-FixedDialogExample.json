{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Dialog Example - Fixed Dialog Example</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/app-bar/dist/mixins\";\n@import \"~@react-md/dialog/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Dialog Example - Fixed Dialog Example",
      "description": "Example from https://react-md.dev/packages/dialog/demos#fixed-dialog-example",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/app-bar": "latest",
        "@react-md/dialog": "latest",
        "@react-md/layout": "latest",
        "@react-md/material-icons": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.tsx": {
    "content": "import React, { FC, useRef } from \"react\";\nimport {\n  AppBar,\n  AppBarAction,\n  AppBarNav,\n  AppBarTitle,\n} from \"@react-md/app-bar\";\nimport { DialogContent, FixedDialog } from \"@react-md/dialog\";\nimport {\n  CloseSVGIcon,\n  MenuSVGIcon,\n  MoreVertSVGIcon,\n} from \"@react-md/material-icons\";\nimport { Text } from \"@react-md/typography\";\nimport { useToggle } from \"@react-md/utils\";\n\nconst Demo: FC = () => {\n  const actionRef = useRef<HTMLButtonElement | null>(null);\n  const [visible, show, hide] = useToggle(false);\n  return (\n    <AppBar>\n      <AppBarNav aria-label=\"Nav\">\n        <MenuSVGIcon />\n      </AppBarNav>\n      <AppBarTitle>Title</AppBarTitle>\n      <AppBarAction\n        id=\"fixed-to-action\"\n        ref={actionRef}\n        onClick={show}\n        first\n        last\n      >\n        <MoreVertSVGIcon />\n      </AppBarAction>\n      <FixedDialog\n        id=\"fixed-dialog-1\"\n        visible={visible}\n        aria-labelledby=\"fixed-dialog-1-title\"\n        onRequestClose={hide}\n        fixedTo={actionRef.current}\n        options={{ xMargin: 12, yMargin: 12 }}\n      >\n        <AppBar>\n          <AppBarTitle id=\"fixed-dialog-1-title\">Title</AppBarTitle>\n          <AppBarAction onClick={hide} first last>\n            <CloseSVGIcon />\n          </AppBarAction>\n        </AppBar>\n        <DialogContent>\n          <Text>Here&apos;s some content.</Text>\n        </DialogContent>\n      </FixedDialog>\n    </AppBar>\n  );\n};\n\nexport default Demo;\n"
  }
}
