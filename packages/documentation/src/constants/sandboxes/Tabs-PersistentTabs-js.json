{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Tabs Example - Persistent Tabs</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.jsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/app-bar/dist/mixins\";\n@import \"~@react-md/form/dist/mixins\";\n@import \"~@react-md/tabs/dist/mixins\";\n@import \"~@react-md/media/dist/mixins\";\n@import \"~@react-md/progress/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Tabs Example - Persistent Tabs",
      "description": "Example from https://react-md.dev/packages/tabs/demos#persistent-tabs",
      "main": "src/index.jsx",
      "dependencies": {
        "@react-md/app-bar": "latest",
        "@react-md/form": "latest",
        "@react-md/layout": "latest",
        "@react-md/media": "latest",
        "@react-md/progress": "latest",
        "@react-md/states": "latest",
        "@react-md/tabs": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.jsx": {
    "content": "import React from \"react\";\nimport { AppBar } from \"@react-md/app-bar\";\nimport { Checkbox, useChecked } from \"@react-md/form\";\nimport { TabsManager, Tabs, TabPanels } from \"@react-md/tabs\";\n\nimport Content1 from \"./Content1\";\nimport Content2 from \"./Content2\";\nimport styles from \"./PersistentTabs.module.scss\";\n\nconst tabs = [\"Tab 1\", \"Tab 2\"];\n\nconst Demo = () => {\n  const [persistent, handleChange] = useChecked(false);\n  return (\n    <TabsManager tabs={tabs} tabsId=\"persistent-tabs\">\n      <AppBar theme=\"default\" height=\"none\">\n        <AppBar>\n          <Checkbox\n            id=\"persistent-tab-enable\"\n            checked={persistent}\n            onChange={handleChange}\n            label=\"Enable Persistant Tabs\"\n          />\n        </AppBar>\n        <Tabs />\n      </AppBar>\n      <TabPanels persistent={persistent} className={styles.container}>\n        <Content1 />\n        <Content2 />\n      </TabPanels>\n    </TabsManager>\n  );\n};\n\nexport default Demo;\n"
  },
  "src/PersistentTabs/Content1.jsx": {
    "content": "import React from \"react\";\nimport { Text } from \"@react-md/typography\";\nimport { TabPanel } from \"@react-md/tabs\";\n\nconst Content1 = (props) => (\n  <TabPanel {...props}>\n    <Text type=\"headline-4\">Tab 1 Content</Text>\n  </TabPanel>\n);\n\nexport default Content1;\n"
  },
  "src/PersistentTabs/Content2.jsx": {
    "content": "/* eslint-disable camelcase */\nimport React, { useEffect, useState } from \"react\";\nimport { MediaContainer, MediaOverlay } from \"@react-md/media\";\nimport { CircularProgress } from \"@react-md/progress\";\nimport { TabPanel } from \"@react-md/tabs\";\nimport { Text } from \"@react-md/typography\";\nimport { GridList, GridListCell } from \"@react-md/utils\";\n\nimport { randomInt } from \"../random\";\n\nconst Content2 = (props) => {\n  const [{ loading, data }, setState] = useState({\n    loading: false,\n    data: [],\n  });\n\n  useEffect(() => {\n    let cancelled = false;\n\n    setState({ loading: true, data: [] });\n    (async function load() {\n      const response = await fetch(\"https://picsum.photos/list\");\n      const result = await response.json();\n      const list = result;\n      const start = randomInt({ min: 0, max: 20 });\n      const total = randomInt({ min: 6, max: 14 });\n      const data = list.slice(start, start + total).map(({ author, id }) => ({\n        name: author,\n        url: `https://picsum.photos/250?image=${id}`,\n      }));\n\n      if (!cancelled) {\n        setState({\n          data,\n          loading: false,\n        });\n      }\n    })();\n\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n\n  return (\n    <TabPanel {...props}>\n      <Text type=\"headline-4\">Tab 2 Content</Text>\n      <GridList maxCellSize={250}>\n        {loading && <CircularProgress id=\"loading-tab-2\" />}\n        {data.map(({ name, url }) => (\n          <GridListCell key={url} square clone>\n            <MediaContainer>\n              <img src={url} alt=\"\" />\n              <MediaOverlay>\n                <Text margin=\"none\">{name}</Text>\n              </MediaOverlay>\n            </MediaContainer>\n          </GridListCell>\n        ))}\n      </GridList>\n    </TabPanel>\n  );\n};\n\nexport default Content2;\n"
  },
  "src/random.js": {
    "content": "/* eslint-disable import/prefer-default-export */\n\n/**\n * Generates a random integer between a min and max value. Defaults\n * to 0-10.\n */\nexport function randomInt({ min = 0, max = 10 } = {}) {\n  return Math.floor(Math.random() * max) + min;\n}\n"
  },
  "src/PersistentTabs/PersistentTabs.module.scss": {
    "content": ".container {\n  padding: 1rem;\n}\n"
  }
}
