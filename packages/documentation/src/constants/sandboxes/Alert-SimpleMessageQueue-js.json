{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Alert Example - Simple Message Queue</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.jsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/alert/dist/mixins\";\n@import \"~@react-md/button/dist/mixins\";\n@import \"~@react-md/form/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Alert Example - Simple Message Queue",
      "description": "Example from https://react-md.dev/packages/alert/demos#simple-message-queue",
      "main": "src/index.jsx",
      "dependencies": {
        "@react-md/alert": "latest",
        "@react-md/button": "latest",
        "@react-md/form": "latest",
        "@react-md/layout": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.jsx": {
    "content": "import React from \"react\";\nimport { MessageQueue, useAddMessage } from \"@react-md/alert\";\nimport { Button } from \"@react-md/button\";\nimport { Form, Radio, useChoice } from \"@react-md/form\";\n\nconst SINGLE_LINE = \"SINGLE_LINE\";\nconst SINGLE_LINE_ACTION = \"SINGLE_LINE_ACTION\";\nconst TWO_LINES = \"TWO_LINES\";\nconst TWO_LINES_ACTION = \"TWO_LINES_ACTION\";\nconst TWO_LINES_STACKED = \"TWO_LINES_STACKED\";\n\nconst messages = {\n  [SINGLE_LINE]: {\n    children: \"This is an example message\",\n  },\n  [SINGLE_LINE_ACTION]: {\n    action: \"Action\",\n    children: \"This is an example message\",\n  },\n  [TWO_LINES]: {\n    twoLines: true,\n    children: (\n      <>\n        <p>This is an example message</p>\n        <p>With a second line of text.</p>\n      </>\n    ),\n  },\n  [TWO_LINES_ACTION]: {\n    action: \"Action\",\n    twoLines: true,\n    children: (\n      <>\n        <p>This is an example message</p>\n        <p>With a second line of text.</p>\n      </>\n    ),\n  },\n  [TWO_LINES_STACKED]: {\n    action: \"Action\",\n    stacked: true,\n    twoLines: true,\n    children: (\n      <>\n        <p>This is an example message</p>\n        <p>With a second line of text.</p>\n      </>\n    ),\n  },\n};\n\nconst Demo = () => {\n  const addMessage = useAddMessage();\n  const [key, handleKeyChange] = useChoice(SINGLE_LINE);\n\n  return (\n    <Form onSubmit={() => addMessage(messages[key])}>\n      <Radio\n        id=\"mqr-1\"\n        name=\"message\"\n        value={SINGLE_LINE}\n        checked={key === SINGLE_LINE}\n        onChange={handleKeyChange}\n        label=\"Single Line Message\"\n      />\n      <Radio\n        id=\"mqr-2\"\n        name=\"message\"\n        value={SINGLE_LINE_ACTION}\n        checked={key === SINGLE_LINE_ACTION}\n        onChange={handleKeyChange}\n        label=\"Single Line Message with Action\"\n      />\n      <Radio\n        id=\"mqr-3\"\n        name=\"message\"\n        value={TWO_LINES}\n        checked={key === TWO_LINES}\n        onChange={handleKeyChange}\n        label=\"Two Line Message\"\n      />\n      <Radio\n        id=\"mqr-4\"\n        name=\"message\"\n        value={TWO_LINES_ACTION}\n        checked={key === TWO_LINES_ACTION}\n        onChange={handleKeyChange}\n        label=\"Two Line Message with Action\"\n      />\n      <Radio\n        id=\"mqr-5\"\n        name=\"message\"\n        value={TWO_LINES_STACKED}\n        checked={key === TWO_LINES_STACKED}\n        onChange={handleKeyChange}\n        label=\"Two Line Message with Stacked Action\"\n      />\n      <Button id=\"mqr-submit\" type=\"submit\" theme=\"primary\">\n        Add Message\n      </Button>\n    </Form>\n  );\n};\n\nexport default function SimpleMessageQueueContainer() {\n  return (\n    <MessageQueue id=\"simple-message-queue\">\n      <Demo />\n    </MessageQueue>\n  );\n}\n"
  }
}
