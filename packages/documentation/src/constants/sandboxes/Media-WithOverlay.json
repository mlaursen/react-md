{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Media Example - With Overlay</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/media/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Media Example - With Overlay",
      "description": "Example from https://react-md.dev/packages/media/demos#with-overlay",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/layout": "latest",
        "@react-md/media": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.tsx": {
    "content": "import React, { FC } from \"react\";\nimport {\n  MediaContainer,\n  MediaOverlay,\n  MediaOverlayPosition,\n} from \"@react-md/media\";\nimport { Text } from \"@react-md/typography\";\n\nimport styles from \"./Container.module.scss\";\n\nconst positions: MediaOverlayPosition[] = [\n  \"top\",\n  \"right\",\n  \"bottom\",\n  \"left\",\n  \"middle\",\n  \"center\",\n  \"absolute-center\",\n];\n\nconst Demo: FC = () => (\n  <>\n    {positions.map((position, i) => (\n      <MediaContainer\n        key={position}\n        id={`overlay-container-${i}`}\n        height={9}\n        width={16}\n        className={styles.container}\n      >\n        <img\n          src={`https://picsum.photos/800/800?image=43${i}`}\n          alt=\"\"\n          aria-describedby={`overlay-container-overlay-${i}`}\n        />\n        <MediaOverlay id={`overlay-container-overlay-${i}`} position={position}>\n          <Text\n            type=\"headline-5\"\n            margin=\"none\"\n            align={\n              [\"left\", \"right\", \"center\"].includes(position)\n                ? \"center\"\n                : undefined\n            }\n          >\n            This is a random picture!\n          </Text>\n        </MediaOverlay>\n      </MediaContainer>\n    ))}\n  </>\n);\n\nexport default Demo;\n"
  },
  "src/Container.module.scss": {
    "content": ".container {\n  margin: 0.5rem;\n}\n"
  }
}
