{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Tooltip Example - Advanced A P I And Gotchas</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/button/dist/mixins\";\n@import \"~@react-md/tooltip/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Tooltip Example - Advanced A P I And Gotchas",
      "description": "Example from https://react-md.dev/packages/tooltip/demos#advanced-a-p-i-and-gotchas",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "latest",
        "@react-md/layout": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/tooltip": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.tsx": {
    "content": "import React, { FC } from \"react\";\nimport { Button } from \"@react-md/button\";\nimport { Tooltipped } from \"@react-md/tooltip\";\nimport { Text } from \"@react-md/typography\";\n\nconst BrokenButton: FC = () => <Button>No go</Button>;\n\nconst AdvancedAPIGotchas: FC = () => (\n  <>\n    <Text type=\"headline-6\">Broken Tooltip</Text>\n    <Tooltipped id=\"broken-tooltip\" tooltip=\"I will never appear :(\">\n      <BrokenButton />\n    </Tooltipped>\n    <Tooltipped\n      id=\"keyboard-broken-tooltip\"\n      tooltip=\"I am inaccessible to keyboard users :(\"\n    >\n      <Text>\n        This text will have a tooltip, but it will be inaccessible for keyboard\n        users.\n      </Text>\n    </Tooltipped>\n    <Text type=\"headline-6\">Children Renderer</Text>\n    <Tooltipped\n      id=\"toolip-children-renderer\"\n      tooltip=\"This is a tooltip!\"\n      defaultPosition=\"above\"\n    >\n      {({ tooltip, ...props }) => {\n        // add \"air quotes\" to typed\n        const typedProps = Object.keys(props).reduce(\n          (obj, propName) => ({\n            ...obj,\n            [propName]: propName.startsWith(\"on\") ? \"function\" : \"string\",\n          }),\n          {\n            tooltip: \"ReactNode\",\n          }\n        );\n\n        return (\n          <>\n            <Button {...props}>Button{tooltip}</Button>\n            <pre>\n              <code>{JSON.stringify(typedProps, null, 2)}</code>\n            </pre>\n          </>\n        );\n      }}\n    </Tooltipped>\n  </>\n);\nexport default AdvancedAPIGotchas;\n"
  }
}
