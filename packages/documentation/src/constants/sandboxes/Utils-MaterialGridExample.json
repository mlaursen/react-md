{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Utils Example - Material Grid Example</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/elevation/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Utils Example - Material Grid Example",
      "description": "Example from https://react-md.dev/packages/utils/demos#material-grid-example",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/elevation": "latest",
        "@react-md/layout": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "classnames": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.tsx": {
    "content": "import React, { FC } from \"react\";\nimport cn from \"classnames\";\nimport { Grid, GridCell } from \"@react-md/utils\";\n\nimport styles from \"./Grid.module.scss\";\n\nconst GridExample: FC = () => (\n  <>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      {Array.from({ length: 12 }, (_, i) => (\n        <GridCell key={i} className={styles.item}>{`Cell ${i + 1}`}</GridCell>\n      ))}\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      {Array.from({ length: 6 }, (_, i) => (\n        <GridCell key={i} className={styles.item} colSpan={2}>\n          {`Cell ${i + 1}`}\n        </GridCell>\n      ))}\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      {Array.from({ length: 8 }, (_, i) => (\n        <GridCell key={i} className={styles.item} colSpan={3}>\n          {`Cell ${i + 1}`}\n        </GridCell>\n      ))}\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      {Array.from({ length: 3 }, (_, i) => (\n        <GridCell key={i} className={styles.item} colSpan={4}>\n          {`Cell ${i + 1}`}\n        </GridCell>\n      ))}\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      {Array.from({ length: 2 }, (_, i) => (\n        <GridCell key={i} className={styles.item} colSpan={5}>\n          {`Cell ${i + 1}`}\n        </GridCell>\n      ))}\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      {Array.from({ length: 2 }, (_, i) => (\n        <GridCell key={i} className={styles.item} colSpan={6}>\n          {`Cell ${i + 1}`}\n        </GridCell>\n      ))}\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      <GridCell className={styles.item} colSpan={7}>\n        Cell 1\n      </GridCell>\n      <GridCell className={styles.item} colSpan={5}>\n        Cell 2\n      </GridCell>\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      <GridCell className={styles.item} colSpan={8}>\n        Cell 1\n      </GridCell>\n      <GridCell className={styles.item} colSpan={4}>\n        Cell 2\n      </GridCell>\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      <GridCell className={styles.item} colSpan={9}>\n        Cell 1\n      </GridCell>\n      <GridCell className={styles.item} colSpan={3}>\n        Cell 2\n      </GridCell>\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      <GridCell className={styles.item} colSpan={10}>\n        Cell 1\n      </GridCell>\n      <GridCell className={styles.item} colSpan={2}>\n        Cell 2\n      </GridCell>\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      <GridCell className={styles.item} colSpan={11}>\n        Cell 1\n      </GridCell>\n      <GridCell className={styles.item}>Cell 2</GridCell>\n    </Grid>\n    <Grid className={cn(styles.grid, styles.smallGrid)}>\n      <GridCell className={styles.item} colSpan={12}>\n        Cell 1\n      </GridCell>\n    </Grid>\n  </>\n);\n\nexport default GridExample;\n"
  },
  "src/Grid.module.scss": {
    "content": "// sass-lint:disable class-name-format\n$rmd-theme-dark-elevation: true;\n\n@import \"~@react-md/elevation/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n\n.grid {\n  background-color: $rmd-theme-light-background;\n\n  + .grid {\n    margin-top: 1rem;\n  }\n\n  @include rmd-utils-optional-css-modules($rmd-theme-dark-class, true) {\n    background-color: $rmd-theme-dark-background;\n  }\n}\n\n.item {\n  @include rmd-elevation(2);\n  @include rmd-theme-dark-elevation(2, true);\n  @include rmd-theme(background-color, surface);\n  @include rmd-theme(color, text-primary-on-background);\n\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  min-height: 10rem;\n  text-align: center;\n}\n\n.smallGrid {\n  .item {\n    min-height: 3rem;\n  }\n}\n"
  }
}
