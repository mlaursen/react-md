{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Menu Example - Accessibility Example</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/button/dist/mixins\";\n@import \"~@react-md/dialog/dist/mixins\";\n@import \"~@react-md/menu/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Menu Example - Accessibility Example",
      "description": "Example from https://react-md.dev/packages/menu/demos#accessibility-example",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "latest",
        "@react-md/dialog": "latest",
        "@react-md/layout": "latest",
        "@react-md/menu": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "classnames": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/classnames": "latest",
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.tsx": {
    "content": "import React, { FC, useMemo } from \"react\";\nimport { Button } from \"@react-md/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@react-md/dialog\";\nimport { DropdownMenu } from \"@react-md/menu\";\nimport { useToggle } from \"@react-md/utils\";\n\nimport people from \"./people\";\nimport Container from \"./Container\";\n\nconst Demo: FC = () => {\n  const [visible, show, hide] = useToggle(false);\n  const items = useMemo(\n    () => people.map((name) => ({ children: name, onClick: show })),\n    [show]\n  );\n\n  return (\n    <Container>\n      <DropdownMenu id=\"accessibility-menu-1\" items={items}>\n        Dropdown\n      </DropdownMenu>\n      <Dialog\n        id=\"confirmation-dialog\"\n        aria-labelledby=\"cofirmation-dialog-title\"\n        visible={visible}\n        onRequestClose={hide}\n      >\n        <DialogHeader>\n          <DialogTitle id=\"confirmation-dialog-title\">Confirm</DialogTitle>\n        </DialogHeader>\n        <DialogContent>Are you sure?</DialogContent>\n        <DialogFooter>\n          <Button id=\"confirmation-dialog-cancel\" theme=\"clear\" onClick={hide}>\n            Cancel\n          </Button>\n          <Button\n            id=\"confirmation-dialog-confirm\"\n            theme=\"secondary\"\n            onClick={hide}\n          >\n            Confirm\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Demo;\n"
  },
  "src/people.ts": {
    "content": "export default [\n  \"Jasmine Robinson\",\n  \"Devonte Craig\",\n  \"Dean Reid\",\n  \"Shaquille Bauer\",\n  \"Vivian Bishop\",\n  \"Braden Mullins\",\n  \"Katlyn Mcdonald\",\n  \"Isabella Marshall\",\n  \"Lee Christensen\",\n  \"Tommy Hogan\",\n  \"Timothy Harvey\",\n  \"Preston Phillips\",\n  \"Marco Sherman\",\n  \"Haley Coleman\",\n  \"Mario Swanson\",\n  \"Xavier Solis\",\n  \"Keaton Cannon\",\n  \"Cassandra Austin\",\n  \"Irene Holland\",\n  \"Gustavo Love\",\n  \"Meghan Stewart\",\n  \"Renee Townsend\",\n  \"Bobby Newman\",\n  \"Keaton Ortiz\",\n  \"Dustin Wells\",\n  \"Jerry Mcgee\",\n  \"Carl Howard\",\n  \"Sabrina Lang\",\n  \"Reed Baker\",\n  \"Kristen Fields\",\n  \"Gavin Carrillo\",\n  \"Claudia Neal\",\n  \"Leonard Schneider\",\n  \"Dominick Boyd\",\n  \"Mary Hampton\",\n  \"Mark Ayala\",\n  \"Kristina Warner\",\n  \"Antonio Walton\",\n  \"Tyson Scott\",\n  \"Harley Moss\",\n] as const;\n"
  },
  "src/Container.tsx": {
    "content": "import React, { FC, HTMLAttributes } from \"react\";\nimport cn from \"classnames\";\n\nimport styles from \"./Container.module.scss\";\n\nconst Container: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  children,\n  ...props\n}) => (\n  <div {...props} className={cn(styles.container, className)}>\n    {children}\n  </div>\n);\n\nexport default Container;\n"
  },
  "src/Container.module.scss": {
    "content": ".container {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n\n  :global .rmd-menu-button {\n    margin: 1rem;\n  }\n}\n"
  }
}
