{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Transition Example - Cross Fade Examples</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.jsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/divider/dist/mixins\";\n@import \"~@react-md/app-bar/dist/mixins\";\n@import \"~@react-md/progress/dist/mixins\";\n@import \"~@react-md/tabs/dist/mixins\";\n@import \"~@react-md/transition/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Transition Example - Cross Fade Examples",
      "description": "Example from https://react-md.dev/packages/transition/demos#cross-fade-examples",
      "main": "src/index.jsx",
      "dependencies": {
        "@react-md/app-bar": "latest",
        "@react-md/divider": "latest",
        "@react-md/layout": "latest",
        "@react-md/progress": "latest",
        "@react-md/states": "latest",
        "@react-md/tabs": "latest",
        "@react-md/theme": "latest",
        "@react-md/transition": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "classnames": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/classnames": "latest",
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.jsx": {
    "content": "import React from \"react\";\nimport { Divider } from \"@react-md/divider\";\nimport { Text } from \"@react-md/typography\";\n\nimport CrossFadeExamplesAsync from \"./CrossFadeExamplesAsync\";\nimport CrossFadeExamplesStatic from \"./CrossFadeExamplesStatic\";\n\nconst Demo = () => (\n  <>\n    <Text type=\"headline-6\" margin=\"bottom\">\n      Static Transitions\n    </Text>\n    <CrossFadeExamplesStatic />\n    <Divider />\n    <Text type=\"headline-6\">\n      Async with <code>Suspense</code>\n    </Text>\n    <CrossFadeExamplesAsync />\n    <Divider />\n  </>\n);\n\nexport default Demo;\n"
  },
  "src/CrossFadeExamplesAsync.jsx": {
    "content": "import React, { Suspense, useState } from \"react\";\nimport { AppBar } from \"@react-md/app-bar\";\nimport { CircularProgress } from \"@react-md/progress\";\nimport { Tabs, TabsManager } from \"@react-md/tabs\";\nimport { CrossFade } from \"@react-md/transition\";\nimport { Text } from \"@react-md/typography\";\n\nimport useFakeLazyImport from \"./useFakeLazyImport\";\n\nimport Container from \"./Container\";\nimport Page1 from \"./Page1\";\nimport Page2 from \"./Page2\";\nimport Page3 from \"./Page3\";\n\nconst CurrentPage = ({ page }) => {\n  let content = <Page1 />;\n  if (page === 1) {\n    content = <Page2 />;\n  } else if (page === 2) {\n    content = <Page3 />;\n  }\n\n  return <CrossFade>{content}</CrossFade>;\n};\n\nconst CrossFadeExamplesAsync = () => {\n  // just make it so it doesn't start loading until a new tab is shown\n  const [page, setPage] = useState(-1);\n  const Content = useFakeLazyImport(CurrentPage, page, 5000);\n\n  return (\n    <>\n      <TabsManager\n        activeIndex={page === -1 ? 0 : page}\n        onActiveIndexChange={(index) => setPage(index)}\n        tabs={[\"Page 1\", \"Page 2\", \"Page 3\"]}\n        tabsId=\"static-transition\"\n      >\n        <AppBar theme=\"default\">\n          <Tabs />\n        </AppBar>\n      </TabsManager>\n      <Container>\n        {page === -1 && (\n          <Text type=\"headline-6\">\n            {'Click on \"Page 2\" or \"Page 3\" to start the demo'}\n          </Text>\n        )}\n\n        {page !== -1 && (\n          <Suspense fallback={<CircularProgress id=\"async-loading-progress\" />}>\n            <Content page={page} />\n          </Suspense>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default CrossFadeExamplesAsync;\n"
  },
  "src/useFakeLazyImport.js": {
    "content": "import { useMemo, lazy } from \"react\";\n\nfunction fakeImport(Component, delay) {\n  return new Promise((resolve) => {\n    window.setTimeout(() => {\n      resolve({ default: Component });\n    }, delay);\n  });\n}\n\n/**\n * This is a hook that will allow lazily import a component each time the `Component`\n * changes or the `key` changes so that it can work with `Suspense` from React.\n *\n *\n * You should probably never do this... but this is a way to make it so that\n * the lazy loaded component can be re-loaded infinitely after resetting the\n * demo. Without this, the lazy implementation will immediately resolve the\n * fake import and not show any progress\n */\nexport default function useFakeLazyImport(Component, key = null, delay = 5000) {\n  // disabled since this is really hacky and want it to also update if the key changes\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useMemo(() => lazy(() => fakeImport(Component, delay)), [\n    Component,\n    key,\n    delay,\n  ]);\n}\n"
  },
  "src/Container.jsx": {
    "content": "import React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\n\nimport styles from \"./Container.module.scss\";\n\nexport default forwardRef(({ children, className, ...props }, ref) => (\n  <div {...props} className={cn(styles.container, className)} ref={ref}>\n    {children}\n  </div>\n));\n"
  },
  "src/Container.module.scss": {
    "content": "@import \"~@react-md/utils/dist/mixins\";\n\n.container {\n  @include rmd-utils-scroll;\n\n  height: 20rem;\n}\n"
  },
  "src/Page1.jsx": {
    "content": "import React, { forwardRef } from \"react\";\nimport { Text } from \"@react-md/typography\";\n\nexport default forwardRef((props, ref) => (\n  <div {...props} ref={ref}>\n    <Text type=\"headline-4\">Page 1</Text>\n    <Text>\n      Nunc dapibus nec neque vitae aliquam. Phasellus eu luctus tortor. Morbi et\n      massa lectus. Nam nec posuere urna, nec tincidunt ligula. Vestibulum in\n      urna dapibus, rutrum nisi eu, convallis leo. Morbi maximus ultricies metus\n      at venenatis. Nulla tincidunt in enim ac semper. Maecenas at felis eget\n      dui malesuada placerat eu a dui. Vestibulum vel quam egestas turpis\n      commodo euismod ac quis purus.\n    </Text>\n  </div>\n));\n"
  },
  "src/Page2.jsx": {
    "content": "import React, { forwardRef } from \"react\";\nimport { Text } from \"@react-md/typography\";\n\nexport default forwardRef((props, ref) => (\n  <div {...props} ref={ref}>\n    <Text type=\"headline-4\">Page 2</Text>\n    <Text>\n      Nullam consectetur rhoncus rhoncus. Nullam cursus porttitor lacus non\n      facilisis. Donec tincidunt arcu sollicitudin neque iaculis sollicitudin.\n      Vivamus in accumsan turpis. Praesent elementum elit vitae risus\n      sollicitudin pretium. Aliquam vitae diam non libero efficitur consequat.\n      Ut a porttitor nibh. Pellentesque habitant morbi tristique senectus et\n      netus et malesuada fames ac turpis egestas.\n    </Text>\n  </div>\n));\n"
  },
  "src/Page3.jsx": {
    "content": "import React, { forwardRef } from \"react\";\nimport { Text } from \"@react-md/typography\";\n\nexport default forwardRef((props, ref) => (\n  <div {...props} ref={ref}>\n    <Text type=\"headline-4\">Page 3</Text>\n    <Text>\n      Donec lacinia velit ac est finibus malesuada. Mauris arcu dui, euismod\n      quis erat et, iaculis molestie orci. Nullam efficitur felis non feugiat\n      tincidunt. Etiam sed tellus eu nunc fermentum vestibulum. Integer maximus\n      iaculis fringilla. Donec tincidunt mauris quis iaculis volutpat. Ut tempor\n      dui a nisl eleifend, non tempor ipsum condimentum. Morbi ultrices lectus a\n      feugiat fringilla. Morbi ornare vehicula lorem, eu consectetur augue\n      tristique sit amet. Vestibulum fringilla auctor eros, at consectetur\n      libero hendrerit id. Interdum et malesuada fames ac ante ipsum primis in\n      faucibus.\n    </Text>\n  </div>\n));\n"
  },
  "src/CrossFadeExamplesStatic.jsx": {
    "content": "import React, { useEffect, useRef, useState } from \"react\";\nimport { AppBar } from \"@react-md/app-bar\";\nimport { Tabs, TabsManager } from \"@react-md/tabs\";\nimport { CrossFade } from \"@react-md/transition\";\n\nimport Container from \"./Container\";\nimport Page1 from \"./Page1\";\nimport Page2 from \"./Page2\";\nimport Page3 from \"./Page3\";\n\nconst CrossFadeExamplesStatic = () => {\n  const [page, setPage] = useState(0);\n  let content = <Page1 />;\n  if (page === 1) {\n    content = <Page2 />;\n  } else if (page === 2) {\n    content = <Page3 />;\n  }\n\n  // don't want the first render to trigger the animation, but all changes afterwards\n  // should.\n  const rendered = useRef(false);\n  useEffect(() => {\n    rendered.current = true;\n  }, []);\n\n  return (\n    <>\n      <TabsManager\n        activeIndex={page}\n        onActiveIndexChange={(index) => setPage(index)}\n        tabs={[\"Page 1\", \"Page 2\", \"Page 3\"]}\n        tabsId=\"static-transition\"\n      >\n        <AppBar theme=\"default\">\n          <Tabs />\n        </AppBar>\n      </TabsManager>\n      <Container>\n        <CrossFade key={page} appear={rendered.current}>\n          {content}\n        </CrossFade>\n      </Container>\n    </>\n  );\n};\n\nexport default CrossFadeExamplesStatic;\n"
  }
}
