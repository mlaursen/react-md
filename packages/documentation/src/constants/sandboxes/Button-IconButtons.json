{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Button Example - Icon Buttons</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/button/dist/mixins\";\n@import \"~@react-md/icon/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Button Example - Icon Buttons",
      "description": "Example from https://react-md.dev/packages/button/demos#icon-buttons",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "latest",
        "@react-md/icon": "latest",
        "@react-md/layout": "latest",
        "@react-md/material-icons": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "classnames": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/classnames": "latest",
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.tsx": {
    "content": "import React, { FC } from \"react\";\nimport { Button } from \"@react-md/button\";\nimport { FontIcon } from \"@react-md/icon\";\nimport { DeleteSVGIcon, FavoriteSVGIcon } from \"@react-md/material-icons\";\n\nimport Container from \"./Container\";\n\nconst Demo: FC = () => (\n  <Container>\n    <Button\n      id=\"icon-button-1\"\n      buttonType=\"icon\"\n      theme=\"primary\"\n      aria-label=\"Favorite\"\n    >\n      <FontIcon>favorite</FontIcon>\n    </Button>\n    <Button\n      id=\"icon-button-2\"\n      buttonType=\"icon\"\n      theme=\"secondary\"\n      aria-label=\"Favorite\"\n    >\n      <FavoriteSVGIcon />\n    </Button>\n    <Button\n      id=\"icon-button-3\"\n      buttonType=\"icon\"\n      theme=\"warning\"\n      aria-label=\"Move to Trash\"\n    >\n      <DeleteSVGIcon />\n    </Button>\n    <Button\n      id=\"icon-button-4\"\n      buttonType=\"icon\"\n      theme=\"error\"\n      aria-label=\"Permanently Delete\"\n    >\n      <DeleteSVGIcon />\n    </Button>\n    <Button id=\"icon-button-5\" buttonType=\"icon\" theme=\"clear\" aria-label=\"Add\">\n      <FontIcon>add</FontIcon>\n    </Button>\n    <Button\n      id=\"icon-button-6\"\n      buttonType=\"icon\"\n      disabled\n      aria-label=\"Disabled Add Button\"\n    >\n      <FontIcon>add</FontIcon>\n    </Button>\n    <Button\n      id=\"icon-button-7\"\n      buttonType=\"icon\"\n      theme=\"primary\"\n      themeType=\"outline\"\n      aria-label=\"Favorite\"\n    >\n      <FontIcon>favorite</FontIcon>\n    </Button>\n    <Button\n      id=\"icon-button-8\"\n      buttonType=\"icon\"\n      theme=\"secondary\"\n      themeType=\"outline\"\n      aria-label=\"Favorite\"\n    >\n      <FavoriteSVGIcon />\n    </Button>\n    <Button\n      id=\"icon-button-9\"\n      buttonType=\"icon\"\n      theme=\"warning\"\n      themeType=\"contained\"\n      aria-label=\"Move to Trash\"\n    >\n      <DeleteSVGIcon />\n    </Button>\n    <Button\n      id=\"icon-button-10\"\n      buttonType=\"icon\"\n      theme=\"error\"\n      themeType=\"contained\"\n      aria-label=\"Permanently Delete\"\n    >\n      <DeleteSVGIcon />\n    </Button>\n    <Button\n      id=\"icon-button-11\"\n      buttonType=\"icon\"\n      theme=\"clear\"\n      themeType=\"outline\"\n      aria-label=\"Add\"\n    >\n      <FontIcon>add</FontIcon>\n    </Button>\n    <Button\n      id=\"icon-button-12\"\n      buttonType=\"icon\"\n      disabled\n      aria-label=\"Disabled Add Button\"\n      themeType=\"outline\"\n    >\n      <FontIcon>add</FontIcon>\n    </Button>\n  </Container>\n);\n\nexport default Demo;\n"
  },
  "src/Container.tsx": {
    "content": "import React, { FC, HTMLAttributes } from \"react\";\nimport cn from \"classnames\";\n\nimport styles from \"./Container.module.scss\";\n\nconst Container: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  children,\n  ...props\n}) => (\n  <div {...props} className={cn(styles.container, className)}>\n    {children}\n  </div>\n);\n\nexport default Container;\n"
  },
  "src/Container.module.scss": {
    "content": ".container {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n\n  :global .rmd-button {\n    margin: 1rem;\n  }\n}\n"
  }
}
