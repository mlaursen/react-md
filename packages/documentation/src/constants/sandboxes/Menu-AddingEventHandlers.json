{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Menu Example - Adding Event Handlers</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/divider/dist/mixins\";\n@import \"~@react-md/menu/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Menu Example - Adding Event Handlers",
      "description": "Example from https://react-md.dev/packages/menu/demos#adding-event-handlers",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/divider": "latest",
        "@react-md/layout": "latest",
        "@react-md/material-icons": "latest",
        "@react-md/menu": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.tsx": {
    "content": "import React, { FC } from \"react\";\nimport { Divider } from \"@react-md/divider\";\n\nimport AddingOnClick from \"./AddingOnClick\";\nimport CustomMenuItems from \"./CustomMenuItems\";\n\nconst Demo: FC = () => (\n  <>\n    <AddingOnClick />\n    <Divider />\n    <CustomMenuItems />\n  </>\n);\n\nexport default Demo;\n"
  },
  "src/AddingEventHandlers/AddingOnClick.tsx": {
    "content": "import React, { FC, useState } from \"react\";\nimport { DropdownMenu } from \"@react-md/menu\";\nimport { Text } from \"@react-md/typography\";\n\nconst AddingOnClick: FC = () => {\n  const [value, setValue] = useState(\"None\");\n\n  const onClick = (event: React.MouseEvent): void => {\n    setValue(event.currentTarget.textContent || \"\");\n  };\n  return (\n    <>\n      <Text type=\"headline-6\" margin=\"none\">\n        Adding <code>onClick</code>\n      </Text>\n      <Text>\n        Last clicked value: <code>{value}</code>\n      </Text>\n      <DropdownMenu\n        id=\"event-handler-menu-1\"\n        items={[\n          {\n            onClick,\n            children: \"Item 1\",\n          },\n          {\n            onClick,\n            children: \"Item 2\",\n          },\n          {\n            onClick,\n            children: \"Item 3\",\n          },\n          {\n            onClick,\n            children: \"Item 4\",\n          },\n        ]}\n      >\n        Options\n      </DropdownMenu>\n    </>\n  );\n};\n\nexport default AddingOnClick;\n"
  },
  "src/AddingEventHandlers/CustomMenuItems.tsx": {
    "content": "import React, { FC, useCallback, useState } from \"react\";\nimport { AddSVGIcon, ShareSVGIcon } from \"@react-md/material-icons\";\nimport { DropdownMenu, MenuItem, MenuItemProps } from \"@react-md/menu\";\nimport { Text } from \"@react-md/typography\";\n\nconst Share: FC<MenuItemProps> = (props) => (\n  <MenuItem {...props} leftAddon={<ShareSVGIcon />}>\n    Share\n  </MenuItem>\n);\n\nconst New: FC<MenuItemProps> = (props) => (\n  <MenuItem {...props} leftAddon={<AddSVGIcon />}>\n    New\n  </MenuItem>\n);\n\nconst CustomMenuItems: FC = () => {\n  const [value, setValue] = useState(\"None\");\n  const onClick = useCallback((event: React.MouseEvent<HTMLLIElement>) => {\n    setValue(event.currentTarget.textContent || \"\");\n  }, []);\n  return (\n    <>\n      <Text type=\"headline-6\">\n        Custom <code>MenuItem</code>\n      </Text>\n      <Text>\n        Last clicked value: <code>{value}</code>\n      </Text>\n      <DropdownMenu\n        id=\"custom-menu-items\"\n        items={[<Share onClick={onClick} />, <New onClick={onClick} />]}\n      >\n        Options\n      </DropdownMenu>\n    </>\n  );\n};\n\nexport default CustomMenuItems;\n"
  }
}
