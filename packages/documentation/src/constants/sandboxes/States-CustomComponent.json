{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://unpkg.com/react-md@next/dist/css/react-md.teal-pink-200-light.min.css\"\n    />\n    <title>States Example - Custom Component</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import 'variables';\n@import '~@react-md/button/dist/mixins';\n@import '~@react-md/layout/dist/mixins';\n@import '~@react-md/states/dist/mixins';\n@import '~@react-md/theme/dist/mixins';\n@import '~@react-md/typography/dist/mixins';\n@import '~@react-md/utils/dist/mixins';\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "src/_variables.scss": {
    "content": "@import '~@react-md/theme/dist/color-palette';\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "States Example - Custom Component",
      "description": "Example from https://react-md.dev/packages/states/demos#custom-component",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "next",
        "@react-md/layout": "next",
        "@react-md/states": "next",
        "@react-md/theme": "next",
        "@react-md/typography": "next",
        "@react-md/utils": "next",
        "cnbuilder": "^2.3.0",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FC, Fragment, ButtonHTMLAttributes } from \"react\";\nimport { cnb } from \"cnbuilder\";;\nimport {\n  useInteractionStates,\n  InteractionStatesOptions,\n} from \"@react-md/states\";\n\nimport \"./CustomComponent.scss\";\n\ninterface CustomButtonProps\n  extends ButtonHTMLAttributes<HTMLButtonElement>,\n    Omit<InteractionStatesOptions, \"handlers\"> {}\n\nconst CustomButton: FC<CustomButtonProps> = ({\n  disabled,\n  disableRipple,\n  disableSpacebarClick,\n  disableProgrammaticRipple,\n  className: propClassName,\n  children,\n  onKeyDown,\n  onKeyUp,\n  onMouseDown,\n  onMouseUp,\n  onMouseLeave,\n  onTouchStart,\n  onTouchMove,\n  onTouchEnd,\n  ...props\n}) => {\n  const { ripples, handlers, className } = useInteractionStates({\n    handlers: {\n      onKeyDown,\n      onKeyUp,\n      onMouseDown,\n      onMouseUp,\n      onMouseLeave,\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd,\n    },\n    disabled,\n    disableRipple,\n    disableSpacebarClick,\n    disableProgrammaticRipple,\n    className: propClassName,\n  });\n\n  return (\n    <button\n      {...props}\n      type=\"button\"\n      className={cnb(\"custom-states-component\", className)}\n      {...handlers}\n    >\n      {children}\n      {ripples}\n    </button>\n  );\n};\n\nconst Demo: FC = () => {\n  return (\n    <Fragment>\n      <CustomButton id=\"custom-button-1\">Hello</CustomButton>\n    </Fragment>\n  );\n};\n\nexport default Demo;\n",
    "isBinary": false
  },
  "src/CustomComponent.scss": {
    "content": "@import '~@react-md/button/dist/mixins';\n@import '~@react-md/states/dist/mixins';\n@import '~@react-md/theme/dist/mixins';\n@import '~@react-md/typography/dist/mixins';\n\n.custom-states-component {\n  @include rmd-button-unstyled;\n  @include rmd-typography(button);\n  @include rmd-theme(background-color, primary);\n  @include rmd-theme(color, on-primary);\n  @include rmd-states-surface;\n\n  position: relative;\n}\n",
    "isBinary": false
  }
}
