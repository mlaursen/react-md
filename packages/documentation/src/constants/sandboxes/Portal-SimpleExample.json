{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Portal Example - Simple Example</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/button/dist/mixins\";\n@import \"~@react-md/icon/dist/mixins\";\n@import \"~@react-md/list/dist/mixins\";\n@import \"~@react-md/overlay/dist/mixins\";\n@import \"~@react-md/elevation/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Portal Example - Simple Example",
      "description": "Example from https://react-md.dev/packages/portal/demos#simple-example",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "latest",
        "@react-md/elevation": "latest",
        "@react-md/icon": "latest",
        "@react-md/layout": "latest",
        "@react-md/list": "latest",
        "@react-md/material-icons": "latest",
        "@react-md/overlay": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.tsx": {
    "content": "import React, { CSSProperties, FC, useCallback, useRef, useState } from \"react\";\nimport { Button } from \"@react-md/button\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport { List, ListItem } from \"@react-md/list\";\nimport { ArrowDropDownSVGIcon } from \"@react-md/material-icons\";\nimport { Overlay } from \"@react-md/overlay\";\nimport { Text } from \"@react-md/typography\";\nimport { getFixedPosition, ScrollListener, useToggle } from \"@react-md/utils\";\n\nimport styles from \"./SimpleExample.module.scss\";\n\nconst Demo: FC = () => {\n  const [visible, , hide, toggle] = useToggle(false);\n  const [style, setStyle] = useState<CSSProperties | undefined>();\n  const buttonRef = useRef<HTMLButtonElement | null>(null);\n  const listRef = useRef<HTMLUListElement | null>(null);\n\n  const updatePosition = useCallback(() => {\n    setStyle(\n      getFixedPosition({\n        container: buttonRef.current,\n        element: listRef.current,\n      }).style\n    );\n  }, []);\n  const listRefCB = useCallback((list: HTMLUListElement | null) => {\n    listRef.current = list;\n\n    updatePosition();\n    // only want to call this once on mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <Button\n        id=\"portal-button\"\n        theme=\"secondary\"\n        themeType=\"outline\"\n        aria-haspopup=\"true\"\n        aria-expanded={visible}\n        onClick={toggle}\n        ref={buttonRef}\n      >\n        <TextIconSpacing icon={<ArrowDropDownSVGIcon />} iconAfter>\n          Options...\n        </TextIconSpacing>\n      </Button>\n      <Overlay\n        id=\"portal-menu-overlay\"\n        className={styles.overlay}\n        visible={visible}\n        onRequestClose={hide}\n      >\n        <List\n          role=\"menu\"\n          id=\"portal-menu\"\n          aria-labelledby=\"portal-button\"\n          tabIndex={-1}\n          ref={listRefCB}\n          style={style}\n          className={styles.menu}\n          onClick={(event) => {\n            if (event.currentTarget !== event.target) {\n              hide();\n            }\n          }}\n        >\n          <ScrollListener onScroll={updatePosition} />\n          {Array.from({ length: 6 }).map((_, i) => (\n            <ListItem id={`menu-item-${i}`} key={i} role=\"menuitem\">\n              {`Option ${i + 1}`}\n            </ListItem>\n          ))}\n        </List>\n      </Overlay>\n      <Text>\n        In condimentum ultrices metus ut viverra. In faucibus erat eu massa\n        tincidunt finibus. Donec eget quam venenatis, venenatis arcu sed, mollis\n        tellus. Mauris massa nunc, condimentum quis nisi vel, fermentum\n        pellentesque est. Pellentesque varius rhoncus dui. Donec suscipit\n        gravida justo eu pharetra. Donec suscipit neque a orci bibendum, a\n        consectetur ipsum finibus. Aenean est ligula, aliquet ut nunc vitae,\n        volutpat pharetra tortor. Cras ipsum mi, posuere eu diam a, cursus\n        euismod mi. Ut vitae eros nibh.\n      </Text>\n    </div>\n  );\n};\n\nexport default Demo;\n"
  },
  "src/SimpleExample.module.scss": {
    "content": "@import \"~@react-md/elevation/dist/mixins\";\n@import \"~@react-md/overlay/dist/variables\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/overlay/dist/mixins\";\n\n.container {\n  @include rmd-utils-scroll;\n\n  height: 10rem;\n  position: relative;\n}\n\n.overlay {\n  @include rmd-overlay-theme(background-color, transparent);\n}\n\n.menu {\n  @include rmd-elevation(4);\n  @include rmd-theme(background-color, surface);\n\n  position: fixed;\n  z-index: $rmd-overlay-z-index + 1;\n}\n"
  }
}
