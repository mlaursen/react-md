{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Tree Example - Customizing Tree Items</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/tree/dist/mixins\";\n@import \"~@react-md/icon/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Tree Example - Customizing Tree Items",
      "description": "Example from https://react-md.dev/packages/tree/demos#customizing-tree-items",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/icon": "latest",
        "@react-md/layout": "latest",
        "@react-md/material-icons": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/tree": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "classnames": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/classnames": "latest",
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.tsx": {
    "content": "import React, { FC, ReactNode } from \"react\";\nimport cn from \"classnames\";\nimport {\n  ArrowDropDownSVGIcon,\n  FolderOpenSVGIcon,\n  FolderSVGIcon,\n} from \"@react-md/material-icons\";\nimport {\n  GetItemProps,\n  Tree,\n  TreeData,\n  TreeItemIds,\n  useTreeItemExpansion,\n  useTreeItemSelection,\n} from \"@react-md/tree\";\n\nimport FileSVGIcon from \"./FileSVGIcon\";\nimport HTML5SVGIcon from \"icons/HTML5SVGIcon\";\nimport SassSVGIcon from \"./SassSVGIcon\";\nimport TypescriptSVGIcon from \"./TypescriptSVGIcon\";\nimport createIdGenerator from \"./createIdGenerator\";\n\nimport styles from \"./CustomizingTreeItems.module.scss\";\n\ntype ItemType = \"folder\" | \"html\" | \"typescript\" | \"scss\" | \"text\";\ninterface Item extends TreeItemIds {\n  name: string;\n  type: ItemType;\n}\n\nconst uuid = createIdGenerator(\"custom-tree-items\");\nconst createItem = (\n  name: string,\n  type: ItemType,\n  parentId: string | null = null\n): Item => {\n  const itemId = uuid();\n  return {\n    itemId,\n    parentId,\n    name,\n    type,\n  };\n};\n\nconst publicFolder = createItem(\"public\", \"folder\");\nconst srcFolder = createItem(\"src\", \"folder\");\nconst indexHtml = createItem(\"index.html\", \"html\", srcFolder.itemId);\nconst robots = createItem(\"robots.txt\", \"text\", publicFolder.itemId);\nconst demo = createItem(\"Demo.tsx\", \"typescript\", srcFolder.itemId);\nconst variables = createItem(\"_variables.scss\", \"scss\", srcFolder.itemId);\nconst index = createItem(\"index.ts\", \"typescript\", srcFolder.itemId);\n\nconst data = [\n  publicFolder,\n  srcFolder,\n  indexHtml,\n  robots,\n  demo,\n  variables,\n  index,\n].reduce<TreeData<Item>>(\n  (tree, item) => ({ ...tree, [item.itemId]: item }),\n  {}\n);\n\nconst getItemProps: GetItemProps<Item> = (item) => {\n  const { selected, focused, expanded, type } = item;\n  let leftAddon: ReactNode = null;\n  switch (type) {\n    case \"folder\":\n      leftAddon = expanded ? <FolderOpenSVGIcon /> : <FolderSVGIcon />;\n      break;\n    case \"html\":\n      leftAddon = <HTML5SVGIcon />;\n      break;\n    case \"text\":\n      leftAddon = <FileSVGIcon />;\n      break;\n    case \"scss\":\n      leftAddon = <SassSVGIcon />;\n      break;\n    case \"typescript\":\n      leftAddon = <TypescriptSVGIcon />;\n      break;\n    // no default\n  }\n\n  return {\n    leftAddon,\n    expanderIcon: <ArrowDropDownSVGIcon />,\n    className: cn(styles.item, {\n      [styles.focused]: focused,\n      [styles.selected]: selected,\n    }),\n  };\n};\n\nconst Demo: FC = () => {\n  const selection = useTreeItemSelection([demo.itemId], false);\n  const expansion = useTreeItemExpansion([\n    srcFolder.itemId,\n    publicFolder.itemId,\n  ]);\n\n  return (\n    <Tree\n      id=\"customizing-tree-items\"\n      data={data}\n      aria-label=\"Tree\"\n      className={styles.tree}\n      {...selection}\n      {...expansion}\n      getItemProps={getItemProps}\n    />\n  );\n};\n\nexport default Demo;\n"
  },
  "src/FileSVGIcon.tsx": {
    "content": "// source: https://ionicons.com/\nimport React, { FC } from \"react\";\nimport cn from \"classnames\";\nimport { SVGIconProps } from \"@react-md/icon\";\n\nimport { Component as FileSVG } from \"./file.svg\";\n\nconst FileSVGIcon: FC<SVGIconProps> = ({ className, ...props }) => (\n  <FileSVG {...props} className={cn(\"rmd-icon rmd-icon--svg\", className)} />\n);\n\nexport default FileSVGIcon;\n"
  },
  "src/file.svg": {
    "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n  <path d=\"M288 48H136c-22.092 0-40 17.908-40 40v336c0 22.092 17.908 40 40 40h240c22.092 0 40-17.908 40-40V176L288 48zm-16 144V80l112 112H272z\"/>\n</svg>\n"
  },
  "src/HTML5SVGIcon.tsx": {
    "content": "// source: https://konpa.github.io/devicon/\nimport React, { FC } from \"react\";\nimport cn from \"classnames\";\nimport { SVGIconProps } from \"@react-md/icon\";\n\nimport { Component as HTML5SVG } from \"./html5.svg\";\n\nconst HTML5SVGIcon: FC<SVGIconProps> = ({ className, ...props }) => (\n  <HTML5SVG {...props} className={cn(\"rmd-icon rmd-icon--svg\", className)} />\n);\n\nexport default HTML5SVGIcon;\n"
  },
  "src/html5.svg": {
    "content": "<svg viewBox=\"0 0 128 128\">\n  <path fill=\"#E44D26\" d=\"M19.037 113.876l-10.005-112.215h109.936l-10.016 112.198-45.019 12.48z\"></path>\n  <path fill=\"#F16529\" d=\"M64 116.8l36.378-10.086 8.559-95.878h-44.937z\"></path>\n  <path fill=\"#EBEBEB\" d=\"M64 52.455h-18.212l-1.258-14.094h19.47v-13.762h-34.511l.33 3.692 3.382 37.927h30.799zM64 88.198l-.061.017-15.327-4.14-.979-10.975h-13.817l1.928 21.609 28.193 7.826.063-.017z\"></path>\n  <path fill=\"#fff\" d=\"M63.952 52.455v13.763h16.947l-1.597 17.849-15.35 4.143v14.319l28.215-7.82.207-2.325 3.234-36.233.335-3.696h-3.708zM63.952 24.599v13.762h33.244l.276-3.092.628-6.978.329-3.692z\"></path>\n</svg>\n"
  },
  "src/SassSVGIcon.tsx": {
    "content": "// source: https://konpa.github.io/devicon/\nimport React, { FC } from \"react\";\nimport cn from \"classnames\";\nimport { SVGIconProps } from \"@react-md/icon\";\n\nimport { Component as SassSVG } from \"./sass.svg\";\n\nconst SassSVGIcon: FC<SVGIconProps> = ({ className, ...props }) => (\n  <SassSVG {...props} className={cn(\"rmd-icon rmd-icon--svg\", className)} />\n);\n\nexport default SassSVGIcon;\n"
  },
  "src/sass.svg": {
    "content": "<svg viewBox=\"0 0 128 128\">\n  <path d=\"M1.219 56.156c0 .703.207 1.167.323 1.618.756 2.933 2.381 5.45 4.309 7.746 2.746 3.272 6.109 5.906 9.554 8.383 2.988 2.148 6.037 4.248 9.037 6.38.515.366 1.002.787 1.561 1.236-.481.26-.881.489-1.297.7-3.959 2.008-7.768 4.259-11.279 6.986-2.116 1.644-4.162 3.391-5.607 5.674-2.325 3.672-3.148 7.584-1.415 11.761.506 1.22 1.278 2.274 2.367 3.053.353.252.749.502 1.162.6 1.058.249 2.136.412 3.207.609l3.033-.002c3.354-.299 6.407-1.448 9.166-3.352 4.312-2.976 7.217-6.966 8.466-12.087.908-3.722.945-7.448-.125-11.153-.099-.344-.224-.681-.354-1.014-.13-.333-.283-.657-.463-1.072l6.876-3.954.103.088c-.125.409-.258.817-.371 1.23-.817 2.984-1.36 6.02-1.165 9.117.208 3.3 1.129 6.389 3.061 9.146 1.562 2.23 5.284 2.313 6.944.075.589-.795 1.16-1.626 1.589-2.513 1.121-2.315 2.159-4.671 3.23-7.011l.187-.428c-.077 1.108-.167 2.081-.208 3.055-.064 1.521.025 3.033.545 4.48.445 1.238 1.202 2.163 2.62 2.326.97.111 1.743-.333 2.456-.896 1.114-.879 2.019-1.965 2.691-3.199 1.901-3.491 3.853-6.961 5.576-10.54 1.864-3.871 3.494-7.855 5.225-11.792l.286-.698c.409 1.607.694 3.181 1.219 4.671.61 1.729 1.365 3.417 2.187 5.058.389.775.344 1.278-.195 1.928-2.256 2.72-4.473 5.473-6.692 8.223-.491.607-.98 1.225-1.389 1.888-.247.403-.411.894-.48 1.364-.133.898.422 1.764 1.383 1.971.878.189 1.813.259 2.708.193 3.097-.228 5.909-1.315 8.395-3.157 3.221-2.386 4.255-5.642 3.475-9.501-.211-1.047-.584-2.065-.947-3.074-.163-.455-.174-.774.123-1.198 2.575-3.677 4.775-7.578 6.821-11.569.081-.157.164-.314.306-.482.663 3.45 1.661 6.775 3.449 9.792-.912.879-1.815 1.676-2.632 2.554-1.799 1.934-3.359 4.034-4.173 6.595-.35 1.104-.619 2.226-.463 3.405.242 1.831 1.742 3.021 3.543 2.604 3.854-.892 7.181-2.708 9.612-5.925 1.636-2.166 1.785-4.582 1.1-7.113-.188-.688-.411-1.365-.651-2.154.951-.295 1.878-.649 2.837-.868 4.979-1.136 9.904-.938 14.702.86 2.801 1.05 5.064 2.807 6.406 5.571 1.639 3.379.733 6.585-2.452 8.721-.297.199-.637.356-.883.605-.151.153-.242.459-.205.67.021.123.346.277.533.275 1.047-.008 1.896-.557 2.711-1.121 2.042-1.413 3.532-3.314 3.853-5.817l.063-.188-.077-1.63c-.031-.094.023-.187.016-.258-.434-3.645-2.381-6.472-5.213-8.688-3.28-2.565-7.153-3.621-11.249-3.788-3.338-.136-6.619.36-9.765 1.503-.897.325-1.786.71-2.688 1.073-.121-.219-.251-.429-.358-.646-.926-1.896-2.048-3.708-2.296-5.882-.176-1.544-.392-3.086-.025-4.613.353-1.469.813-2.913 1.246-4.362.223-.746.066-1.164-.646-1.5-.248-.117-.518-.219-.786-.258-1.75-.254-3.476-.109-5.171.384-.6.175-1.036.511-1.169 1.175-.076.381-.231.746-.339 1.122-.443 1.563-.757 3.156-1.473 4.645-1.794 3.735-3.842 7.329-5.938 10.897-.227.385-.466.763-.752 1.23-.736-1.54-1.521-2.922-1.759-4.542-.269-1.832-.481-3.661-.025-5.479.339-1.356.782-2.687 1.19-4.025.193-.636.104-.97-.472-1.305-.291-.169-.62-.319-.948-.368-1.815-.269-3.603-.128-5.354.438-.543.176-.828.527-.994 1.087-.488 1.652-.904 3.344-1.589 4.915-2.774 6.36-5.628 12.687-8.479 19.013-.595 1.321-1.292 2.596-1.963 3.882-.17.326-.418.613-.63.919-.17-.201-.236-.339-.235-.477.005-.813-.092-1.65.063-2.436.469-2.378 1.009-4.743 1.578-7.099.47-1.946 1.017-3.874 1.538-5.807.175-.647.178-1.252-.287-1.796-.781-.911-2.413-1.111-3.381-.409l-.428.242.083-.69c.204-1.479.245-2.953-.161-4.41-.506-1.816-1.802-2.861-3.686-2.803-.878.027-1.8.177-2.613.497-3.419 1.34-6.048 3.713-8.286 6.568-.203.259-.471.495-.757.654-2.893 1.604-5.795 3.188-8.696 4.778l-3.229 1.769c-.866-.826-1.653-1.683-2.546-2.41-2.727-2.224-5.498-4.393-8.244-6.592-2.434-1.949-4.792-3.979-6.596-6.56-1.342-1.92-2.207-4.021-2.29-6.395-.105-3.025.753-5.789 2.293-8.362 1.97-3.292 4.657-5.934 7.611-8.327 3.125-2.53 6.505-4.678 10.008-6.639 4.901-2.743 9.942-5.171 15.347-6.774 5.542-1.644 11.165-2.585 16.965-1.929 2.28.258 4.494.78 6.527 1.895 1.557.853 2.834 1.97 3.428 3.716.586 1.718.568 3.459.162 5.204-.825 3.534-2.76 6.447-5.195 9.05-3.994 4.267-8.866 7.172-14.351 9.091-3.165 1.107-6.421 1.802-9.765 2.083-2.729.229-5.401-.013-7.985-.962-1.711-.629-3.201-1.591-4.399-2.987-.214-.25-.488-.521-.887-.287-.391.23-.46.602-.329.979.219.626.421 1.278.762 1.838.857 1.405 2.107 2.424 3.483 3.298 2.643 1.681 5.597 2.246 8.66 2.377 4.648.201 9.183-.493 13.654-1.74 6.383-1.78 11.933-4.924 16.384-9.884 3.706-4.13 6.353-8.791 6.92-14.419.277-2.747-.018-5.438-1.304-7.944-1.395-2.715-3.613-4.734-6.265-6.125-3.862-2.025-8.03-3.204-12.332-3.204h-4.31c-5.21 0-10.247 1.493-15.143 3.274-3.706 1.349-7.34 2.941-10.868 4.703-7.683 3.839-14.838 8.468-20.715 14.833-2.928 3.171-5.407 6.67-6.833 10.79-.417 1.206-.813 2.499-1.111 3.746m27.839 36.013c-.333 4.459-2.354 8.074-5.657 11.002-1.858 1.646-3.989 2.818-6.471 3.23-.9.149-1.821.185-2.694-.188-1.245-.532-1.524-1.637-1.548-2.814-.037-1.876.62-3.572 1.521-5.186 1.176-2.104 2.9-3.708 4.741-5.206 2.9-2.361 6.046-4.359 9.268-6.245l.243-.1c.498 1.84.735 3.657.597 5.507zm25.158-19.379c-.235 1.424-.529 2.849-.945 4.229-1.438 4.777-3.285 9.406-5.282 13.973-.369.845-.906 1.616-1.373 2.417-.072.124-.179.231-.283.334-.578.571-1.126.541-1.418-.206-.34-.868-.549-1.797-.729-2.716-.121-.617-.092-1.265-.13-1.897.039-4.494 1.41-8.578 3.736-12.38.959-1.568 2.003-3.062 3.598-4.054.49-.305 1.04-.55 1.595-.706.85-.239 1.372.154 1.231 1.006zm17.164 21.868l6.169-7.203c.257 2.675-4.29 8.015-6.169 7.203zm19.703-4.847c-.436.25-.911.43-1.358.661-.409.212-.544-.002-.556-.354-.008-.239.027-.489.093-.721.833-2.938 2.366-5.446 4.647-7.486l.16-.082c1.085 3.035-.169 6.368-2.986 7.982z\"></path>\n</svg>\n"
  },
  "src/TypescriptSVGIcon.tsx": {
    "content": "// source: https://konpa.github.io/devicon/\nimport React, { FC } from \"react\";\nimport cn from \"classnames\";\nimport { SVGIconProps } from \"@react-md/icon\";\n\nimport { Component as TypescriptSVG } from \"./typescript.svg\";\n\nconst TypescriptSVGIcon: FC<SVGIconProps> = ({ className, ...props }) => (\n  <TypescriptSVG\n    {...props}\n    className={cn(\"rmd-icon rmd-icon--svg\", className)}\n  />\n);\n\nexport default TypescriptSVGIcon;\n"
  },
  "src/typescript.svg": {
    "content": "<svg viewBox=\"0 0 128 128\">\n  <path d=\"M1.5,63.91v62.5h125V1.41H1.5Zm100.73-5a15.56,15.56,0,0,1,7.82,4.5,20.58,20.58,0,0,1,3,4c0,.16-5.4,3.81-8.69,5.85-.12.08-.6-.44-1.13-1.23a7.09,7.09,0,0,0-5.87-3.53c-3.79-.26-6.23,1.73-6.21,5a4.58,4.58,0,0,0,.54,2.34c.83,1.73,2.38,2.76,7.24,4.86,8.95,3.85,12.78,6.39,15.16,10,2.66,4,3.25,10.46,1.45,15.24-2,5.2-6.9,8.73-13.83,9.9a38.32,38.32,0,0,1-9.52-.1,23,23,0,0,1-12.72-6.63c-1.15-1.27-3.39-4.58-3.25-4.82a9.34,9.34,0,0,1,1.15-.73L82,101l3.59-2.08.75,1.11a16.78,16.78,0,0,0,4.74,4.54c4,2.1,9.46,1.81,12.16-.62a5.43,5.43,0,0,0,.69-6.92c-1-1.39-3-2.56-8.59-5-6.45-2.78-9.23-4.5-11.77-7.24a16.48,16.48,0,0,1-3.43-6.25,25,25,0,0,1-.22-8c1.33-6.23,6-10.58,12.82-11.87A31.66,31.66,0,0,1,102.23,58.93ZM72.89,64.15l0,5.12H56.66V115.5H45.15V69.26H28.88v-5A49.19,49.19,0,0,1,29,59.09C29.08,59,39,59,51,59L72.83,59Z\"></path>\n</svg>\n"
  },
  "src/createIdGenerator.ts": {
    "content": "/**\n * An extremely simplified uuid function that is scoped with a speciifc prefix. This\n * will just always increment the total count at the end of the prefix.\n *\n * ```ts\n * const uuid = createIdGenerator(\"my-custom-prefix\");\n *\n * uuid(); // my-custom-prefix-0\n * uuid(); // my-custom-prefix-1\n * uuid(); // my-custom-prefix-2\n * ```\n *\n * @param prefix The string prefix to use\n * @return a function to call to generate a \"uuid\"\n */\nexport default function createIdGenerator(prefix: string): () => string {\n  const generator = (function* idGenerator() {\n    let index = 0;\n    while (true) {\n      yield `${prefix}-${index}`;\n      index += 1;\n    }\n  })();\n\n  return (): string => generator.next().value;\n}\n"
  },
  "src/CustomizingTreeItems.module.scss": {
    "content": "@import \"~@react-md/icon/dist/mixins\";\n@import \"~@react-md/tree/dist/mixins\";\n@import \"~@react-md/typography/dist/variables\";\n\n.tree {\n  // want to decrease the padding-left for each tree item for a more\n  // \"dense\" theme\n  // NOTE: If you are not using CSS modules, you do not need to use the\n  // `$selector-prefix`\n  @include rmd-tree-depths(\n    $selector-prefix: \":global \",\n    $max: 2,\n    $base-padding: 2rem\n  );\n  @include rmd-utils-tablet-media {\n    display: inline-block;\n    width: 15rem;\n  }\n}\n\n.item {\n  // want to decrease the leftAddon spacing for a more \"dense\" theme\n  @include rmd-icon-theme-update-var(text-spacing, 1rem);\n}\n\n.focused {\n  // for this demo, we just want the keyboard focused styles to also appear\n  // for non-keyboard interacting users (usually waits for a keypress)\n  @include rmd-utils-map-to-styles($rmd-tree-item-keyboard-focused-styles);\n}\n\n.selected {\n  color: $rmd-black-base;\n  font-weight: $rmd-typography-bold;\n\n  :global .dark-theme :local & {\n    color: $rmd-white-base;\n  }\n}\n"
  }
}
