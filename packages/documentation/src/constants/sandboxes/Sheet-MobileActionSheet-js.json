{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Sheet Example - Mobile Action Sheet</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.jsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/menu/dist/mixins\";\n@import \"~@react-md/sheet/dist/mixins\";\n@import \"~@react-md/list/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Sheet Example - Mobile Action Sheet",
      "description": "Example from https://react-md.dev/packages/sheet/demos#mobile-action-sheet",
      "main": "src/index.jsx",
      "dependencies": {
        "@react-md/layout": "latest",
        "@react-md/list": "latest",
        "@react-md/material-icons": "latest",
        "@react-md/menu": "latest",
        "@react-md/sheet": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.jsx": {
    "content": "import React, { useCallback } from \"react\";\nimport {\n  ArrowDropDownSVGIcon,\n  DeleteSVGIcon,\n  EditSVGIcon,\n  LinkSVGIcon,\n  ShareSVGIcon,\n} from \"@react-md/material-icons\";\nimport { defaultMenuRenderer, DropdownMenu } from \"@react-md/menu\";\nimport { Sheet } from \"@react-md/sheet\";\nimport { useAppSize } from \"@react-md/utils\";\n\nimport styles from \"./MobileActionSheet.module.scss\";\n\nconst items = [\n  { leftAddon: <ShareSVGIcon />, children: \"Share\" },\n  { leftAddon: <LinkSVGIcon />, children: \"Get link\" },\n  { leftAddon: <EditSVGIcon />, children: \"Edit name\" },\n  { leftAddon: <DeleteSVGIcon />, children: \"Delete collection\" },\n];\n\nconst MenuSheet = ({ children, ...props }) => {\n  const { onRequestClose } = props;\n  const handleClick = useCallback(\n    (event) => {\n      if (event.target !== event.currentTarget) {\n        onRequestClose();\n      }\n    },\n    [onRequestClose]\n  );\n\n  return (\n    <Sheet\n      {...props}\n      className={styles.sheet}\n      onRequestClose={onRequestClose}\n      role=\"menu\"\n      disableFocusOnMount\n      position=\"bottom\"\n      onClick={handleClick}\n    >\n      {children}\n    </Sheet>\n  );\n};\n\nconst renderSheet = ({\n  // these props are only required for the `Menu` component, but not within the sheet\n  // so we can just extract them and not pass them down\n  horizontal: _horizontal,\n  controlId: _controlId,\n  anchor: _anchor,\n  positionOptions: _positionOptions,\n  closeOnResize: _closeOnResize,\n  closeOnScroll: _closeOnScroll,\n  ...props\n}) => <MenuSheet {...props} />;\n\nconst Demo = () => {\n  const { isTablet, isLandscape, isDesktop, isLargeDesktop } = useAppSize();\n  const sheet = !isDesktop && !isLargeDesktop && !(isTablet && isLandscape);\n  return (\n    <DropdownMenu\n      id=\"dropdown-menu-1\"\n      items={items}\n      dropdownIcon={<ArrowDropDownSVGIcon />}\n      menuRenderer={sheet ? renderSheet : defaultMenuRenderer}\n    >\n      Dropdown\n    </DropdownMenu>\n  );\n};\n\nexport default Demo;\n"
  },
  "src/MobileActionSheet.module.scss": {
    "content": "@import \"~@react-md/list/dist/mixins\";\n\n.sheet {\n  padding: $rmd-list-vertical-padding 0;\n}\n"
  }
}
