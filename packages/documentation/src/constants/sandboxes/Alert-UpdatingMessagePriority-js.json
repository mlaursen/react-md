{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"{{THEME}}-theme\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <!-- the styles are loaded through the CDN to speed up codesandbox demos. You'll normally want to import the `src/styles.scss` in the `src/index.tsx` instead to create custom themes -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/gh/mlaursen/react-md@{{RMD_VERSION}}/themes/react-md.teal-pink-200-{{THEME}}.min.css\"\n    />\n    <title>Alert Example - Updating Message Priority</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
  },
  "src/index.jsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\n// the styles are actually loaded as the pre-compiled themes in the index.html\n// to speed up sandbox compilation. If you want to update the theme, you'll need\n// to uncomment this line and remove the `<link>` tag in the `index.html`\n// import \"./styles.scss\"\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"
  },
  "src/styles.scss": {
    "content": "@import \"variables\";\n@import \"~@react-md/layout/dist/mixins\";\n@import \"~@react-md/states/dist/mixins\";\n@import \"~@react-md/theme/dist/mixins\";\n@import \"~@react-md/typography/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n@import \"~@react-md/alert/dist/mixins\";\n@import \"~@react-md/button/dist/mixins\";\n@import \"~@react-md/form/dist/mixins\";\n@import \"~@react-md/elevation/dist/mixins\";\n\n@include react-md-utils;\n"
  },
  "src/_variables.scss": {
    "content": "@import \"~@react-md/theme/dist/color-palette\";\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n"
  },
  "package.json": {
    "content": {
      "title": "Alert Example - Updating Message Priority",
      "description": "Example from https://react-md.dev/packages/alert/demos#updating-message-priority",
      "main": "src/index.jsx",
      "dependencies": {
        "@react-md/alert": "latest",
        "@react-md/button": "latest",
        "@react-md/elevation": "latest",
        "@react-md/form": "latest",
        "@react-md/layout": "latest",
        "@react-md/states": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "@react-md/utils": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    }
  },
  "src/Demo.jsx": {
    "content": "import React, { useCallback, useEffect, useState } from \"react\";\nimport { MessageQueue, useAddMessage, useQueue } from \"@react-md/alert\";\nimport { Button } from \"@react-md/button\";\nimport { Fieldset, Form, Radio, useChoice } from \"@react-md/form\";\nimport { Text } from \"@react-md/typography\";\n\nimport styles from \"./UpdatingMessagePriority.module.scss\";\n\nconst PRIORITIES = [\"next\", \"immediate\", \"replace\"];\n\nconst Demo = () => {\n  const addMessage = useAddMessage();\n  const [priority, handlePriorityChange] = useChoice(\"next\");\n  const queue = useQueue();\n  const [running, setRunning] = useState(false);\n\n  if (running && !queue.length) {\n    setRunning(false);\n  }\n\n  const exampleNextFlow = useCallback(() => {\n    addMessage({\n      messageId: \"message-1\",\n      children: \"First normal message\",\n      messagePriority: \"normal\",\n    });\n\n    addMessage({\n      messageId: \"message-2\",\n      children: \"Second normal message\",\n      messagePriority: \"normal\",\n    });\n\n    setRunning(true);\n  }, [addMessage]);\n\n  useEffect(() => {\n    if (!running) {\n      return;\n    }\n\n    const timeout = window.setTimeout(() => {\n      addMessage({\n        messageId: priority === \"replace\" ? \"message-1\" : \"message-3\",\n        children: \"Incoming Message!\",\n        messagePriority: priority,\n      });\n    }, 2000);\n\n    return () => {\n      window.clearTimeout(timeout);\n    };\n\n    // only want to run on running chagnes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [running]);\n\n  return (\n    <>\n      <div className={styles.output}>\n        <Text type=\"headline-6\" margin=\"bottom\">\n          Message queue:\n        </Text>\n        {queue.map((message, i) => (\n          // actually want to disable it since when the immediate flow is triggered, there will be two messageId\n          // with \"message-1\" for a few milliseconds\n          <pre key={i}>{JSON.stringify(message, null, 2)}</pre>\n        ))}\n      </div>\n      <Form onSubmit={exampleNextFlow}>\n        <Fieldset legend=\"Priority\">\n          {PRIORITIES.map((p) => (\n            <Radio\n              key={p}\n              id={`priority-${p}`}\n              name=\"messagePriority\"\n              label={`Example with \"${p}\" priority`}\n              value={p}\n              checked={p === priority}\n              onChange={handlePriorityChange}\n            />\n          ))}\n        </Fieldset>\n        <Button\n          id=\"update-message-priority-submit\"\n          type=\"submit\"\n          disabled={queue.length > 0}\n        >\n          Create message\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default function UpdatingMessagePriorityContainer() {\n  return (\n    <MessageQueue id=\"updating-message-priority\">\n      <Demo />\n    </MessageQueue>\n  );\n}\n"
  },
  "src/UpdatingMessagePriority.module.scss": {
    "content": "@import \"~@react-md/elevation/dist/mixins\";\n@import \"~@react-md/utils/dist/mixins\";\n\n.output {\n  @include rmd-elevation(4);\n  @include rmd-utils-scroll;\n\n  height: 25rem;\n  margin-bottom: 2rem;\n  padding: 1rem;\n}\n"
  }
}
