[{"description":"The `DataTable` component is used to manage the state of all rows.\nThis can either be a __plain__ table or a __data__ table.\n\nA __data__ table will include checkboxes on each row while a __plain__ table\nwill not.","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the table."},"style":{"type":{"name":"object"},"required":false,"description":"Optional style to apply to the table."},"children":{"type":{"name":"node"},"required":true,"description":"The table contents to display. This *should* be a list of `TableHeader` and `TableBody`\ncomponents."},"defaultSelectedRows":{"type":{"name":"arrayOf","value":{"name":"bool"}},"required":true,"description":"An optional array of booleans denoting if a row is selected.\nThis is an associative array so the index must match the row\nnumber in the `TableBody` component.","defaultValue":{"value":"[]","computed":false}},"responsive":{"type":{"name":"bool"},"required":true,"description":"Boolean if the table is responsive. This will wrap the table in a container\nthat allows scrolling to the right if overflow exists.","defaultValue":{"value":"true","computed":false}},"plain":{"type":{"name":"bool"},"required":false,"description":"Boolean if this table should not include the checkboxes on each row.\nThis really means that the entire table is unselectable and you wish\nto display as a normal table."},"uncheckedIconClassName":{"type":{"name":"string"},"required":true,"description":"The icon className to use for the unchecked row icon. This value\nwill be passed down as `context`.","defaultValue":{"value":"'material-icons'","computed":false}},"uncheckedIconChildren":{"type":{"name":"node"},"required":false,"description":"The icon children to use for the unchecked row icon. This value\nwill be passed down as `context`.","defaultValue":{"value":"'check_box_outline_blank'","computed":false}},"checkedIconClassName":{"type":{"name":"string"},"required":true,"description":"The icon className to use for the checked row icon. This value\nwill be passed down as `context`.","defaultValue":{"value":"'material-icons'","computed":false}},"checkedIconChildren":{"type":{"name":"node"},"required":false,"description":"The icon children to use for the checked row icon. This value\nwill be passed down as `context`.","defaultValue":{"value":"'check_box'","computed":false}}},"source":"src/js/DataTables/DataTable.js","component":"DataTable"},{"description":"The `TableBody` component is used for managing the state of all\n`TableRow` inside of it.","methods":[],"props":{"style":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the tbody."},"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the tbody."},"children":{"type":{"name":"node"},"required":true,"description":"A list or a single item of `TableRow` components to render."}},"source":"src/js/DataTables/TableBody.js","component":"TableBody"},{"description":"A column in a table. This is either the `th` or `td` component. This column\ncan be automatically configured to be adjusted with additional padding\nor auto expand to fill the remaining table space if the `TableRow` component\nhas `autoAdjust` set to `true`. If you would like to prevent this column\nfor being a candidate for auto expanding to remaining space, add the className\n`.prevent-grow`.","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"The optional className for the table column"},"children":{"type":{"name":"node"},"required":false,"description":"The children to display in the column."},"sorted":{"type":{"name":"bool"},"required":false,"description":"Boolean if the column is currently sorted. If this prop is not `undefined`,\nit will add the sort icon unto this column. You will also need to use the\n`onClick` function to toggle the `sorted` prop as well as handling the sorting\nof data.\n\nThis value should really only be set in the `TableHeader` component."},"sortIconChildren":{"type":{"name":"node"},"required":false,"description":"The optional icon children to display in the sort icon.","defaultValue":{"value":"'arrow_upward'","computed":false}},"sortIconClassName":{"type":{"name":"string"},"required":true,"description":"The icon className for the sort icon.","defaultValue":{"value":"'material-icons'","computed":false}},"numeric":{"type":{"name":"bool"},"required":false,"description":"A boolean if the column has numeric data. It will right-align the data."},"adjusted":{"type":{"name":"bool"},"required":false,"description":"Boolean if this column should be adjusted with additional padding. This *should*\nbe handled automatically by the `TableRow` component but can be set manually as well."},"header":{"type":{"name":"bool"},"required":true,"description":"Boolean if this is a `th` component. This value **should** be set\nautomatically for you if it is in the `TableHeader` component.","defaultValue":{"value":"false","computed":false}},"tooltipLabel":{"type":{"name":"string"},"required":false,"description":"The optional tooltip to render on hover."},"tooltipPosition":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'right'","computed":false},{"value":"'bottom'","computed":false},{"value":"'left'","computed":false}]},"required":false,"description":"The position of the tooltip."},"tooltip":{"type":{"name":"node"},"required":false,"description":"The optionally injected tooltip from the `injectTooltip` higher order component."}},"source":"src/js/DataTables/TableColumn.js","component":"TableColumn"},{"description":"A `thead` component ot use in the `DataTable` component. This\nwill automatically update the header row to check if it is selected\nand inject a function to toggle all rows selected if the row is\nuncontrolled. It will also automatically attempt to set the `TableColumn`\ncomponents to be the header type.","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the table header"},"children":{"type":{"name":"custom","raw":"(props, propName, component) => {\n  try {\n    React.Children.only(props.children);\n    return null;\n  } catch (e) {\n    const amt = props.children ? props.children.length : 0;\n    return new Error(\n      `There must only be one child in a '${component}', but ${amt} were given.`\n    );\n  }\n}"},"required":false,"description":"This should be a single `TableRow` component. The `custom` validation will\nwarn you if there are more than one children given or none at all."}},"source":"src/js/DataTables/TableHeader.js","component":"TableHeader"},{"description":"A component for displaying a row in a `DataTable`. This will\nautomatically add a `Checkbox` component to the row if it is not\na `plain` table.\n\nThis component will also automatically adjust the padding between\ncolumns based on the longest column if the `autoAdjust` prop\nis set to true.","methods":[],"props":{"selected":{"type":{"name":"bool"},"required":false,"description":"Boolean if the row is currently selected. If this value will be\ninjected by the `TableHeader` or `TableBody` component."},"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the row."},"children":{"type":{"name":"arrayOf","value":{"name":"node"}},"required":true,"description":"A list of `TableColumn` to display in the table.\n\n> There should be at least 3 columns in a Data table (non plain)"},"onClick":{"type":{"name":"func"},"required":false,"description":"An optional onClick function to call when a row is clicked."},"onCheckboxClick":{"type":{"name":"func"},"required":false,"description":"A function to call when the checkbox is clicked. This\nfunction will will be called with `(rowIndex, event)`. The\n`TableBody` and `TableHeader` components will automatically\nmerge in a function to goggle the checkbox."},"autoAdjust":{"type":{"name":"bool"},"required":true,"description":"A boolean if the row should automatically check all the `TableColumn`s in the row\nand add the className `grow` to the one that is the biggest. You can also disable\nindividual columns by adding the className `.prevent-grow` to them.","defaultValue":{"value":"true","computed":false}},"onMouseOver":{"type":{"name":"func"},"required":false,"description":"An optional function to call onMouseOver."},"onMouseLeave":{"type":{"name":"func"},"required":false,"description":"An optional function to call onMouseLeave."}},"source":"src/js/DataTables/TableRow.js","component":"TableRow"},{"description":"A Text Edit dialog for tables. This can either be a small\nversion which only has the text field or a large version\nthat includes a title with a save and cancel action buttons.","methods":[],"props":{"style":{"type":{"name":"object"},"required":false,"description":"The optional style to apply to the edit dialog."},"className":{"type":{"name":"string"},"required":false,"description":"The optional className to apply to the edit dialog."},"columnStyle":{"type":{"name":"object"},"required":false,"description":"The optional style to apply to the column."},"columnClassName":{"type":{"name":"string"},"required":false,"description":"The optional className to apply to the column."},"transitionDuration":{"type":{"name":"number"},"required":true,"description":"The transition duration when the dialog is moving from\nactive to inactive.","defaultValue":{"value":"300","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Boolean if the edit dialog is disabled."},"maxLength":{"type":{"name":"number"},"required":false,"description":"The optional max length for the edit dialog."},"value":{"type":{"name":"string"},"required":false,"description":"A value to use for the edit dialog text field. This\nwill make the component controlled so you will need\nto provide an `onChange` function."},"onChange":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the text field's value\nis changed. It is called with `(newValue, changeEvent)`."},"defaultValue":{"type":{"name":"string"},"required":false,"description":"The default value for the column."},"onFocus":{"type":{"name":"func"},"required":false,"description":"An optional onFocus function to call."},"onBlur":{"type":{"name":"func"},"required":false,"description":"An optional onBlur function to call."},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"An optional onKeyDown function to call."},"large":{"type":{"name":"bool"},"required":false,"description":"Boolean if the edit dialog should be large."},"id":{"type":{"name":"custom","raw":"isRequiredForA11y(PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.number,\n]))"},"required":false,"description":"An id for the text field in the edit dialog column."},"title":{"type":{"name":"custom","raw":"(props, propName, component, ...others) => {\n  if (props.large) {\n    return PropTypes.string.isRequired(props, propName, component, ...others);\n  } else {\n    return PropTypes.string(props, propName, component, ...others);\n  }\n}"},"required":false,"description":"The title for the large edit dialog. The custom validation changes to required\nwhen the `large` prop is set to true."},"onOkClick":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the OK button is clicked.\nIt is called with `(textFieldValue, clickEvent)`. This function\nwill also be called when a user pressed the enter key."},"okLabel":{"type":{"name":"string"},"required":true,"description":"The label to use for the OK button.","defaultValue":{"value":"'Save'","computed":false}},"onCancelClick":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the Cancel button is clicked.\nIt is called with `(textFieldValueBeforeEdit, clickEvent)`. This\nfunction will also be called when the user presses the escape key."},"cancelLabel":{"type":{"name":"string"},"required":true,"description":"The label to use for the Cancel button.","defaultValue":{"value":"'Cancel'","computed":false}},"onOutsideClick":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the edit dialog is open and the user clicks\nsomewhere else on the page."},"okOnOutsideClick":{"type":{"name":"bool"},"required":true,"description":"A boolean if the action when the edit dialog is open and the user clicks somewhere\nelse on the page should be to confirm the current changes.\n\nIf this is set to `true`, `onOkClick` will be called. Otherwise `onCancelClick` will\nbe called.","defaultValue":{"value":"true","computed":false}}},"source":"src/js/DataTables/EditDialogColumn.js","component":"EditDialogColumn"}]