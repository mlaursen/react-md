[{"description":"The number of columns to use for mobile devices. This _should_\nprobably not be changed.\n","commentRange":{"start":5,"end":7},"context":{"type":"variable","name":"md-grid-phone-columns","value":"4","scope":"default","line":{"start":8,"end":8}},"type":"Number","group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"The margin to use for grids on mobile devices. This should be\none of the values in `$md-grid-available-margins-and-gutters`.\n","commentRange":{"start":10,"end":13},"context":{"type":"variable","name":"md-grid-phone-margin","value":"16px","scope":"default","line":{"start":14,"end":14}},"type":"Number","see":[{"description":"The possible margins and gutters that can be used in a grid.\n","context":{"type":"variable","name":"md-grid-available-margins-and-gutters","value":"(8px 16px 24px 40px)","scope":"private","line":{"start":68,"end":68}}}],"group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"The gutter to use for grids on mobile devices. This should be\none of the values in `$md-grid-available-margins-and-gutters`.\n","commentRange":{"start":16,"end":19},"context":{"type":"variable","name":"md-grid-phone-gutter","value":"16px","scope":"default","line":{"start":20,"end":20}},"type":"Number","see":[{"description":"The possible margins and gutters that can be used in a grid.\n","context":{"type":"variable","name":"md-grid-available-margins-and-gutters","value":"(8px 16px 24px 40px)","scope":"private","line":{"start":68,"end":68}}}],"group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"The breakpoint to use for modifying the grid for tablet devices.\n","commentRange":{"start":23,"end":24},"context":{"type":"variable","name":"md-grid-tablet-breakpoint","value":"600px","scope":"default","line":{"start":25,"end":25}},"type":"Number","group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"},"usedBy":[{"description":"This creates another custom grid with a suffix. This is really only useful if\nyou will have different grid layouts in your application depending on the page.\n\n","context":{"type":"mixin","name":"react-md-make-custom-grid","code":"\n  @if $phone-columns > 0 {\n    @media (max-width: $md-grid-tablet-breakpoint - 1) {\n      @include react-md-make-grid('phone', $phone-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $tablet-columns > 0 {\n    @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n      @include react-md-make-grid('tablet', $tablet-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $desktop-columns > 0 {\n    @media (min-width: $md-grid-desktop-breakpoint) {\n      @include react-md-make-grid('desktop', $desktop-columns, $margin, $gutter, $suffix);\n    }\n  }\n","line":{"start":248,"end":273}}},{"description":"Includes all the media queries and styles for grids.\n\n","context":{"type":"mixin","name":"react-md-grid-media","code":"\n  @media (max-width: $md-grid-tablet-breakpoint - 1) {\n    @include react-md-grid-mobile;\n  }\n\n  @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n    @include react-md-grid-tablet;\n  }\n\n  @media (min-width: $md-grid-desktop-breakpoint) {\n    @include react-md-grid-desktop;\n  }\n","line":{"start":366,"end":378}}}]},{"description":"The number of columns to use for tablet devices. This _should_\nprobably not be changed.\n","commentRange":{"start":27,"end":29},"context":{"type":"variable","name":"md-grid-tablet-columns","value":"8","scope":"default","line":{"start":30,"end":30}},"type":"Number","group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"The margin to use for grids on tablet devices. This should be\none of the values in `$md-grid-available-margins-and-gutters`.\n","commentRange":{"start":32,"end":35},"context":{"type":"variable","name":"md-grid-tablet-margin","value":"$md-grid-phone-gutter","scope":"default","line":{"start":36,"end":36}},"type":"Number","see":[{"description":"The possible margins and gutters that can be used in a grid.\n","context":{"type":"variable","name":"md-grid-available-margins-and-gutters","value":"(8px 16px 24px 40px)","scope":"private","line":{"start":68,"end":68}}}],"group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"The gutter to use for grids on tablet devices. This should be\none of the values in `$md-grid-available-margins-and-gutters`.\n","commentRange":{"start":38,"end":41},"context":{"type":"variable","name":"md-grid-tablet-gutter","value":"$md-grid-phone-gutter","scope":"default","line":{"start":42,"end":42}},"type":"Number","see":[{"description":"The possible margins and gutters that can be used in a grid.\n","context":{"type":"variable","name":"md-grid-available-margins-and-gutters","value":"(8px 16px 24px 40px)","scope":"private","line":{"start":68,"end":68}}}],"group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"The breakpoint to use for modifying the grid for desktop / larger\nscreens.\n","commentRange":{"start":45,"end":47},"context":{"type":"variable","name":"md-grid-desktop-breakpoint","value":"840px","scope":"default","line":{"start":48,"end":48}},"type":"Number","group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"},"usedBy":[{"description":"This creates another custom grid with a suffix. This is really only useful if\nyou will have different grid layouts in your application depending on the page.\n\n","context":{"type":"mixin","name":"react-md-make-custom-grid","code":"\n  @if $phone-columns > 0 {\n    @media (max-width: $md-grid-tablet-breakpoint - 1) {\n      @include react-md-make-grid('phone', $phone-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $tablet-columns > 0 {\n    @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n      @include react-md-make-grid('tablet', $tablet-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $desktop-columns > 0 {\n    @media (min-width: $md-grid-desktop-breakpoint) {\n      @include react-md-make-grid('desktop', $desktop-columns, $margin, $gutter, $suffix);\n    }\n  }\n","line":{"start":248,"end":273}}},{"description":"Includes all the media queries and styles for grids.\n\n","context":{"type":"mixin","name":"react-md-grid-media","code":"\n  @media (max-width: $md-grid-tablet-breakpoint - 1) {\n    @include react-md-grid-mobile;\n  }\n\n  @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n    @include react-md-grid-tablet;\n  }\n\n  @media (min-width: $md-grid-desktop-breakpoint) {\n    @include react-md-grid-desktop;\n  }\n","line":{"start":366,"end":378}}}]},{"description":"The number of columns to use for grids on desktop / larger screens.\n","commentRange":{"start":50,"end":51},"context":{"type":"variable","name":"md-grid-desktop-columns","value":"12","scope":"default","line":{"start":52,"end":52}},"type":"Number","group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"The margin to use for grids on desktop screens. This should be\none of the values in `$md-grid-available-margins-and-gutters`.\n","commentRange":{"start":54,"end":57},"context":{"type":"variable","name":"md-grid-desktop-margin","value":"$md-grid-phone-margin","scope":"default","line":{"start":58,"end":58}},"type":"Number","see":[{"description":"The possible margins and gutters that can be used in a grid.\n","context":{"type":"variable","name":"md-grid-available-margins-and-gutters","value":"(8px 16px 24px 40px)","scope":"private","line":{"start":68,"end":68}}}],"group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"The gutter to use for grids on desktop screens. This should be\none of the values in `$md-grid-available-margins-and-gutters`.\n","commentRange":{"start":60,"end":63},"context":{"type":"variable","name":"md-grid-desktop-gutter","value":"$md-grid-phone-gutter","scope":"default","line":{"start":64,"end":64}},"type":"Number","see":[{"description":"The possible margins and gutters that can be used in a grid.\n","context":{"type":"variable","name":"md-grid-available-margins-and-gutters","value":"(8px 16px 24px 40px)","scope":"private","line":{"start":68,"end":68}}}],"group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"The possible margins and gutters that can be used in a grid.\n","commentRange":{"start":66,"end":67},"context":{"type":"variable","name":"md-grid-available-margins-and-gutters","value":"(8px 16px 24px 40px)","scope":"private","line":{"start":68,"end":68}},"type":"List","group":["grid"],"access":"public","file":{"path":"_grid.scss","name":"_grid.scss"},"usedBy":[{"description":"Creates the grid with the given params.\n\n","context":{"type":"mixin","name":"react-md-make-grid","code":"\n  $index: index($md-grid-available-margins-and-gutters, $margin);\n  @if not $index {\n    @warn 'The given `margin` is not a valid margin for a material design grid.';\n    @warn 'A valid margin is one of the following: #{$md-grid-available-margins-and-gutters}';\n  }\n\n  $index: index($md-grid-available-margins-and-gutters, $gutter);\n  @if not $index {\n    @warn 'The given `gutter` is not a valid gutter for a material design grid.';\n    @warn 'A valid gutter is one of the following: #{$md-grid-available-margins-and-gutters}';\n  }\n\n  $grid-padding: $margin - ($gutter / 2);\n  @if $suffix {\n    .md-grid--#{$suffix} {\n      @include react-md-make-cells($columns, $margin, $gutter, $media-type);\n\n      padding: $grid-padding;\n    }\n  } @else {\n    .md-grid {\n      padding: $grid-padding;\n    }\n\n    @include react-md-make-cells($columns, $margin, $gutter, $media-type);\n  }\n","line":{"start":287,"end":314}}}]},{"description":"Creates the styles for grids in material design. This basically\ncreates a main flex container `.md-grid` that will style cells\nwith appropriate margins and widths.\n\nThe following classes will be created:\n\n`.md-grid` - The main flex container. You should use this along with the `.md-cell` to get\nthe correct gutter and margins for a material desing page.\n\n`.md-grid--no-spacing` - An optional class name to use with the `.md-grid`. When they are used\ntogether, all the margins and spacings will be removed from the grid.\n\n`.md-cell` - The main container for a column or cell in the grid. If this is used alone, the default\nbehavior is to display 1 cell per row on mobile devices, 2 cells per row on tablets, and 3 cells per row\non desktop / larger screens. For more fine tuning, it can be used along with one of the following.\n\n`.md-cell--NUMBER` - This is will allow a cell to span this many columns on all media sizes. When the `NUMBER`\nis greater than the number of columns allowed for a media device, it will span the entire row. This basically means\nthat if you are using the base configuration options and following the material design specs, mobile devices only\nallow 4 columns per row, tablets 8 per row, and desktops 12. So specifying `.md-cell .md-cell--6` would span an\nentire row on mobile devices, 3/4 of a row on tablets, and 1/2 of a row on desktops.\n\n`md-cell--order-NUMBER` - This is an optional class name you can apply if you want this item to appear in a different\norder on the grid.\n\n`.md-cell--NUMBER-offset` - This will offset the cell by the given number of columns. If the `number` is greater\nthan the maximum amount of columsn allowed for the device's screen size, an entire row will be blank.\n\n`.md-cell--right` - This simply applies `margin-left: auto` to a cell. This is basically the same as applying\n`float: right` in a row.\n\n`.md-cell--top` - This aligns the cell to the top of a row.\n\n`.md-cell--middle` - This aligns the cell to the middle of a row.\n\n`.md-cell--bottom` - This aligns the cell to the bottom of a row.\n\n`.md-cell--stretch` - This aligns the cell to stretch the entire height of a row. This is the default behavior.\n\n`.md-cell--NUMBER-phone` - This will set the cell's size only for mobile devices.\n\n`.md-cell--NUMBER-tablet` - This will set the cell's size only for tablet devices.\n\n`.md-cell--NUMBER-desktop` - This will set the cell's size only for desktop / large screens.\n\n`.md-cell--order-NUMBER-phone` - This will set the cell's order only for mobile devices.\n\n`.md-cell--order-NUMBER-tablet` - This will set the cell's order only for tablet devices.\n\n`.md-cell--order-NUMBER-desktop` - This will set the cell's order only for desktop / large screens.\n\n`.md-cell--NUMBER-offset-phone` - This will offset the cell's position only for mobile devices.\n\n`.md-cell--NUMBER-offset-tablet` - This will offset the cell's position for tablet devices.\n\n`.md-cell--NUMBER-offset-desktop` - This will offset the cell's position for desktop / large screens.\n\n","commentRange":{"start":78,"end":139},"context":{"type":"mixin","name":"react-md-grid","code":"\n  .md-grid {\n    align-items: stretch;\n    display: flex;\n    flex-flow: row wrap;\n    margin: 0 auto;\n\n    &.md-grid--no-spacing {\n      padding: 0;\n\n      > .md-cell {\n        margin: 0;\n      }\n    }\n  }\n\n  .md-cell--top {\n    align-self: flex-start;\n  }\n\n  .md-cell--middle {\n    align-self: center;\n  }\n\n  .md-cell--bottom {\n    align-self: flex-end;\n  }\n\n  .md-cell--stretch {\n    align-self: stretch;\n  }\n\n  .md-cell--right {\n    @extend %md-cell--right;\n  }\n\n  @if $include-media {\n    @include react-md-grid-media;\n  }\n","line":{"start":140,"end":179}},"example":[{"type":"scss","code":"@include react-md-grid;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-media","default":"$md-media-included","description":"Boolean if the media queries should be included as well.\n    If this is false, you will manually need to call the media mixins to get any useful grid."}],"group":["grid"],"access":"public","require":[{"type":"mixin","name":"react-md-grid-media"}],"file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"Creates a grid for mobile devices. This should normally be used in a media query\nor the `react-md-grid-media` mixin.\n\n","commentRange":{"start":181,"end":191},"context":{"type":"mixin","name":"react-md-grid-mobile","code":"\n  @include react-md-make-grid('phone', $columns, $margin, $gutter);\n","line":{"start":192,"end":194}},"example":[{"type":"scss","code":"@media (max-width: $md-grid-tablet-breakpoint - 1) {\n  @include react-md-grid-mobile;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Number","name":"columns","default":"$md-grid-phone-columns","description":"The number of columns to use."},{"type":"Number","name":"margin","default":"$md-grid-phone-margin","description":"The margin to use."},{"type":"Number","name":"gutter","default":"$md-grid-phone-gutter","description":"The gutter to use."}],"group":["grid"],"access":"public","require":[{"type":"mixin","name":"react-md-make-grid"}],"file":{"path":"_grid.scss","name":"_grid.scss"},"usedBy":[{"description":"Includes all the media queries and styles for grids.\n\n","context":{"type":"mixin","name":"react-md-grid-media","code":"\n  @media (max-width: $md-grid-tablet-breakpoint - 1) {\n    @include react-md-grid-mobile;\n  }\n\n  @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n    @include react-md-grid-tablet;\n  }\n\n  @media (min-width: $md-grid-desktop-breakpoint) {\n    @include react-md-grid-desktop;\n  }\n","line":{"start":366,"end":378}}}]},{"description":"Creates a grid for tablet devices. This should normally be used in a media query\nor the `react-md-grid-media` mixin.\n\n","commentRange":{"start":197,"end":207},"context":{"type":"mixin","name":"react-md-grid-tablet","code":"\n  @include react-md-make-grid('tablet', $columns, $margin, $gutter);\n","line":{"start":208,"end":210}},"example":[{"type":"scss","code":"@media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n  @include react-md-grid-tablet;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Number","name":"columns","default":"$md-grid-tablet-columns","description":"The number of columns to use."},{"type":"Number","name":"margin","default":"$md-grid-tablet-margin","description":"The margin to use."},{"type":"Number","name":"gutter","default":"$md-grid-tablet-gutter","description":"The gutter to use."}],"group":["grid"],"access":"public","require":[{"type":"mixin","name":"react-md-make-grid"}],"file":{"path":"_grid.scss","name":"_grid.scss"},"usedBy":[{"description":"Includes all the media queries and styles for grids.\n\n","context":{"type":"mixin","name":"react-md-grid-media","code":"\n  @media (max-width: $md-grid-tablet-breakpoint - 1) {\n    @include react-md-grid-mobile;\n  }\n\n  @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n    @include react-md-grid-tablet;\n  }\n\n  @media (min-width: $md-grid-desktop-breakpoint) {\n    @include react-md-grid-desktop;\n  }\n","line":{"start":366,"end":378}}}]},{"description":"Creates a grid for desktops and larger screens. This should normally be used in a media query\nor the `react-md-grid-media` mixin.\n\n","commentRange":{"start":213,"end":223},"context":{"type":"mixin","name":"react-md-grid-desktop","code":"\n  @include react-md-make-grid('desktop', $columns, $margin, $gutter);\n","line":{"start":224,"end":226}},"example":[{"type":"scss","code":"@media (min-width: $md-grid-desktop-breakpoint) {\n  @include react-md-grid-desktop;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Number","name":"columns","default":"$md-grid-desktop-columns","description":"The number of columns to use."},{"type":"Number","name":"margin","default":"$md-grid-desktop-margin","description":"The margin to use."},{"type":"Number","name":"gutter","default":"$md-grid-desktop-gutter","description":"The gutter to use."}],"group":["grid"],"access":"public","require":[{"type":"mixin","name":"react-md-make-grid"}],"file":{"path":"_grid.scss","name":"_grid.scss"},"usedBy":[{"description":"Includes all the media queries and styles for grids.\n\n","context":{"type":"mixin","name":"react-md-grid-media","code":"\n  @media (max-width: $md-grid-tablet-breakpoint - 1) {\n    @include react-md-grid-mobile;\n  }\n\n  @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n    @include react-md-grid-tablet;\n  }\n\n  @media (min-width: $md-grid-desktop-breakpoint) {\n    @include react-md-grid-desktop;\n  }\n","line":{"start":366,"end":378}}}]},{"description":"This creates another custom grid with a suffix. This is really only useful if\nyou will have different grid layouts in your application depending on the page.\n\n","commentRange":{"start":228,"end":247},"context":{"type":"mixin","name":"react-md-make-custom-grid","code":"\n  @if $phone-columns > 0 {\n    @media (max-width: $md-grid-tablet-breakpoint - 1) {\n      @include react-md-make-grid('phone', $phone-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $tablet-columns > 0 {\n    @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n      @include react-md-make-grid('tablet', $tablet-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $desktop-columns > 0 {\n    @media (min-width: $md-grid-desktop-breakpoint) {\n      @include react-md-make-grid('desktop', $desktop-columns, $margin, $gutter, $suffix);\n    }\n  }\n","line":{"start":248,"end":273}},"example":[{"type":"scss","code":"@include react-md-custum-grid('24-40', 24px, 40px);","description":"Example Usage SCSS"},{"type":"scss","code":".md-grid--24-40 {\n  ... styles ...\n}","description":"Example Usage CSS Output"}],"parameter":[{"type":"String","name":"suffix","description":"The suffix to apply to the end of `.md-grid--`."},{"type":"Number","name":"margin","description":"The margin to use. This must be unitful number."},{"type":"Number","name":"gutter","description":"The gutter to use. This must be unitful number."},{"type":"Number","name":"phone-columns","default":"$md-grid-phone-columns","description":"The number of columns to use on mobile\n    devices. If this value is less than or equal to 0, the phone media query will not be created."},{"type":"Number","name":"tablet-columns","default":"$md-grid-tablet-columns","description":"The number of columns to use on mobile\n    devices. If this value is less than or equal to 0, the tablet media query will not be created."},{"type":"Number","name":"desktop-columns","default":"$md-grid-desktop-columns","description":"The number of columns to use on mobile\n    devices. If this value is less than or equal to 0, the desktop media query will not be created."}],"group":["grid"],"access":"public","require":[{"type":"mixin","name":"react-md-make-grid"},{"type":"variable","name":"md-grid-tablet-breakpoint"},{"type":"variable","name":"md-grid-desktop-breakpoint"}],"file":{"path":"_grid.scss","name":"_grid.scss"}},{"description":"Creates the grid with the given params.\n\n","commentRange":{"start":275,"end":286},"context":{"type":"mixin","name":"react-md-make-grid","code":"\n  $index: index($md-grid-available-margins-and-gutters, $margin);\n  @if not $index {\n    @warn 'The given `margin` is not a valid margin for a material design grid.';\n    @warn 'A valid margin is one of the following: #{$md-grid-available-margins-and-gutters}';\n  }\n\n  $index: index($md-grid-available-margins-and-gutters, $gutter);\n  @if not $index {\n    @warn 'The given `gutter` is not a valid gutter for a material design grid.';\n    @warn 'A valid gutter is one of the following: #{$md-grid-available-margins-and-gutters}';\n  }\n\n  $grid-padding: $margin - ($gutter / 2);\n  @if $suffix {\n    .md-grid--#{$suffix} {\n      @include react-md-make-cells($columns, $margin, $gutter, $media-type);\n\n      padding: $grid-padding;\n    }\n  } @else {\n    .md-grid {\n      padding: $grid-padding;\n    }\n\n    @include react-md-make-cells($columns, $margin, $gutter, $media-type);\n  }\n","line":{"start":287,"end":314}},"example":[{"type":"scss","code":"@include react-md-make-grid('phone', $md-grid-phone-columns, $md-grid-phone-margin, $md-grid-phone-gutter);","description":"Example Usage SCSS"}],"parameter":[{"type":"String","name":"media-type","description":"The media type to create additional overrides for."},{"type":"Number","name":"columns","description":"The number of columns for this media type to create."},{"type":"Number","name":"margin","description":"The margin to use for this media type."},{"type":"Number","name":"gutter","description":"The gutter to use for this media type."},{"type":"String","name":"suffix","default":"null","description":"An optional suffix to apply to the `.md-grid`. This is really\n    only used when using the `react-md-make-custom-grid` mixin."}],"see":[{"description":"This creates another custom grid with a suffix. This is really only useful if\nyou will have different grid layouts in your application depending on the page.\n\n","context":{"type":"mixin","name":"react-md-make-custom-grid","code":"\n  @if $phone-columns > 0 {\n    @media (max-width: $md-grid-tablet-breakpoint - 1) {\n      @include react-md-make-grid('phone', $phone-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $tablet-columns > 0 {\n    @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n      @include react-md-make-grid('tablet', $tablet-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $desktop-columns > 0 {\n    @media (min-width: $md-grid-desktop-breakpoint) {\n      @include react-md-make-grid('desktop', $desktop-columns, $margin, $gutter, $suffix);\n    }\n  }\n","line":{"start":248,"end":273}}}],"group":["grid"],"access":"public","require":[{"type":"mixin","name":"react-md-make-cells"},{"type":"variable","name":"md-grid-available-margins-and-gutters"}],"file":{"path":"_grid.scss","name":"_grid.scss"},"usedBy":[{"description":"Creates a grid for mobile devices. This should normally be used in a media query\nor the `react-md-grid-media` mixin.\n\n","context":{"type":"mixin","name":"react-md-grid-mobile","code":"\n  @include react-md-make-grid('phone', $columns, $margin, $gutter);\n","line":{"start":192,"end":194}}},{"description":"Creates a grid for tablet devices. This should normally be used in a media query\nor the `react-md-grid-media` mixin.\n\n","context":{"type":"mixin","name":"react-md-grid-tablet","code":"\n  @include react-md-make-grid('tablet', $columns, $margin, $gutter);\n","line":{"start":208,"end":210}}},{"description":"Creates a grid for desktops and larger screens. This should normally be used in a media query\nor the `react-md-grid-media` mixin.\n\n","context":{"type":"mixin","name":"react-md-grid-desktop","code":"\n  @include react-md-make-grid('desktop', $columns, $margin, $gutter);\n","line":{"start":224,"end":226}}},{"description":"This creates another custom grid with a suffix. This is really only useful if\nyou will have different grid layouts in your application depending on the page.\n\n","context":{"type":"mixin","name":"react-md-make-custom-grid","code":"\n  @if $phone-columns > 0 {\n    @media (max-width: $md-grid-tablet-breakpoint - 1) {\n      @include react-md-make-grid('phone', $phone-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $tablet-columns > 0 {\n    @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n      @include react-md-make-grid('tablet', $tablet-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $desktop-columns > 0 {\n    @media (min-width: $md-grid-desktop-breakpoint) {\n      @include react-md-make-grid('desktop', $desktop-columns, $margin, $gutter, $suffix);\n    }\n  }\n","line":{"start":248,"end":273}}}]},{"description":"Creates the cells in a grid. This should normally only be used within the `react-md-make-grid` mixin.\n","commentRange":{"start":316,"end":321},"context":{"type":"mixin","name":"react-md-make-cells","code":"\n  .md-cell {\n    @include react-md-cell-size($md-grid-default-columns, $columns, $gutter);\n\n    margin: $gutter / 2;\n  }\n\n  .md-cell--#{$media-type}-hidden {\n    // scss-lint:disable ImportantRule\n    display: none !important;\n  }\n\n  @for $i from 1 through $md-grid-max-columns {\n    .md-cell--order-#{$i}-#{$media-type}.md-cell--order-#{$i}-#{$media-type} {\n      order: $i;\n    }\n  }\n\n  @for $i from 1 through ($columns - 1) {\n    .md-cell--#{$i},\n    .md-cell--#{$i}-#{$media-type}.md-cell--#{$i}-#{$media-type} {\n      @include react-md-cell-size($i, $columns, $gutter);\n    }\n  }\n\n  @for $i from $columns through $md-grid-max-columns {\n    .md-cell--#{$i},\n    .md-cell--#{$i}-#{$media-type}.md-cell--#{$i}-#{$media-type} {\n      @include react-md-grid-full($gutter);\n    }\n  }\n\n  @for $i from 1 through ($columns - 1) {\n    .md-cell--#{$i}-offset,\n    .md-cell--#{$i}-#{$media-type}-offset.md-cell--#{$i}-#{$media-type}-offset {\n      @include react-md-cell-offset($i, $columns, $gutter);\n    }\n  }\n","line":{"start":322,"end":360}},"parameter":[{"type":"Number","name":"columns","description":"The number of columns for the given media type."},{"type":"Number","name":"margin","description":"The margin to use for the given media type."},{"type":"Number","name":"gutter","description":"The gutter to use for the given media type."},{"type":"String","name":"media-type","description":"The current media type."}],"see":[{"description":"Creates the grid with the given params.\n\n","context":{"type":"mixin","name":"react-md-make-grid","code":"\n  $index: index($md-grid-available-margins-and-gutters, $margin);\n  @if not $index {\n    @warn 'The given `margin` is not a valid margin for a material design grid.';\n    @warn 'A valid margin is one of the following: #{$md-grid-available-margins-and-gutters}';\n  }\n\n  $index: index($md-grid-available-margins-and-gutters, $gutter);\n  @if not $index {\n    @warn 'The given `gutter` is not a valid gutter for a material design grid.';\n    @warn 'A valid gutter is one of the following: #{$md-grid-available-margins-and-gutters}';\n  }\n\n  $grid-padding: $margin - ($gutter / 2);\n  @if $suffix {\n    .md-grid--#{$suffix} {\n      @include react-md-make-cells($columns, $margin, $gutter, $media-type);\n\n      padding: $grid-padding;\n    }\n  } @else {\n    .md-grid {\n      padding: $grid-padding;\n    }\n\n    @include react-md-make-cells($columns, $margin, $gutter, $media-type);\n  }\n","line":{"start":287,"end":314}}}],"group":["grid"],"access":"public","require":[],"file":{"path":"_grid.scss","name":"_grid.scss"},"usedBy":[{"description":"Creates the grid with the given params.\n\n","context":{"type":"mixin","name":"react-md-make-grid","code":"\n  $index: index($md-grid-available-margins-and-gutters, $margin);\n  @if not $index {\n    @warn 'The given `margin` is not a valid margin for a material design grid.';\n    @warn 'A valid margin is one of the following: #{$md-grid-available-margins-and-gutters}';\n  }\n\n  $index: index($md-grid-available-margins-and-gutters, $gutter);\n  @if not $index {\n    @warn 'The given `gutter` is not a valid gutter for a material design grid.';\n    @warn 'A valid gutter is one of the following: #{$md-grid-available-margins-and-gutters}';\n  }\n\n  $grid-padding: $margin - ($gutter / 2);\n  @if $suffix {\n    .md-grid--#{$suffix} {\n      @include react-md-make-cells($columns, $margin, $gutter, $media-type);\n\n      padding: $grid-padding;\n    }\n  } @else {\n    .md-grid {\n      padding: $grid-padding;\n    }\n\n    @include react-md-make-cells($columns, $margin, $gutter, $media-type);\n  }\n","line":{"start":287,"end":314}}}]},{"description":"Includes all the media queries and styles for grids.\n\n","commentRange":{"start":362,"end":365},"context":{"type":"mixin","name":"react-md-grid-media","code":"\n  @media (max-width: $md-grid-tablet-breakpoint - 1) {\n    @include react-md-grid-mobile;\n  }\n\n  @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n    @include react-md-grid-tablet;\n  }\n\n  @media (min-width: $md-grid-desktop-breakpoint) {\n    @include react-md-grid-desktop;\n  }\n","line":{"start":366,"end":378}},"example":[{"type":"scss","code":"@include react-md-grid-media;","description":"Example Usage SCSS"}],"group":["grid"],"access":"public","require":[{"type":"mixin","name":"react-md-grid-mobile"},{"type":"mixin","name":"react-md-grid-tablet"},{"type":"mixin","name":"react-md-grid-desktop"},{"type":"variable","name":"md-grid-tablet-breakpoint"},{"type":"variable","name":"md-grid-desktop-breakpoint"}],"file":{"path":"_grid.scss","name":"_grid.scss"},"usedBy":[{"description":"Creates the styles for grids in material design. This basically\ncreates a main flex container `.md-grid` that will style cells\nwith appropriate margins and widths.\n\nThe following classes will be created:\n\n`.md-grid` - The main flex container. You should use this along with the `.md-cell` to get\nthe correct gutter and margins for a material desing page.\n\n`.md-grid--no-spacing` - An optional class name to use with the `.md-grid`. When they are used\ntogether, all the margins and spacings will be removed from the grid.\n\n`.md-cell` - The main container for a column or cell in the grid. If this is used alone, the default\nbehavior is to display 1 cell per row on mobile devices, 2 cells per row on tablets, and 3 cells per row\non desktop / larger screens. For more fine tuning, it can be used along with one of the following.\n\n`.md-cell--NUMBER` - This is will allow a cell to span this many columns on all media sizes. When the `NUMBER`\nis greater than the number of columns allowed for a media device, it will span the entire row. This basically means\nthat if you are using the base configuration options and following the material design specs, mobile devices only\nallow 4 columns per row, tablets 8 per row, and desktops 12. So specifying `.md-cell .md-cell--6` would span an\nentire row on mobile devices, 3/4 of a row on tablets, and 1/2 of a row on desktops.\n\n`md-cell--order-NUMBER` - This is an optional class name you can apply if you want this item to appear in a different\norder on the grid.\n\n`.md-cell--NUMBER-offset` - This will offset the cell by the given number of columns. If the `number` is greater\nthan the maximum amount of columsn allowed for the device's screen size, an entire row will be blank.\n\n`.md-cell--right` - This simply applies `margin-left: auto` to a cell. This is basically the same as applying\n`float: right` in a row.\n\n`.md-cell--top` - This aligns the cell to the top of a row.\n\n`.md-cell--middle` - This aligns the cell to the middle of a row.\n\n`.md-cell--bottom` - This aligns the cell to the bottom of a row.\n\n`.md-cell--stretch` - This aligns the cell to stretch the entire height of a row. This is the default behavior.\n\n`.md-cell--NUMBER-phone` - This will set the cell's size only for mobile devices.\n\n`.md-cell--NUMBER-tablet` - This will set the cell's size only for tablet devices.\n\n`.md-cell--NUMBER-desktop` - This will set the cell's size only for desktop / large screens.\n\n`.md-cell--order-NUMBER-phone` - This will set the cell's order only for mobile devices.\n\n`.md-cell--order-NUMBER-tablet` - This will set the cell's order only for tablet devices.\n\n`.md-cell--order-NUMBER-desktop` - This will set the cell's order only for desktop / large screens.\n\n`.md-cell--NUMBER-offset-phone` - This will offset the cell's position only for mobile devices.\n\n`.md-cell--NUMBER-offset-tablet` - This will offset the cell's position for tablet devices.\n\n`.md-cell--NUMBER-offset-desktop` - This will offset the cell's position for desktop / large screens.\n\n","context":{"type":"mixin","name":"react-md-grid","code":"\n  .md-grid {\n    align-items: stretch;\n    display: flex;\n    flex-flow: row wrap;\n    margin: 0 auto;\n\n    &.md-grid--no-spacing {\n      padding: 0;\n\n      > .md-cell {\n        margin: 0;\n      }\n    }\n  }\n\n  .md-cell--top {\n    align-self: flex-start;\n  }\n\n  .md-cell--middle {\n    align-self: center;\n  }\n\n  .md-cell--bottom {\n    align-self: flex-end;\n  }\n\n  .md-cell--stretch {\n    align-self: stretch;\n  }\n\n  .md-cell--right {\n    @extend %md-cell--right;\n  }\n\n  @if $include-media {\n    @include react-md-grid-media;\n  }\n","line":{"start":140,"end":179}}}]}]