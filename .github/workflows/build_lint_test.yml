# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build, Lint, and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_node_matrix:
    name: Build Using Node Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2

    - name: Get yarn cache directory
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache node_modules
      uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ matrix.node-version }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.2
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn
    - run: yarn setup
    - run: yarn dev-utils doc-index
    - run: yarn lint
    - run: yarn test -i

  build_node_14:
    # only want to use codecov for node 14
    name: Build Using Node 14
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Get yarn cache directory
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache node_modules
      uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-14
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Use Node.js 14
      uses: actions/setup-node@v2.1.2
      with:
        node-version: 14
    - run: yarn
    - run: yarn setup
    - run: yarn dev-utils doc-index
    - run: yarn lint
    - run: yarn test -i --coverage
    - run: npx codecov -t ${{ secrets.CODECOV_TOKEN }}
